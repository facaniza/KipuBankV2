{
	"id": "f1492a5d5d33d1001d359da41520f267",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KipuBank.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.30;\n\n    /// @title KipuBank - Un banco en blockchain\n    /// @author Facundo Alejandro Caniza\n\n/// @notice Importaciones de OpenZeppelin\n/// @dev Se debe importar las librerias/contratos ReentrancyGuard, IERC20, SafeIERC y Ownable\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @notice Importación de interfaz de Chainlink\n/// @dev Usamos la importación de Data Feeds\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\ncontract KipuBank is ReentrancyGuard, Ownable {\n\n    /// @dev Se amplia funcionalidad segura al IERC20\n    using SafeERC20 for IERC20;\n\n    /// @notice Direccion del Token ERC20\n    /// @dev Es especifico para el token USDC\n    IERC20 immutable i_usdc;\n\n    /// @notice Interfaz publica del data feed\n    /// @dev Utilizamos el data feed de Chainlink\n    AggregatorV3Interface public i_feed;\n\n    /// @notice Constante de refresco del precio del data feed\n    /// @dev Por convención se establece en 3600\n    uint16 constant HEARTBEAT = 3600;\n\n    /// @notice Constante de decimales de conversión\n    /// @dev Se hace la suma de los decimales de ethereum y de los decimales de la conversión de chainlink para restarles los decimales de USDC, nos da la base igualitaria\n    uint constant DECIMAL_FACTOR = 1 * 10 ** 20;\n\n    /// @notice Umbral para fijo para transaccion\n    uint immutable i_umbral;\n\n    /// @notice Limite global de deposito\n    /// @dev Tener en cuenta que el limite global será en USD\n    uint immutable i_bankCap;\n\n    /// @notice Cantidad de depositos del contrato\n    uint private _depositos = 0;\n\n    /// @notice Cantidad de retiros del contrato\n    uint private _retiros = 0;\n\n    /// @notice Total de ether depositado en el contrato\n    /// @dev El total del contrato es en USD\n    uint private _totalContrato = 0;\n\n    /// @notice Estructura que almacena por titular el monto que posee en los diferentes tokens\n    mapping (address token => mapping (address titular => uint monto)) private _cuentasMultiToken;\n\n    /// @notice Estructura que almacena el total de la boveda del titular\n    /// @dev El total se calcula en USD\n    mapping (address titular => uint monto) private _boveda;\n\n\n    /// @notice Evento para depositos realizado exitosamente\n    /// @param titular titular que realiza el detposito\n    /// @param monto monto que se desea depositar\n    event KipuBank_DepositoRealizado(address titular, uint monto);\n\n    /// @notice Evento para extracciones realizadas exitosamente\n    /// @param titular titular que desea realizar la extracción\n    /// @param monto monto que se desea extraer\n    event KipuBank_ExtraccionRealizada(address titular, uint monto);\n\n\n\n    /// @notice Error de extraccion\n    /// @param titular titular de la cuenta a realizar la extracción\n    /// @param monto monto a extraer de la boveda\n    error KipuBank_ExtraccionRechazada(address titular, uint monto);\n\n    /// @notice Error por sobrepasarse del limite\n    /// @param monto monto que excede el limite a depositar\n    error KipuBank_LimiteExcedido(uint monto);\n\n    /// @notice Error por saldo insuficiente\n    /// @param titular titular con saldo insuficiente\n    /// @param monto monto a retirar\n    error KipuBank_SaldoInsuficiente(address titular, uint monto);\n\n    /// @notice Error por umbral excedido\n    /// @param monto que excede el umbral establecido\n    error KipuBank_UmbralExcedido(uint monto);\n\n    /// @notice Error monto cero\n    /// @param titular titular que emite una transaccion con valor nulo\n    error KipuBank_MontoCero(address titular);\n\n    /// @notice Error por umbral invalido\n    /// @param umbral umbral que es invalido\n    error KipuBank_UmbralInvalido(uint umbral);\n\n    /// @notice Error por limite invalido\n    /// @param limite limite que es invalido\n    error KipuBank_LimiteInvalido(uint limite);\n\n    /// @notice Error de umbral mayor al limite\n    /// @param umbral umbral del contrato\n    /// @param limite limite del contrato\n    error KipuBank_InicializacionInvalida(uint limite, uint umbral);\n\n    /// @notice Error por operacion no permitida\n    /// @param titular titular que realizo la operacion no permitida\n    error KipuBank_OperacionNoPermitida(address titular);\n\n    /// @notice Error por óraculo dando un precio equivoco\n    /// @param precio Precio que dió el óraculo\n    error KipuBank_OraculoComprometido(uint precio);\n\n    /// @notice Error por precio desactualizado\n    /// @param precio Es el precio que quedó desactualizado\n    error KipuBank_PrecioDesactualizado(uint precio);\n\n    /// @notice Constructor del contrato\n    /// @param _limite Limite global que se permite por transaccion\n    /// @param _umbral Umbral de limite de retiros\n    /// @param _feed Direccion del data feed a utlizar\n    /// @param _tokenERC20 Direccion del token ERC20 a utilizar\n    /// @dev Se deben generar el limite, umbral y las direcciones del data feed y el token a utilizar al momento de desplegar el contrato\n    constructor(uint _limite, uint _umbral, address _owner, address _feed, address _tokenERC20) Ownable(_owner) {\n        if(_limite == 0) revert KipuBank_LimiteInvalido(_limite);\n        if(_umbral == 0) revert KipuBank_UmbralInvalido(_umbral);\n        if(_umbral > _limite) revert KipuBank_InicializacionInvalida(_limite, _umbral);\n        if(_feed == address(0)) revert(); // error direccion de feeder invalida\n        if(_tokenERC20 == address(0)) revert(); // error direccion de token invalida\n        i_usdc = IERC20(_tokenERC20);\n        i_feed = AggregatorV3Interface(_feed);\n        i_bankCap = _limite;\n        i_umbral = _umbral;\n    }\n\n    /// @notice Funcion receive() no permitida\n    /// @dev El contrato no puede recibir ether sin data\n    receive() external payable { revert KipuBank_OperacionNoPermitida(msg.sender); }\n\n    /// @notice Funcion fallback() no permitida\n    /// @dev El contrato no puede enviar data de manera no autorizada\n    fallback() external payable { revert KipuBank_OperacionNoPermitida(msg.sender); }\n\n    /// @notice Función para realizar la consulta del precio mediante óraculo\n    /// @return precioUSD_ Retorna el precio en USD\n    /// @dev Usamos el óraculo de ChainLink\n    function chainLinkFeeds() internal view returns(uint precioUSD_) {\n        (, int256 ethUSDPrice,, uint256 updateAt,) = i_feed.latestRoundData();\n        if( ethUSDPrice == 0) revert KipuBank_OraculoComprometido(uint(ethUSDPrice));\n        if(block.timestamp - updateAt > HEARTBEAT) revert KipuBank_PrecioDesactualizado(uint(ethUSDPrice));\n\n        precioUSD_ = uint(ethUSDPrice);\n    }\n\n    /// @notice Modificador para verificar los depositos\n    /// @param _monto es el monto a verificar\n    modifier verificarDepositoETH(uint _monto) {\n        uint montoUSDC = convertirEthEnUSDC(_monto);\n        if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender);\n        if (montoUSDC + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(montoUSDC);\n        _;\n    }\n\n    /// @notice Modificador para verificar los depositos\n    /// @param _monto es el monto a verificar\n    modifier verificarDepositoUSDC(uint _monto) {\n        if(_monto == 0) revert KipuBank_MontoCero(msg.sender);\n        if (_monto + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(_monto);\n        _;\n    }    \n\n    /// @notice Modificador para verificar los retiros\n    /// @param _monto monto a verificar para el retiro\n    /// @dev El umbral solo se aplica a los retiros de boveda\n    modifier verificarRetiroETH(uint _monto) {\n        uint montoUSDC = convertirEthEnUSDC(_monto);\n        if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender);\n        if (montoUSDC > i_umbral) revert KipuBank_UmbralExcedido(montoUSDC);\n        if (_monto > _cuentasMultiToken[address(0)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, montoUSDC);\n        _;\n    }\n\n    /// @notice Modificador para verificar los retiros\n    /// @param _monto monto a verificar para el retiro\n    /// @dev El umbral solo se aplica a los retiros de boveda\n    modifier verificarRetiroUSDC(uint _monto) {\n        if(_monto == 0) revert KipuBank_MontoCero(msg.sender);\n        if (_monto > i_umbral) revert KipuBank_UmbralExcedido(_monto);\n        if (_monto > _cuentasMultiToken[address(i_usdc)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, _monto);\n        _;\n    }    \n\n    /// @notice Funcion privada para realizar el retiro efectivo de fondos en ETH\n    /// @param _monto recibe el monto a retirar de la boveda\n    /// @dev Se actualiza el estado antes de la transferencia para aplicar el patrón CEI\n    /// @dev Se utiliza la funcion de OpenZeppelin para el nonReentrant\n    function _retirarFondosETH(uint _monto) private nonReentrant verificarRetiroETH(_monto) {\n        uint montoUSDC = convertirEthEnUSDC(_monto);\n        _boveda[msg.sender] -= montoUSDC;\n        _cuentasMultiToken[address(0)][msg.sender] -= _monto;\n        _retiros++;\n        _totalContrato -= montoUSDC;\n        \n        emit KipuBank_ExtraccionRealizada(msg.sender, montoUSDC);\n\n        (bool success, ) = payable(msg.sender).call{value: _monto}(\"\");\n        if (!success) revert KipuBank_ExtraccionRechazada(msg.sender, _monto);\n    }\n\n    /// @notice Funcion privada para realizar el retiro efectivo de fondos en USDC\n    /// @param _monto recibe el monto a retirar de la boveda\n    /// @dev Se actualiza el estado antes de la transferencia para aplicar el patrón CEI\n    /// @dev Se utiliza la funcion de OpenZeppelin para el nonReentrant\n    /// @dev Se utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20\n    function _retirarFondosUSDC(uint _monto) private nonReentrant verificarRetiroUSDC(_monto) {\n        _boveda[msg.sender] -= _monto;\n        _cuentasMultiToken[address(i_usdc)][msg.sender] -= _monto;\n        _retiros++;\n        _totalContrato -= _monto;\n        \n        emit KipuBank_ExtraccionRealizada(msg.sender, _monto);\n        i_usdc.safeTransfer(msg.sender, _monto);\n    }\n\n    /// @notice Funcion externa para realizar el retiro de saldo en ETH\n    /// @param _monto es el monto a retirar de la boveda\n    function retirarETH(uint _monto) external  {\n        _retirarFondosETH(_monto);\n    }\n\n    /// @notice Funcion externa para realizar el retiro de saldo en USDC\n    /// @param _monto es el monto a retirar de la boveda\n    function retirarUSDC(uint _monto) external {\n        _retirarFondosUSDC(_monto);\n    }    \n\n    /// @notice Funcion para depositar en la boveda\n    /// @dev Es payable y usa el modificador de verificarDepositos\n    function depositarETH() external payable verificarDepositoETH(msg.value) {\n        uint montoUSDC = convertirEthEnUSDC(msg.value);\n        _cuentasMultiToken[address(0)][msg.sender] += msg.value;\n        _boveda[msg.sender] += montoUSDC;\n        _depositos++;\n        _totalContrato += montoUSDC;\n        emit KipuBank_DepositoRealizado(msg.sender, montoUSDC);\n    }\n\n    /// @notice Funcion para depositar en la boveda\n    /// @dev Es payable y usa el modificador de verificarDepositos\n    /// @dev Se utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20\n    /// @dev No se marca como payable ya que es un token ERC20 y no Ether\n    function depositarUSDC(uint _monto) external verificarDepositoUSDC(_monto) {\n        _cuentasMultiToken[address(i_usdc)][msg.sender] += _monto;\n        _boveda[msg.sender] += _monto;\n        _depositos++;\n        _totalContrato += _monto;\n        emit KipuBank_DepositoRealizado(msg.sender, _monto);\n        i_usdc.safeTransferFrom(msg.sender, address(this), _monto);\n    }\n    \n    /// @notice Funcion para convertir ETH en USDC\n    /// @param _monto Es el monto ingresado a convertir\n    /// @return montoConvertido_ Es el monto una vez convertido a USD\n    /// @dev La cuenta debe hacerse debido a que los decimales de USDC y ETH no son los mismos, por lo tanto, se nivelan las bases\n    function convertirEthEnUSDC(uint _monto) internal view returns (uint montoConvertido_) {\n            montoConvertido_ = (_monto * chainLinkFeeds()) / DECIMAL_FACTOR;\n    }\n\n    /// @notice Funcion para ver el saldo total guardado en el boveda en USD\n    /// @return monto_ devuelve el saldo depositado total en USD depositado por cada titular\n    function verBoveda() external view returns (uint monto_) {\n        monto_ = _boveda[msg.sender];\n    }\n\n    /// @notice Función para ver el saldo en USDC del titular\n    /// @return saldo_ Retorna el saldo en USDC\n    function verSaldoUSDC() external view returns (uint saldo_) {\n        saldo_ = _cuentasMultiToken[address(i_usdc)][msg.sender];\n    }\n\n    /// @notice Función para el saldo en ETH del titular\n    /// @return saldo_ Retornal el saldo en ETH\n    function verSaldoETH() external view returns (uint saldo_) {\n        saldo_ = _cuentasMultiToken[address(0)][msg.sender];\n    }\n\n    /// @notice Funcion para ver la cantidad total de los depositos realizados\n    /// @return Devuelve la cantidad de depositos\n    function verTotalDepositos() external view returns (uint) {\n        return _depositos;\n    }\n\n    /// @notice Funcion para ver la cantidad total de los retiros realizados\n    /// @return Devuelve la cantidad de retiros\n    function verTotalRetiros() external view returns (uint) {\n        return _retiros;\n    }\n\n    /// @notice Funcion para ver el saldo total del contrato en USD\n    /// @return Devuelve el saldo del contrato en USD\n    function verTotalContrato() external view returns (uint) {\n        return _totalContrato;\n    }\n\n    /// @notice Función para traspasar el contrato a otro dueño\n    /// @param _nuevoOwner Será la dirección del nuevo propietario del contrato\n    /// @dev El modificador de onlyOwner es necesario para seguridad\n    function transferirOwner(address _nuevoOwner) external onlyOwner {\n        transferOwnership(_nuevoOwner);\n    }\n\n}"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KipuBank.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_limite",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_umbral",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feed",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenERC20",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "titular",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_ExtraccionRechazada",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limite",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "umbral",
									"type": "uint256"
								}
							],
							"name": "KipuBank_InicializacionInvalida",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_LimiteExcedido",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limite",
									"type": "uint256"
								}
							],
							"name": "KipuBank_LimiteInvalido",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "titular",
									"type": "address"
								}
							],
							"name": "KipuBank_MontoCero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "titular",
									"type": "address"
								}
							],
							"name": "KipuBank_OperacionNoPermitida",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "precio",
									"type": "uint256"
								}
							],
							"name": "KipuBank_OraculoComprometido",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "precio",
									"type": "uint256"
								}
							],
							"name": "KipuBank_PrecioDesactualizado",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "titular",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_SaldoInsuficiente",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_UmbralExcedido",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "umbral",
									"type": "uint256"
								}
							],
							"name": "KipuBank_UmbralInvalido",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "titular",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_DepositoRealizado",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "titular",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "monto",
									"type": "uint256"
								}
							],
							"name": "KipuBank_ExtraccionRealizada",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "depositarETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_monto",
									"type": "uint256"
								}
							],
							"name": "depositarUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_feed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_monto",
									"type": "uint256"
								}
							],
							"name": "retirarETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_monto",
									"type": "uint256"
								}
							],
							"name": "retirarUSDC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nuevoOwner",
									"type": "address"
								}
							],
							"name": "transferirOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verBoveda",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "monto_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verSaldoETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "saldo_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verSaldoUSDC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "saldo_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verTotalContrato",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verTotalDepositos",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "verTotalRetiros",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"KipuBank_ExtraccionRechazada(address,uint256)": [
								{
									"params": {
										"monto": "monto a extraer de la boveda",
										"titular": "titular de la cuenta a realizar la extracción"
									}
								}
							],
							"KipuBank_InicializacionInvalida(uint256,uint256)": [
								{
									"params": {
										"limite": "limite del contrato",
										"umbral": "umbral del contrato"
									}
								}
							],
							"KipuBank_LimiteExcedido(uint256)": [
								{
									"params": {
										"monto": "monto que excede el limite a depositar"
									}
								}
							],
							"KipuBank_LimiteInvalido(uint256)": [
								{
									"params": {
										"limite": "limite que es invalido"
									}
								}
							],
							"KipuBank_MontoCero(address)": [
								{
									"params": {
										"titular": "titular que emite una transaccion con valor nulo"
									}
								}
							],
							"KipuBank_OperacionNoPermitida(address)": [
								{
									"params": {
										"titular": "titular que realizo la operacion no permitida"
									}
								}
							],
							"KipuBank_OraculoComprometido(uint256)": [
								{
									"params": {
										"precio": "Precio que dió el óraculo"
									}
								}
							],
							"KipuBank_PrecioDesactualizado(uint256)": [
								{
									"params": {
										"precio": "Es el precio que quedó desactualizado"
									}
								}
							],
							"KipuBank_SaldoInsuficiente(address,uint256)": [
								{
									"params": {
										"monto": "monto a retirar",
										"titular": "titular con saldo insuficiente"
									}
								}
							],
							"KipuBank_UmbralExcedido(uint256)": [
								{
									"params": {
										"monto": "que excede el umbral establecido"
									}
								}
							],
							"KipuBank_UmbralInvalido(uint256)": [
								{
									"params": {
										"umbral": "umbral que es invalido"
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"KipuBank_DepositoRealizado(address,uint256)": {
								"params": {
									"monto": "monto que se desea depositar",
									"titular": "titular que realiza el detposito"
								}
							},
							"KipuBank_ExtraccionRealizada(address,uint256)": {
								"params": {
									"monto": "monto que se desea extraer",
									"titular": "titular que desea realizar la extracción"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Se deben generar el limite, umbral y las direcciones del data feed y el token a utilizar al momento de desplegar el contrato",
								"params": {
									"_feed": "Direccion del data feed a utlizar",
									"_limite": "Limite global que se permite por transaccion",
									"_tokenERC20": "Direccion del token ERC20 a utilizar",
									"_umbral": "Umbral de limite de retiros"
								}
							},
							"depositarETH()": {
								"details": "Es payable y usa el modificador de verificarDepositos"
							},
							"depositarUSDC(uint256)": {
								"details": "Es payable y usa el modificador de verificarDepositosSe utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20No se marca como payable ya que es un token ERC20 y no Ether"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"retirarETH(uint256)": {
								"params": {
									"_monto": "es el monto a retirar de la boveda"
								}
							},
							"retirarUSDC(uint256)": {
								"params": {
									"_monto": "es el monto a retirar de la boveda"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferirOwner(address)": {
								"details": "El modificador de onlyOwner es necesario para seguridad",
								"params": {
									"_nuevoOwner": "Será la dirección del nuevo propietario del contrato"
								}
							},
							"verBoveda()": {
								"returns": {
									"monto_": "devuelve el saldo depositado total en USD depositado por cada titular"
								}
							},
							"verSaldoETH()": {
								"returns": {
									"saldo_": "Retornal el saldo en ETH"
								}
							},
							"verSaldoUSDC()": {
								"returns": {
									"saldo_": "Retorna el saldo en USDC"
								}
							},
							"verTotalContrato()": {
								"returns": {
									"_0": "Devuelve el saldo del contrato en USD"
								}
							},
							"verTotalDepositos()": {
								"returns": {
									"_0": "Devuelve la cantidad de depositos"
								}
							},
							"verTotalRetiros()": {
								"returns": {
									"_0": "Devuelve la cantidad de retiros"
								}
							}
						},
						"stateVariables": {
							"DECIMAL_FACTOR": {
								"details": "Se hace la suma de los decimales de ethereum y de los decimales de la conversión de chainlink para restarles los decimales de USDC, nos da la base igualitaria"
							},
							"HEARTBEAT": {
								"details": "Por convención se establece en 3600"
							},
							"_boveda": {
								"details": "El total se calcula en USD"
							},
							"_totalContrato": {
								"details": "El total del contrato es en USD"
							},
							"i_bankCap": {
								"details": "Tener en cuenta que el limite global será en USD"
							},
							"i_feed": {
								"details": "Utilizamos el data feed de Chainlink"
							},
							"i_usdc": {
								"details": "Es especifico para el token USDC"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KipuBank.sol\":736:14092  contract KipuBank is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/KipuBank.sol\":1855:1856  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":1829:1856  uint private _depositos = 0 */\n  0x03\n  sstore\n    /* \"contracts/KipuBank.sol\":1936:1937  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":1912:1937  uint private _retiros = 0 */\n  0x04\n  sstore\n    /* \"contracts/KipuBank.sol\":2076:2077  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":2046:2077  uint private _totalContrato = 0 */\n  0x05\n  sstore\n    /* \"contracts/KipuBank.sol\":5223:5865  constructor(uint _limite, uint _umbral, address _owner, address _feed, address _tokenERC20) Ownable(_owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KipuBank.sol\":5323:5329  _owner */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/KipuBank.sol\":5355:5356  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":5344:5351  _limite */\n  dup6\n    /* \"contracts/KipuBank.sol\":5344:5356  _limite == 0 */\n  sub\n    /* \"contracts/KipuBank.sol\":5341:5397  if(_limite == 0) revert KipuBank_LimiteInvalido(_limite) */\n  tag_15\n  jumpi\n    /* \"contracts/KipuBank.sol\":5389:5396  _limite */\n  dup5\n    /* \"contracts/KipuBank.sol\":5365:5397  KipuBank_LimiteInvalido(_limite) */\n  mload(0x40)\n  0xf1fdfd2b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/KipuBank.sol\":5341:5397  if(_limite == 0) revert KipuBank_LimiteInvalido(_limite) */\ntag_15:\n    /* \"contracts/KipuBank.sol\":5421:5422  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":5410:5417  _umbral */\n  dup5\n    /* \"contracts/KipuBank.sol\":5410:5422  _umbral == 0 */\n  sub\n    /* \"contracts/KipuBank.sol\":5407:5463  if(_umbral == 0) revert KipuBank_UmbralInvalido(_umbral) */\n  tag_18\n  jumpi\n    /* \"contracts/KipuBank.sol\":5455:5462  _umbral */\n  dup4\n    /* \"contracts/KipuBank.sol\":5431:5463  KipuBank_UmbralInvalido(_umbral) */\n  mload(0x40)\n  0x5052fe8e00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/KipuBank.sol\":5407:5463  if(_umbral == 0) revert KipuBank_UmbralInvalido(_umbral) */\ntag_18:\n    /* \"contracts/KipuBank.sol\":5486:5493  _limite */\n  dup5\n    /* \"contracts/KipuBank.sol\":5476:5483  _umbral */\n  dup5\n    /* \"contracts/KipuBank.sol\":5476:5493  _umbral > _limite */\n  gt\n    /* \"contracts/KipuBank.sol\":5473:5551  if(_umbral > _limite) revert KipuBank_InicializacionInvalida(_limite, _umbral) */\n  iszero\n  tag_20\n  jumpi\n    /* \"contracts/KipuBank.sol\":5534:5541  _limite */\n  dup5\n    /* \"contracts/KipuBank.sol\":5543:5550  _umbral */\n  dup5\n    /* \"contracts/KipuBank.sol\":5502:5551  KipuBank_InicializacionInvalida(_limite, _umbral) */\n  mload(0x40)\n  0x3122626300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/KipuBank.sol\":5473:5551  if(_umbral > _limite) revert KipuBank_InicializacionInvalida(_limite, _umbral) */\ntag_20:\n    /* \"contracts/KipuBank.sol\":5581:5582  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":5564:5583  _feed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/KipuBank.sol\":5564:5569  _feed */\n  dup3\n    /* \"contracts/KipuBank.sol\":5564:5583  _feed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/KipuBank.sol\":5561:5593  if(_feed == address(0)) revert() */\n  tag_23\n  jumpi\n    /* \"contracts/KipuBank.sol\":5585:5593  revert() */\n  revert(0x00, 0x00)\n    /* \"contracts/KipuBank.sol\":5561:5593  if(_feed == address(0)) revert() */\ntag_23:\n    /* \"contracts/KipuBank.sol\":5667:5668  0 */\n  0x00\n    /* \"contracts/KipuBank.sol\":5644:5669  _tokenERC20 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/KipuBank.sol\":5644:5655  _tokenERC20 */\n  dup2\n    /* \"contracts/KipuBank.sol\":5644:5669  _tokenERC20 == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/KipuBank.sol\":5641:5679  if(_tokenERC20 == address(0)) revert() */\n  tag_24\n  jumpi\n    /* \"contracts/KipuBank.sol\":5671:5679  revert() */\n  revert(0x00, 0x00)\n    /* \"contracts/KipuBank.sol\":5641:5679  if(_tokenERC20 == address(0)) revert() */\ntag_24:\n    /* \"contracts/KipuBank.sol\":5742:5753  _tokenERC20 */\n  dup1\n    /* \"contracts/KipuBank.sol\":5726:5754  i_usdc = IERC20(_tokenERC20) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/KipuBank.sol\":5795:5800  _feed */\n  dup2\n    /* \"contracts/KipuBank.sol\":5764:5770  i_feed */\n  0x02\n  0x00\n    /* \"contracts/KipuBank.sol\":5764:5801  i_feed = AggregatorV3Interface(_feed) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBank.sol\":5823:5830  _limite */\n  dup5\n    /* \"contracts/KipuBank.sol\":5811:5830  i_bankCap = _limite */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/KipuBank.sol\":5851:5858  _umbral */\n  dup4\n    /* \"contracts/KipuBank.sol\":5840:5858  i_umbral = _umbral */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/KipuBank.sol\":5223:5865  constructor(uint _limite, uint _umbral, address _owner, address _feed, address _tokenERC20) Ownable(_owner) {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/KipuBank.sol\":736:14092  contract KipuBank is ReentrancyGuard, Ownable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_31:\n    /* \"#utility.yul\":490:514   */\n  tag_45\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_30\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_46:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_32:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_48\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_31\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_33:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_34:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_51\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_33\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_35:\n    /* \"#utility.yul\":1001:1025   */\n  tag_53\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_34\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_54:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_36:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_56\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_35\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  0x00\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  0x00\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_59\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1360:1480   */\ntag_58:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_60\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_32\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_61\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_32\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_62\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_36\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_63\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_64\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_36\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2306   */\ntag_37:\n    /* \"#utility.yul\":2275:2299   */\n  tag_66\n    /* \"#utility.yul\":2293:2298   */\n  dup2\n    /* \"#utility.yul\":2275:2299   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2270:2273   */\n  dup3\n    /* \"#utility.yul\":2263:2300   */\n  mstore\n    /* \"#utility.yul\":2188:2306   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2312:2534   */\ntag_11:\n    /* \"#utility.yul\":2405:2409   */\n  0x00\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2432:2441   */\n  dup3\n    /* \"#utility.yul\":2428:2446   */\n  add\n    /* \"#utility.yul\":2420:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2456:2527   */\n  tag_68\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2456:2527   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2312:2534   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2540:2658   */\ntag_38:\n    /* \"#utility.yul\":2627:2651   */\n  tag_70\n    /* \"#utility.yul\":2645:2650   */\n  dup2\n    /* \"#utility.yul\":2627:2651   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2652   */\n  mstore\n    /* \"#utility.yul\":2540:2658   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2664:2886   */\ntag_17:\n    /* \"#utility.yul\":2757:2761   */\n  0x00\n    /* \"#utility.yul\":2795:2797   */\n  0x20\n    /* \"#utility.yul\":2784:2793   */\n  dup3\n    /* \"#utility.yul\":2780:2798   */\n  add\n    /* \"#utility.yul\":2772:2798   */\n  swap1\n  pop\n    /* \"#utility.yul\":2808:2879   */\n  tag_72\n    /* \"#utility.yul\":2876:2877   */\n  0x00\n    /* \"#utility.yul\":2865:2874   */\n  dup4\n    /* \"#utility.yul\":2861:2878   */\n  add\n    /* \"#utility.yul\":2852:2858   */\n  dup5\n    /* \"#utility.yul\":2808:2879   */\n  tag_38\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2664:2886   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2892:3224   */\ntag_22:\n    /* \"#utility.yul\":3013:3017   */\n  0x00\n    /* \"#utility.yul\":3051:3053   */\n  0x40\n    /* \"#utility.yul\":3040:3049   */\n  dup3\n    /* \"#utility.yul\":3036:3054   */\n  add\n    /* \"#utility.yul\":3028:3054   */\n  swap1\n  pop\n    /* \"#utility.yul\":3064:3135   */\n  tag_74\n    /* \"#utility.yul\":3132:3133   */\n  0x00\n    /* \"#utility.yul\":3121:3130   */\n  dup4\n    /* \"#utility.yul\":3117:3134   */\n  add\n    /* \"#utility.yul\":3108:3114   */\n  dup6\n    /* \"#utility.yul\":3064:3135   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3145:3217   */\n  tag_75\n    /* \"#utility.yul\":3213:3215   */\n  0x20\n    /* \"#utility.yul\":3202:3211   */\n  dup4\n    /* \"#utility.yul\":3198:3216   */\n  add\n    /* \"#utility.yul\":3189:3195   */\n  dup5\n    /* \"#utility.yul\":3145:3217   */\n  tag_38\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2892:3224   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KipuBank.sol\":736:14092  contract KipuBank is ReentrancyGuard, Ownable {... */\ntag_25:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7ca83d787e7423cefe91ee9c5de8a7604dac0860c07a3450ac6805c567c8da30\")\n  0x00\n  assignImmutable(\"0x9d8f226131630182c1f71b55fb0ef15c91b8f92e68cddc71ebac73ec7e8b50bb\")\n  0x00\n  assignImmutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/KipuBank.sol\":736:14092  contract KipuBank is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8648840a\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x939495bd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x939495bd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc6aca33c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf39b1809\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8648840a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x931fb90e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x93295c1c\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x779bb136\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x79a82334\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x82fe54b5\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x16a1930f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6900670c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x698b7241\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/KipuBank.sol\":6041:6051  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":6011:6052  KipuBank_OperacionNoPermitida(msg.sender) */\n      mload(0x40)\n      0xe1d158ff00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":736:14092  contract KipuBank is ReentrancyGuard, Ownable {... */\n    tag_2:\n        /* \"contracts/KipuBank.sol\":6246:6256  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":6216:6257  KipuBank_OperacionNoPermitida(msg.sender) */\n      mload(0x40)\n      0xe1d158ff00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":10798:11164  function depositarETH() external payable verificarDepositoETH(msg.value) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/KipuBank.sol\":12494:12596  function verBoveda() external view returns (uint monto_) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":11456:11829  function depositarUSDC(uint _monto) external verificarDepositoUSDC(_monto) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/KipuBank.sol\":12958:13085  function verSaldoETH() external view returns (uint saldo_) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":1091:1126  AggregatorV3Interface public i_feed */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":10362:10447  function retirarETH(uint _monto) external  {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/KipuBank.sol\":13977:14089  function transferirOwner(address _nuevoOwner) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":10583:10669  function retirarUSDC(uint _monto) external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/KipuBank.sol\":13659:13754  function verTotalContrato() external view returns (uint) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":12713:12846  function verSaldoUSDC() external view returns (uint saldo_) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":13443:13531  function verTotalRetiros() external view returns (uint) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/KipuBank.sol\":13220:13312  function verTotalDepositos() external view returns (uint) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      revert(0x00, 0x00)\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBank.sol\":10798:11164  function depositarETH() external payable verificarDepositoETH(msg.value) {... */\n    tag_29:\n        /* \"contracts/KipuBank.sol\":10860:10869  msg.value */\n      callvalue\n        /* \"contracts/KipuBank.sol\":6991:7005  uint montoUSDC */\n      0x00\n        /* \"contracts/KipuBank.sol\":7008:7034  convertirEthEnUSDC(_monto) */\n      tag_90\n        /* \"contracts/KipuBank.sol\":7027:7033  _monto */\n      dup3\n        /* \"contracts/KipuBank.sol\":7008:7026  convertirEthEnUSDC */\n      tag_91\n        /* \"contracts/KipuBank.sol\":7008:7034  convertirEthEnUSDC(_monto) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/KipuBank.sol\":6991:7034  uint montoUSDC = convertirEthEnUSDC(_monto) */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":7060:7061  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":7047:7056  montoUSDC */\n      dup2\n        /* \"contracts/KipuBank.sol\":7047:7061  montoUSDC == 0 */\n      sub\n        /* \"contracts/KipuBank.sol\":7044:7100  if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender) */\n      tag_92\n      jumpi\n        /* \"contracts/KipuBank.sol\":7089:7099  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":7070:7100  KipuBank_MontoCero(msg.sender) */\n      mload(0x40)\n      0xb2f0923100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7044:7100  if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender) */\n    tag_92:\n        /* \"contracts/KipuBank.sol\":7143:7152  i_bankCap */\n      immutable(\"0x7ca83d787e7423cefe91ee9c5de8a7604dac0860c07a3450ac6805c567c8da30\")\n        /* \"contracts/KipuBank.sol\":7126:7140  _totalContrato */\n      sload(0x05)\n        /* \"contracts/KipuBank.sol\":7114:7123  montoUSDC */\n      dup3\n        /* \"contracts/KipuBank.sol\":7114:7140  montoUSDC + _totalContrato */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/KipuBank.sol\":7114:7152  montoUSDC + _totalContrato > i_bankCap */\n      gt\n        /* \"contracts/KipuBank.sol\":7110:7195  if (montoUSDC + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(montoUSDC) */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/KipuBank.sol\":7185:7194  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":7161:7195  KipuBank_LimiteExcedido(montoUSDC) */\n      mload(0x40)\n      0x2900b02c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7110:7195  if (montoUSDC + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(montoUSDC) */\n    tag_96:\n        /* \"contracts/KipuBank.sol\":10881:10895  uint montoUSDC */\n      0x00\n        /* \"contracts/KipuBank.sol\":10898:10927  convertirEthEnUSDC(msg.value) */\n      tag_99\n        /* \"contracts/KipuBank.sol\":10917:10926  msg.value */\n      callvalue\n        /* \"contracts/KipuBank.sol\":10898:10916  convertirEthEnUSDC */\n      tag_91\n        /* \"contracts/KipuBank.sol\":10898:10927  convertirEthEnUSDC(msg.value) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/KipuBank.sol\":10881:10927  uint montoUSDC = convertirEthEnUSDC(msg.value) */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":10983:10992  msg.value */\n      callvalue\n        /* \"contracts/KipuBank.sol\":10937:10955  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":10937:10967  _cuentasMultiToken[address(0)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":10964:10965  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":10937:10967  _cuentasMultiToken[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":10937:10979  _cuentasMultiToken[address(0)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":10968:10978  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":10937:10979  _cuentasMultiToken[address(0)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":10937:10992  _cuentasMultiToken[address(0)][msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_100\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_100:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11025:11034  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":11002:11009  _boveda */\n      0x07\n        /* \"contracts/KipuBank.sol\":11002:11021  _boveda[msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":11010:11020  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11002:11021  _boveda[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":11002:11034  _boveda[msg.sender] += montoUSDC */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11044:11054  _depositos */\n      0x03\n      0x00\n        /* \"contracts/KipuBank.sol\":11044:11056  _depositos++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11084:11093  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":11066:11080  _totalContrato */\n      0x05\n      0x00\n        /* \"contracts/KipuBank.sol\":11066:11093  _totalContrato += montoUSDC */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11108:11157  KipuBank_DepositoRealizado(msg.sender, montoUSDC) */\n      0x9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd\n        /* \"contracts/KipuBank.sol\":11135:11145  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11147:11156  montoUSDC */\n      dup3\n        /* \"contracts/KipuBank.sol\":11108:11157  KipuBank_DepositoRealizado(msg.sender, montoUSDC) */\n      mload(0x40)\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBank.sol\":10871:11164  {... */\n      pop\n        /* \"contracts/KipuBank.sol\":6981:7213  {... */\n      pop\n        /* \"contracts/KipuBank.sol\":10798:11164  function depositarETH() external payable verificarDepositoETH(msg.value) {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":12494:12596  function verBoveda() external view returns (uint monto_) {... */\n    tag_32:\n        /* \"contracts/KipuBank.sol\":12538:12549  uint monto_ */\n      0x00\n        /* \"contracts/KipuBank.sol\":12570:12577  _boveda */\n      0x07\n        /* \"contracts/KipuBank.sol\":12570:12589  _boveda[msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":12578:12588  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":12570:12589  _boveda[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBank.sol\":12561:12589  monto_ = _boveda[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":12494:12596  function verBoveda() external view returns (uint monto_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":11456:11829  function depositarUSDC(uint _monto) external verificarDepositoUSDC(_monto) {... */\n    tag_39:\n        /* \"contracts/KipuBank.sol\":11523:11529  _monto */\n      dup1\n        /* \"contracts/KipuBank.sol\":7389:7390  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":7379:7385  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":7379:7390  _monto == 0 */\n      sub\n        /* \"contracts/KipuBank.sol\":7376:7429  if(_monto == 0) revert KipuBank_MontoCero(msg.sender) */\n      tag_109\n      jumpi\n        /* \"contracts/KipuBank.sol\":7418:7428  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":7399:7429  KipuBank_MontoCero(msg.sender) */\n      mload(0x40)\n      0xb2f0923100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7376:7429  if(_monto == 0) revert KipuBank_MontoCero(msg.sender) */\n    tag_109:\n        /* \"contracts/KipuBank.sol\":7469:7478  i_bankCap */\n      immutable(\"0x7ca83d787e7423cefe91ee9c5de8a7604dac0860c07a3450ac6805c567c8da30\")\n        /* \"contracts/KipuBank.sol\":7452:7466  _totalContrato */\n      sload(0x05)\n        /* \"contracts/KipuBank.sol\":7443:7449  _monto */\n      dup3\n        /* \"contracts/KipuBank.sol\":7443:7466  _monto + _totalContrato */\n      tag_111\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_111:\n        /* \"contracts/KipuBank.sol\":7443:7478  _monto + _totalContrato > i_bankCap */\n      gt\n        /* \"contracts/KipuBank.sol\":7439:7518  if (_monto + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(_monto) */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/KipuBank.sol\":7511:7517  _monto */\n      dup1\n        /* \"contracts/KipuBank.sol\":7487:7518  KipuBank_LimiteExcedido(_monto) */\n      mload(0x40)\n      0x2900b02c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7439:7518  if (_monto + _totalContrato > i_bankCap) revert KipuBank_LimiteExcedido(_monto) */\n    tag_112:\n        /* \"contracts/KipuBank.sol\":11592:11598  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":11541:11559  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":11541:11576  _cuentasMultiToken[address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":11568:11574  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":11541:11576  _cuentasMultiToken[address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":11541:11588  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":11577:11587  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11541:11588  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":11541:11598  _cuentasMultiToken[address(i_usdc)][msg.sender] += _monto */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11631:11637  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":11608:11615  _boveda */\n      0x07\n        /* \"contracts/KipuBank.sol\":11608:11627  _boveda[msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":11616:11626  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11608:11627  _boveda[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":11608:11637  _boveda[msg.sender] += _monto */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11647:11657  _depositos */\n      0x03\n      0x00\n        /* \"contracts/KipuBank.sol\":11647:11659  _depositos++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_117\n      swap1\n      tag_103\n      jump\t// in\n    tag_117:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11687:11693  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":11669:11683  _totalContrato */\n      0x05\n      0x00\n        /* \"contracts/KipuBank.sol\":11669:11693  _totalContrato += _monto */\n      dup3\n      dup3\n      sload\n      tag_118\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":11708:11754  KipuBank_DepositoRealizado(msg.sender, _monto) */\n      0x9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd\n        /* \"contracts/KipuBank.sol\":11735:11745  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11747:11753  _monto */\n      dup4\n        /* \"contracts/KipuBank.sol\":11708:11754  KipuBank_DepositoRealizado(msg.sender, _monto) */\n      mload(0x40)\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBank.sol\":11764:11822  i_usdc.safeTransferFrom(msg.sender, address(this), _monto) */\n      tag_120\n        /* \"contracts/KipuBank.sol\":11788:11798  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":11808:11812  this */\n      address\n        /* \"contracts/KipuBank.sol\":11815:11821  _monto */\n      dup5\n        /* \"contracts/KipuBank.sol\":11764:11770  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":11764:11787  i_usdc.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_121\n      swap1\n        /* \"contracts/KipuBank.sol\":11764:11822  i_usdc.safeTransferFrom(msg.sender, address(this), _monto) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/KipuBank.sol\":11456:11829  function depositarUSDC(uint _monto) external verificarDepositoUSDC(_monto) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":12958:13085  function verSaldoETH() external view returns (uint saldo_) {... */\n    tag_45:\n        /* \"contracts/KipuBank.sol\":13004:13015  uint saldo_ */\n      0x00\n        /* \"contracts/KipuBank.sol\":13036:13054  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":13036:13066  _cuentasMultiToken[address(0)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":13063:13064  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":13036:13066  _cuentasMultiToken[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":13036:13078  _cuentasMultiToken[address(0)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":13067:13077  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":13036:13078  _cuentasMultiToken[address(0)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBank.sol\":13027:13078  saldo_ = _cuentasMultiToken[address(0)][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":12958:13085  function verSaldoETH() external view returns (uint saldo_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":1091:1126  AggregatorV3Interface public i_feed */\n    tag_49:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":10362:10447  function retirarETH(uint _monto) external  {... */\n    tag_55:\n        /* \"contracts/KipuBank.sol\":10415:10440  _retirarFondosETH(_monto) */\n      tag_130\n        /* \"contracts/KipuBank.sol\":10433:10439  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":10415:10432  _retirarFondosETH */\n      tag_131\n        /* \"contracts/KipuBank.sol\":10415:10440  _retirarFondosETH(_monto) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/KipuBank.sol\":10362:10447  function retirarETH(uint _monto) external  {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":13977:14089  function transferirOwner(address _nuevoOwner) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/KipuBank.sol\":14052:14082  transferOwnership(_nuevoOwner) */\n      tag_135\n        /* \"contracts/KipuBank.sol\":14070:14081  _nuevoOwner */\n      dup2\n        /* \"contracts/KipuBank.sol\":14052:14069  transferOwnership */\n      tag_84\n        /* \"contracts/KipuBank.sol\":14052:14082  transferOwnership(_nuevoOwner) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/KipuBank.sol\":13977:14089  function transferirOwner(address _nuevoOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":10583:10669  function retirarUSDC(uint _monto) external {... */\n    tag_68:\n        /* \"contracts/KipuBank.sol\":10636:10662  _retirarFondosUSDC(_monto) */\n      tag_138\n        /* \"contracts/KipuBank.sol\":10655:10661  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":10636:10654  _retirarFondosUSDC */\n      tag_139\n        /* \"contracts/KipuBank.sol\":10636:10662  _retirarFondosUSDC(_monto) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/KipuBank.sol\":10583:10669  function retirarUSDC(uint _monto) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":13659:13754  function verTotalContrato() external view returns (uint) {... */\n    tag_71:\n        /* \"contracts/KipuBank.sol\":13710:13714  uint */\n      0x00\n        /* \"contracts/KipuBank.sol\":13733:13747  _totalContrato */\n      sload(0x05)\n        /* \"contracts/KipuBank.sol\":13726:13747  return _totalContrato */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":13659:13754  function verTotalContrato() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":12713:12846  function verSaldoUSDC() external view returns (uint saldo_) {... */\n    tag_75:\n        /* \"contracts/KipuBank.sol\":12760:12771  uint saldo_ */\n      0x00\n        /* \"contracts/KipuBank.sol\":12792:12810  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":12792:12827  _cuentasMultiToken[address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":12819:12825  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":12792:12827  _cuentasMultiToken[address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":12792:12839  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":12828:12838  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":12792:12839  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBank.sol\":12783:12839  saldo_ = _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":12713:12846  function verSaldoUSDC() external view returns (uint saldo_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":13443:13531  function verTotalRetiros() external view returns (uint) {... */\n    tag_79:\n        /* \"contracts/KipuBank.sol\":13493:13497  uint */\n      0x00\n        /* \"contracts/KipuBank.sol\":13516:13524  _retiros */\n      sload(0x04)\n        /* \"contracts/KipuBank.sol\":13509:13524  return _retiros */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":13443:13531  function verTotalRetiros() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":13220:13312  function verTotalDepositos() external view returns (uint) {... */\n    tag_87:\n        /* \"contracts/KipuBank.sol\":13272:13276  uint */\n      0x00\n        /* \"contracts/KipuBank.sol\":13295:13305  _depositos */\n      sload(0x03)\n        /* \"contracts/KipuBank.sol\":13288:13305  return _depositos */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":13220:13312  function verTotalDepositos() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":12147:12318  function convertirEthEnUSDC(uint _monto) internal view returns (uint montoConvertido_) {... */\n    tag_91:\n        /* \"contracts/KipuBank.sol\":12211:12232  uint montoConvertido_ */\n      0x00\n        /* \"contracts/KipuBank.sol\":1543:1555  1 * 10 ** 20 */\n      0x056bc75e2d63100000\n        /* \"contracts/KipuBank.sol\":12277:12293  chainLinkFeeds() */\n      tag_151\n        /* \"contracts/KipuBank.sol\":12277:12291  chainLinkFeeds */\n      tag_152\n        /* \"contracts/KipuBank.sol\":12277:12293  chainLinkFeeds() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/KipuBank.sol\":12268:12274  _monto */\n      dup4\n        /* \"contracts/KipuBank.sol\":12268:12293  _monto * chainLinkFeeds() */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/KipuBank.sol\":12267:12311  (_monto * chainLinkFeeds()) / DECIMAL_FACTOR */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/KipuBank.sol\":12248:12311  montoConvertido_ = (_monto * chainLinkFeeds()) / DECIMAL_FACTOR */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":12147:12318  function convertirEthEnUSDC(uint _monto) internal view returns (uint montoConvertido_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_159\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":8908:9444  function _retirarFondosETH(uint _monto) private nonReentrant verificarRetiroETH(_monto) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/KipuBank.sol\":8988:8994  _monto */\n      dup1\n        /* \"contracts/KipuBank.sol\":7769:7783  uint montoUSDC */\n      0x00\n        /* \"contracts/KipuBank.sol\":7786:7812  convertirEthEnUSDC(_monto) */\n      tag_174\n        /* \"contracts/KipuBank.sol\":7805:7811  _monto */\n      dup3\n        /* \"contracts/KipuBank.sol\":7786:7804  convertirEthEnUSDC */\n      tag_91\n        /* \"contracts/KipuBank.sol\":7786:7812  convertirEthEnUSDC(_monto) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/KipuBank.sol\":7769:7812  uint montoUSDC = convertirEthEnUSDC(_monto) */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":7838:7839  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":7825:7834  montoUSDC */\n      dup2\n        /* \"contracts/KipuBank.sol\":7825:7839  montoUSDC == 0 */\n      sub\n        /* \"contracts/KipuBank.sol\":7822:7878  if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender) */\n      tag_175\n      jumpi\n        /* \"contracts/KipuBank.sol\":7867:7877  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":7848:7878  KipuBank_MontoCero(msg.sender) */\n      mload(0x40)\n      0xb2f0923100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7822:7878  if(montoUSDC == 0) revert KipuBank_MontoCero(msg.sender) */\n    tag_175:\n        /* \"contracts/KipuBank.sol\":7904:7912  i_umbral */\n      immutable(\"0x9d8f226131630182c1f71b55fb0ef15c91b8f92e68cddc71ebac73ec7e8b50bb\")\n        /* \"contracts/KipuBank.sol\":7892:7901  montoUSDC */\n      dup2\n        /* \"contracts/KipuBank.sol\":7892:7912  montoUSDC > i_umbral */\n      gt\n        /* \"contracts/KipuBank.sol\":7888:7955  if (montoUSDC > i_umbral) revert KipuBank_UmbralExcedido(montoUSDC) */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/KipuBank.sol\":7945:7954  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":7921:7955  KipuBank_UmbralExcedido(montoUSDC) */\n      mload(0x40)\n      0xc399356500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7888:7955  if (montoUSDC > i_umbral) revert KipuBank_UmbralExcedido(montoUSDC) */\n    tag_177:\n        /* \"contracts/KipuBank.sol\":7978:7996  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":7978:8008  _cuentasMultiToken[address(0)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":8005:8006  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":7978:8008  _cuentasMultiToken[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":7978:8020  _cuentasMultiToken[address(0)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":8009:8019  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":7978:8020  _cuentasMultiToken[address(0)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBank.sol\":7969:7975  _monto */\n      dup3\n        /* \"contracts/KipuBank.sol\":7969:8020  _monto > _cuentasMultiToken[address(0)][msg.sender] */\n      gt\n        /* \"contracts/KipuBank.sol\":7965:8078  if (_monto > _cuentasMultiToken[address(0)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, montoUSDC) */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/KipuBank.sol\":8056:8066  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":8068:8077  montoUSDC */\n      dup2\n        /* \"contracts/KipuBank.sol\":8029:8078  KipuBank_SaldoInsuficiente(msg.sender, montoUSDC) */\n      mload(0x40)\n      0x51a7314200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":7965:8078  if (_monto > _cuentasMultiToken[address(0)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, montoUSDC) */\n    tag_179:\n        /* \"contracts/KipuBank.sol\":9006:9020  uint montoUSDC */\n      0x00\n        /* \"contracts/KipuBank.sol\":9023:9049  convertirEthEnUSDC(_monto) */\n      tag_182\n        /* \"contracts/KipuBank.sol\":9042:9048  _monto */\n      dup5\n        /* \"contracts/KipuBank.sol\":9023:9041  convertirEthEnUSDC */\n      tag_91\n        /* \"contracts/KipuBank.sol\":9023:9049  convertirEthEnUSDC(_monto) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/KipuBank.sol\":9006:9049  uint montoUSDC = convertirEthEnUSDC(_monto) */\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":9082:9091  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":9059:9066  _boveda */\n      0x07\n        /* \"contracts/KipuBank.sol\":9059:9078  _boveda[msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":9067:9077  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9059:9078  _boveda[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":9059:9091  _boveda[msg.sender] -= montoUSDC */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":9147:9153  _monto */\n      dup4\n        /* \"contracts/KipuBank.sol\":9101:9119  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":9101:9131  _cuentasMultiToken[address(0)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":9128:9129  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":9101:9131  _cuentasMultiToken[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":9101:9143  _cuentasMultiToken[address(0)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":9132:9142  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9101:9143  _cuentasMultiToken[address(0)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":9101:9153  _cuentasMultiToken[address(0)][msg.sender] -= _monto */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":9163:9171  _retiros */\n      0x04\n      0x00\n        /* \"contracts/KipuBank.sol\":9163:9173  _retiros++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_186\n      swap1\n      tag_103\n      jump\t// in\n    tag_186:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":9201:9210  montoUSDC */\n      dup1\n        /* \"contracts/KipuBank.sol\":9183:9197  _totalContrato */\n      0x05\n      0x00\n        /* \"contracts/KipuBank.sol\":9183:9210  _totalContrato -= montoUSDC */\n      dup3\n      dup3\n      sload\n      tag_187\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_187:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":9234:9285  KipuBank_ExtraccionRealizada(msg.sender, montoUSDC) */\n      0x9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e8\n        /* \"contracts/KipuBank.sol\":9263:9273  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9275:9284  montoUSDC */\n      dup3\n        /* \"contracts/KipuBank.sol\":9234:9285  KipuBank_ExtraccionRealizada(msg.sender, montoUSDC) */\n      mload(0x40)\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBank.sol\":9297:9309  bool success */\n      0x00\n        /* \"contracts/KipuBank.sol\":9323:9333  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9315:9339  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBank.sol\":9347:9353  _monto */\n      dup6\n        /* \"contracts/KipuBank.sol\":9315:9358  payable(msg.sender).call{value: _monto}(\"\") */\n      mload(0x40)\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_193\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_192)\n    tag_193:\n      0x60\n      swap2\n      pop\n    tag_192:\n      pop\n        /* \"contracts/KipuBank.sol\":9296:9358  (bool success, ) = payable(msg.sender).call{value: _monto}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/KipuBank.sol\":9373:9380  success */\n      dup1\n        /* \"contracts/KipuBank.sol\":9368:9437  if (!success) revert KipuBank_ExtraccionRechazada(msg.sender, _monto) */\n      tag_194\n      jumpi\n        /* \"contracts/KipuBank.sol\":9418:9428  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9430:9436  _monto */\n      dup6\n        /* \"contracts/KipuBank.sol\":9389:9437  KipuBank_ExtraccionRechazada(msg.sender, _monto) */\n      mload(0x40)\n      0x6c5e1a1400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":9368:9437  if (!success) revert KipuBank_ExtraccionRechazada(msg.sender, _monto) */\n    tag_194:\n        /* \"contracts/KipuBank.sol\":8996:9444  {... */\n      pop\n      pop\n        /* \"contracts/KipuBank.sol\":7759:8096  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_196\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_197\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/KipuBank.sol\":8908:9444  function _retirarFondosETH(uint _monto) private nonReentrant verificarRetiroETH(_monto) {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":9849:10227  function _retirarFondosUSDC(uint _monto) private nonReentrant verificarRetiroUSDC(_monto) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_199\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/KipuBank.sol\":9931:9937  _monto */\n      dup1\n        /* \"contracts/KipuBank.sol\":8339:8340  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":8329:8335  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":8329:8340  _monto == 0 */\n      sub\n        /* \"contracts/KipuBank.sol\":8326:8379  if(_monto == 0) revert KipuBank_MontoCero(msg.sender) */\n      tag_201\n      jumpi\n        /* \"contracts/KipuBank.sol\":8368:8378  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":8349:8379  KipuBank_MontoCero(msg.sender) */\n      mload(0x40)\n      0xb2f0923100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":8326:8379  if(_monto == 0) revert KipuBank_MontoCero(msg.sender) */\n    tag_201:\n        /* \"contracts/KipuBank.sol\":8402:8410  i_umbral */\n      immutable(\"0x9d8f226131630182c1f71b55fb0ef15c91b8f92e68cddc71ebac73ec7e8b50bb\")\n        /* \"contracts/KipuBank.sol\":8393:8399  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":8393:8410  _monto > i_umbral */\n      gt\n        /* \"contracts/KipuBank.sol\":8389:8450  if (_monto > i_umbral) revert KipuBank_UmbralExcedido(_monto) */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/KipuBank.sol\":8443:8449  _monto */\n      dup1\n        /* \"contracts/KipuBank.sol\":8419:8450  KipuBank_UmbralExcedido(_monto) */\n      mload(0x40)\n      0xc399356500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":8389:8450  if (_monto > i_umbral) revert KipuBank_UmbralExcedido(_monto) */\n    tag_203:\n        /* \"contracts/KipuBank.sol\":8473:8491  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":8473:8508  _cuentasMultiToken[address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":8500:8506  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":8473:8508  _cuentasMultiToken[address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":8473:8520  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":8509:8519  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":8473:8520  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBank.sol\":8464:8470  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":8464:8520  _monto > _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      gt\n        /* \"contracts/KipuBank.sol\":8460:8575  if (_monto > _cuentasMultiToken[address(i_usdc)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, _monto) */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/KipuBank.sol\":8556:8566  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":8568:8574  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":8529:8575  KipuBank_SaldoInsuficiente(msg.sender, _monto) */\n      mload(0x40)\n      0x51a7314200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":8460:8575  if (_monto > _cuentasMultiToken[address(i_usdc)][msg.sender]) revert KipuBank_SaldoInsuficiente(msg.sender, _monto) */\n    tag_205:\n        /* \"contracts/KipuBank.sol\":9972:9978  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":9949:9956  _boveda */\n      0x07\n        /* \"contracts/KipuBank.sol\":9949:9968  _boveda[msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":9957:9967  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9949:9968  _boveda[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":9949:9978  _boveda[msg.sender] -= _monto */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":10039:10045  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":9988:10006  _cuentasMultiToken */\n      0x06\n        /* \"contracts/KipuBank.sol\":9988:10023  _cuentasMultiToken[address(i_usdc)] */\n      0x00\n        /* \"contracts/KipuBank.sol\":10015:10021  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":9988:10023  _cuentasMultiToken[address(i_usdc)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBank.sol\":9988:10035  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0x00\n        /* \"contracts/KipuBank.sol\":10024:10034  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":9988:10035  _cuentasMultiToken[address(i_usdc)][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBank.sol\":9988:10045  _cuentasMultiToken[address(i_usdc)][msg.sender] -= _monto */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":10055:10063  _retiros */\n      0x04\n      0x00\n        /* \"contracts/KipuBank.sol\":10055:10065  _retiros++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_210\n      swap1\n      tag_103\n      jump\t// in\n    tag_210:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":10093:10099  _monto */\n      dup2\n        /* \"contracts/KipuBank.sol\":10075:10089  _totalContrato */\n      0x05\n      0x00\n        /* \"contracts/KipuBank.sol\":10075:10099  _totalContrato -= _monto */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBank.sol\":10123:10171  KipuBank_ExtraccionRealizada(msg.sender, _monto) */\n      0x9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e8\n        /* \"contracts/KipuBank.sol\":10152:10162  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":10164:10170  _monto */\n      dup4\n        /* \"contracts/KipuBank.sol\":10123:10171  KipuBank_ExtraccionRealizada(msg.sender, _monto) */\n      mload(0x40)\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBank.sol\":10181:10220  i_usdc.safeTransfer(msg.sender, _monto) */\n      tag_213\n        /* \"contracts/KipuBank.sol\":10201:10211  msg.sender */\n      caller\n        /* \"contracts/KipuBank.sol\":10213:10219  _monto */\n      dup4\n        /* \"contracts/KipuBank.sol\":10181:10187  i_usdc */\n      immutable(\"0x705a6ef83029e2c8cd72d6aefd2a2bbc4a5113a33398eeb61dd1988b11595ae5\")\n        /* \"contracts/KipuBank.sol\":10181:10200  i_usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_214\n      swap1\n        /* \"contracts/KipuBank.sol\":10181:10220  i_usdc.safeTransfer(msg.sender, _monto) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_215\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_197\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/KipuBank.sol\":9849:10227  function _retirarFondosUSDC(uint _monto) private nonReentrant verificarRetiroUSDC(_monto) {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBank.sol\":6443:6829  function chainLinkFeeds() internal view returns(uint precioUSD_) {... */\n    tag_152:\n        /* \"contracts/KipuBank.sol\":6491:6506  uint precioUSD_ */\n      0x00\n        /* \"contracts/KipuBank.sol\":6521:6539  int256 ethUSDPrice */\n      0x00\n        /* \"contracts/KipuBank.sol\":6542:6558  uint256 updateAt */\n      0x00\n        /* \"contracts/KipuBank.sol\":6563:6569  i_feed */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBank.sol\":6563:6585  i_feed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/KipuBank.sol\":6563:6587  i_feed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"contracts/KipuBank.sol\":6518:6587  (, int256 ethUSDPrice,, uint256 updateAt,) = i_feed.latestRoundData() */\n      pop\n      swap4\n      pop\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/KipuBank.sol\":6616:6617  0 */\n      0x00\n        /* \"contracts/KipuBank.sol\":6601:6612  ethUSDPrice */\n      dup3\n        /* \"contracts/KipuBank.sol\":6601:6617  ethUSDPrice == 0 */\n      sub\n        /* \"contracts/KipuBank.sol\":6597:6673  if( ethUSDPrice == 0) revert KipuBank_OraculoComprometido(uint(ethUSDPrice)) */\n      tag_221\n      jumpi\n        /* \"contracts/KipuBank.sol\":6660:6671  ethUSDPrice */\n      dup2\n        /* \"contracts/KipuBank.sol\":6626:6673  KipuBank_OraculoComprometido(uint(ethUSDPrice)) */\n      mload(0x40)\n      0x3654402900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":6597:6673  if( ethUSDPrice == 0) revert KipuBank_OraculoComprometido(uint(ethUSDPrice)) */\n    tag_221:\n        /* \"contracts/KipuBank.sol\":1274:1278  3600 */\n      0x0e10\n        /* \"contracts/KipuBank.sol\":6686:6724  block.timestamp - updateAt > HEARTBEAT */\n      0xffff\n      and\n        /* \"contracts/KipuBank.sol\":6704:6712  updateAt */\n      dup2\n        /* \"contracts/KipuBank.sol\":6686:6701  block.timestamp */\n      timestamp\n        /* \"contracts/KipuBank.sol\":6686:6712  block.timestamp - updateAt */\n      tag_223\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_223:\n        /* \"contracts/KipuBank.sol\":6686:6724  block.timestamp - updateAt > HEARTBEAT */\n      gt\n        /* \"contracts/KipuBank.sol\":6683:6781  if(block.timestamp - updateAt > HEARTBEAT) revert KipuBank_PrecioDesactualizado(uint(ethUSDPrice)) */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/KipuBank.sol\":6768:6779  ethUSDPrice */\n      dup2\n        /* \"contracts/KipuBank.sol\":6733:6781  KipuBank_PrecioDesactualizado(uint(ethUSDPrice)) */\n      mload(0x40)\n      0x2609a26500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KipuBank.sol\":6683:6781  if(block.timestamp - updateAt > HEARTBEAT) revert KipuBank_PrecioDesactualizado(uint(ethUSDPrice)) */\n    tag_224:\n        /* \"contracts/KipuBank.sol\":6810:6821  ethUSDPrice */\n      dup2\n        /* \"contracts/KipuBank.sol\":6792:6822  precioUSD_ = uint(ethUSDPrice) */\n      swap3\n      pop\n        /* \"contracts/KipuBank.sol\":6508:6829  {... */\n      pop\n      pop\n        /* \"contracts/KipuBank.sol\":6443:6829  function chainLinkFeeds() internal view returns(uint precioUSD_) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_229)\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_241:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_242:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_276\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_241\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_243:\n        /* \"#utility.yul\":328:352   */\n      tag_278\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_242\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_24:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_280\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_243\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_244:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_245:\n        /* \"#utility.yul\":763:787   */\n      tag_283\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_244\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_34:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_285\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_245\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_247:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_249:\n        /* \"#utility.yul\":1428:1452   */\n      tag_290\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_244\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_291:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_250:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_293\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_249\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_38:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_296\n      tag_247\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1704:1823   */\n    tag_295:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_297\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_250\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2023   */\n    tag_251:\n        /* \"#utility.yul\":1991:1994   */\n      0x00\n        /* \"#utility.yul\":2012:2017   */\n      dup2\n        /* \"#utility.yul\":2005:2017   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2171   */\n    tag_252:\n        /* \"#utility.yul\":2079:2088   */\n      0x00\n        /* \"#utility.yul\":2112:2165   */\n      tag_300\n        /* \"#utility.yul\":2130:2164   */\n      tag_301\n        /* \"#utility.yul\":2139:2163   */\n      tag_302\n        /* \"#utility.yul\":2157:2162   */\n      dup5\n        /* \"#utility.yul\":2139:2163   */\n      tag_241\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2130:2164   */\n      tag_251\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2112:2165   */\n      tag_241\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2099:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2177:2303   */\n    tag_253:\n        /* \"#utility.yul\":2227:2236   */\n      0x00\n        /* \"#utility.yul\":2260:2297   */\n      tag_304\n        /* \"#utility.yul\":2291:2296   */\n      dup3\n        /* \"#utility.yul\":2260:2297   */\n      tag_252\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2247:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2177:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2463   */\n    tag_254:\n        /* \"#utility.yul\":2387:2396   */\n      0x00\n        /* \"#utility.yul\":2420:2457   */\n      tag_306\n        /* \"#utility.yul\":2451:2456   */\n      dup3\n        /* \"#utility.yul\":2420:2457   */\n      tag_253\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2407:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2469:2656   */\n    tag_255:\n        /* \"#utility.yul\":2584:2649   */\n      tag_308\n        /* \"#utility.yul\":2643:2648   */\n      dup2\n        /* \"#utility.yul\":2584:2649   */\n      tag_254\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2579:2582   */\n      dup3\n        /* \"#utility.yul\":2572:2650   */\n      mstore\n        /* \"#utility.yul\":2469:2656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2662:2940   */\n    tag_51:\n        /* \"#utility.yul\":2783:2787   */\n      0x00\n        /* \"#utility.yul\":2821:2823   */\n      0x20\n        /* \"#utility.yul\":2810:2819   */\n      dup3\n        /* \"#utility.yul\":2806:2824   */\n      add\n        /* \"#utility.yul\":2798:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2834:2933   */\n      tag_310\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2919:2928   */\n      dup4\n        /* \"#utility.yul\":2915:2932   */\n      add\n        /* \"#utility.yul\":2906:2912   */\n      dup5\n        /* \"#utility.yul\":2834:2933   */\n      tag_255\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2662:2940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2946:3068   */\n    tag_256:\n        /* \"#utility.yul\":3019:3043   */\n      tag_312\n        /* \"#utility.yul\":3037:3042   */\n      dup2\n        /* \"#utility.yul\":3019:3043   */\n      tag_242\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3012:3017   */\n      dup2\n        /* \"#utility.yul\":3009:3044   */\n      eq\n        /* \"#utility.yul\":2999:3062   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3058:3059   */\n      0x00\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3048:3060   */\n      revert\n        /* \"#utility.yul\":2999:3062   */\n    tag_313:\n        /* \"#utility.yul\":2946:3068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3213   */\n    tag_257:\n        /* \"#utility.yul\":3120:3125   */\n      0x00\n        /* \"#utility.yul\":3158:3164   */\n      dup2\n        /* \"#utility.yul\":3145:3165   */\n      calldataload\n        /* \"#utility.yul\":3136:3165   */\n      swap1\n      pop\n        /* \"#utility.yul\":3174:3207   */\n      tag_315\n        /* \"#utility.yul\":3201:3206   */\n      dup2\n        /* \"#utility.yul\":3174:3207   */\n      tag_256\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3074:3213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3219:3548   */\n    tag_59:\n        /* \"#utility.yul\":3278:3284   */\n      0x00\n        /* \"#utility.yul\":3327:3329   */\n      0x20\n        /* \"#utility.yul\":3315:3324   */\n      dup3\n        /* \"#utility.yul\":3306:3313   */\n      dup5\n        /* \"#utility.yul\":3302:3325   */\n      sub\n        /* \"#utility.yul\":3298:3330   */\n      slt\n        /* \"#utility.yul\":3295:3414   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3333:3412   */\n      tag_318\n      tag_247\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3295:3414   */\n    tag_317:\n        /* \"#utility.yul\":3453:3454   */\n      0x00\n        /* \"#utility.yul\":3478:3531   */\n      tag_319\n        /* \"#utility.yul\":3523:3530   */\n      dup5\n        /* \"#utility.yul\":3514:3520   */\n      dup3\n        /* \"#utility.yul\":3503:3512   */\n      dup6\n        /* \"#utility.yul\":3499:3521   */\n      add\n        /* \"#utility.yul\":3478:3531   */\n      tag_257\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3468:3531   */\n      swap2\n      pop\n        /* \"#utility.yul\":3424:3541   */\n      pop\n        /* \"#utility.yul\":3219:3548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3554:3734   */\n    tag_258:\n        /* \"#utility.yul\":3602:3679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3599:3600   */\n      0x00\n        /* \"#utility.yul\":3592:3680   */\n      mstore\n        /* \"#utility.yul\":3699:3703   */\n      0x11\n        /* \"#utility.yul\":3696:3697   */\n      0x04\n        /* \"#utility.yul\":3689:3704   */\n      mstore\n        /* \"#utility.yul\":3723:3727   */\n      0x24\n        /* \"#utility.yul\":3720:3721   */\n      0x00\n        /* \"#utility.yul\":3713:3728   */\n      revert\n        /* \"#utility.yul\":3740:3931   */\n    tag_95:\n        /* \"#utility.yul\":3780:3783   */\n      0x00\n        /* \"#utility.yul\":3799:3819   */\n      tag_322\n        /* \"#utility.yul\":3817:3818   */\n      dup3\n        /* \"#utility.yul\":3799:3819   */\n      tag_244\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3794:3819   */\n      swap2\n      pop\n        /* \"#utility.yul\":3833:3853   */\n      tag_323\n        /* \"#utility.yul\":3851:3852   */\n      dup4\n        /* \"#utility.yul\":3833:3853   */\n      tag_244\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3828:3853   */\n      swap3\n      pop\n        /* \"#utility.yul\":3876:3877   */\n      dup3\n        /* \"#utility.yul\":3873:3874   */\n      dup3\n        /* \"#utility.yul\":3869:3878   */\n      add\n        /* \"#utility.yul\":3862:3878   */\n      swap1\n      pop\n        /* \"#utility.yul\":3897:3900   */\n      dup1\n        /* \"#utility.yul\":3894:3895   */\n      dup3\n        /* \"#utility.yul\":3891:3901   */\n      gt\n        /* \"#utility.yul\":3888:3924   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3904:3922   */\n      tag_325\n      tag_258\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3888:3924   */\n    tag_324:\n        /* \"#utility.yul\":3740:3931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3937:4170   */\n    tag_103:\n        /* \"#utility.yul\":3976:3979   */\n      0x00\n        /* \"#utility.yul\":3999:4023   */\n      tag_327\n        /* \"#utility.yul\":4017:4022   */\n      dup3\n        /* \"#utility.yul\":3999:4023   */\n      tag_244\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3990:4023   */\n      swap2\n      pop\n        /* \"#utility.yul\":4045:4111   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4038:4043   */\n      dup3\n        /* \"#utility.yul\":4035:4112   */\n      sub\n        /* \"#utility.yul\":4032:4135   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":4115:4133   */\n      tag_329\n      tag_258\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4032:4135   */\n    tag_328:\n        /* \"#utility.yul\":4162:4163   */\n      0x01\n        /* \"#utility.yul\":4155:4160   */\n      dup3\n        /* \"#utility.yul\":4151:4164   */\n      add\n        /* \"#utility.yul\":4144:4164   */\n      swap1\n      pop\n        /* \"#utility.yul\":3937:4170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4176:4508   */\n    tag_106:\n        /* \"#utility.yul\":4297:4301   */\n      0x00\n        /* \"#utility.yul\":4335:4337   */\n      0x40\n        /* \"#utility.yul\":4324:4333   */\n      dup3\n        /* \"#utility.yul\":4320:4338   */\n      add\n        /* \"#utility.yul\":4312:4338   */\n      swap1\n      pop\n        /* \"#utility.yul\":4348:4419   */\n      tag_331\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4405:4414   */\n      dup4\n        /* \"#utility.yul\":4401:4418   */\n      add\n        /* \"#utility.yul\":4392:4398   */\n      dup6\n        /* \"#utility.yul\":4348:4419   */\n      tag_243\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4429:4501   */\n      tag_332\n        /* \"#utility.yul\":4497:4499   */\n      0x20\n        /* \"#utility.yul\":4486:4495   */\n      dup4\n        /* \"#utility.yul\":4482:4500   */\n      add\n        /* \"#utility.yul\":4473:4479   */\n      dup5\n        /* \"#utility.yul\":4429:4501   */\n      tag_245\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4176:4508   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4924   */\n    tag_154:\n        /* \"#utility.yul\":4554:4561   */\n      0x00\n        /* \"#utility.yul\":4577:4597   */\n      tag_334\n        /* \"#utility.yul\":4595:4596   */\n      dup3\n        /* \"#utility.yul\":4577:4597   */\n      tag_244\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4572:4597   */\n      swap2\n      pop\n        /* \"#utility.yul\":4611:4631   */\n      tag_335\n        /* \"#utility.yul\":4629:4630   */\n      dup4\n        /* \"#utility.yul\":4611:4631   */\n      tag_244\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4606:4631   */\n      swap3\n      pop\n        /* \"#utility.yul\":4666:4667   */\n      dup3\n        /* \"#utility.yul\":4663:4664   */\n      dup3\n        /* \"#utility.yul\":4659:4668   */\n      mul\n        /* \"#utility.yul\":4688:4718   */\n      tag_336\n        /* \"#utility.yul\":4706:4717   */\n      dup2\n        /* \"#utility.yul\":4688:4718   */\n      tag_244\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4677:4718   */\n      swap2\n      pop\n        /* \"#utility.yul\":4867:4868   */\n      dup3\n        /* \"#utility.yul\":4858:4865   */\n      dup3\n        /* \"#utility.yul\":4854:4869   */\n      div\n        /* \"#utility.yul\":4851:4852   */\n      dup5\n        /* \"#utility.yul\":4848:4870   */\n      eq\n        /* \"#utility.yul\":4828:4829   */\n      dup4\n        /* \"#utility.yul\":4821:4830   */\n      iszero\n        /* \"#utility.yul\":4801:4884   */\n      or\n        /* \"#utility.yul\":4778:4917   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4897:4915   */\n      tag_338\n      tag_258\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4778:4917   */\n    tag_337:\n        /* \"#utility.yul\":4562:4924   */\n      pop\n        /* \"#utility.yul\":4514:4924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4930:5110   */\n    tag_259:\n        /* \"#utility.yul\":4978:5055   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4968:5056   */\n      mstore\n        /* \"#utility.yul\":5075:5079   */\n      0x12\n        /* \"#utility.yul\":5072:5073   */\n      0x04\n        /* \"#utility.yul\":5065:5080   */\n      mstore\n        /* \"#utility.yul\":5099:5103   */\n      0x24\n        /* \"#utility.yul\":5096:5097   */\n      0x00\n        /* \"#utility.yul\":5089:5104   */\n      revert\n        /* \"#utility.yul\":5116:5301   */\n    tag_156:\n        /* \"#utility.yul\":5156:5157   */\n      0x00\n        /* \"#utility.yul\":5173:5193   */\n      tag_341\n        /* \"#utility.yul\":5191:5192   */\n      dup3\n        /* \"#utility.yul\":5173:5193   */\n      tag_244\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5168:5193   */\n      swap2\n      pop\n        /* \"#utility.yul\":5207:5227   */\n      tag_342\n        /* \"#utility.yul\":5225:5226   */\n      dup4\n        /* \"#utility.yul\":5207:5227   */\n      tag_244\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5202:5227   */\n      swap3\n      pop\n        /* \"#utility.yul\":5246:5247   */\n      dup3\n        /* \"#utility.yul\":5236:5271   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5251:5269   */\n      tag_344\n      tag_259\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5236:5271   */\n    tag_343:\n        /* \"#utility.yul\":5293:5294   */\n      dup3\n        /* \"#utility.yul\":5290:5291   */\n      dup3\n        /* \"#utility.yul\":5286:5295   */\n      div\n        /* \"#utility.yul\":5281:5295   */\n      swap1\n      pop\n        /* \"#utility.yul\":5116:5301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5307:5749   */\n    tag_160:\n        /* \"#utility.yul\":5456:5460   */\n      0x00\n        /* \"#utility.yul\":5494:5496   */\n      0x60\n        /* \"#utility.yul\":5483:5492   */\n      dup3\n        /* \"#utility.yul\":5479:5497   */\n      add\n        /* \"#utility.yul\":5471:5497   */\n      swap1\n      pop\n        /* \"#utility.yul\":5507:5578   */\n      tag_346\n        /* \"#utility.yul\":5575:5576   */\n      0x00\n        /* \"#utility.yul\":5564:5573   */\n      dup4\n        /* \"#utility.yul\":5560:5577   */\n      add\n        /* \"#utility.yul\":5551:5557   */\n      dup7\n        /* \"#utility.yul\":5507:5578   */\n      tag_243\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5588:5660   */\n      tag_347\n        /* \"#utility.yul\":5656:5658   */\n      0x20\n        /* \"#utility.yul\":5645:5654   */\n      dup4\n        /* \"#utility.yul\":5641:5659   */\n      add\n        /* \"#utility.yul\":5632:5638   */\n      dup6\n        /* \"#utility.yul\":5588:5660   */\n      tag_243\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5670:5742   */\n      tag_348\n        /* \"#utility.yul\":5738:5740   */\n      0x40\n        /* \"#utility.yul\":5727:5736   */\n      dup4\n        /* \"#utility.yul\":5723:5741   */\n      add\n        /* \"#utility.yul\":5714:5720   */\n      dup5\n        /* \"#utility.yul\":5670:5742   */\n      tag_245\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5307:5749   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5755:5949   */\n    tag_184:\n        /* \"#utility.yul\":5795:5799   */\n      0x00\n        /* \"#utility.yul\":5815:5835   */\n      tag_350\n        /* \"#utility.yul\":5833:5834   */\n      dup3\n        /* \"#utility.yul\":5815:5835   */\n      tag_244\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5810:5835   */\n      swap2\n      pop\n        /* \"#utility.yul\":5849:5869   */\n      tag_351\n        /* \"#utility.yul\":5867:5868   */\n      dup4\n        /* \"#utility.yul\":5849:5869   */\n      tag_244\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5844:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5893:5894   */\n      dup3\n        /* \"#utility.yul\":5890:5891   */\n      dup3\n        /* \"#utility.yul\":5886:5895   */\n      sub\n        /* \"#utility.yul\":5878:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5917:5918   */\n      dup2\n        /* \"#utility.yul\":5911:5915   */\n      dup2\n        /* \"#utility.yul\":5908:5919   */\n      gt\n        /* \"#utility.yul\":5905:5942   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":5922:5940   */\n      tag_353\n      tag_258\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5905:5942   */\n    tag_352:\n        /* \"#utility.yul\":5755:5949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6102   */\n    tag_260:\n        /* \"#utility.yul\":6056:6067   */\n      0x00\n        /* \"#utility.yul\":6093:6096   */\n      dup2\n        /* \"#utility.yul\":6078:6096   */\n      swap1\n      pop\n        /* \"#utility.yul\":5955:6102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6222   */\n    tag_261:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6626   */\n    tag_262:\n        /* \"#utility.yul\":6387:6390   */\n      0x00\n        /* \"#utility.yul\":6408:6491   */\n      tag_357\n        /* \"#utility.yul\":6489:6490   */\n      0x00\n        /* \"#utility.yul\":6484:6487   */\n      dup4\n        /* \"#utility.yul\":6408:6491   */\n      tag_260\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6401:6491   */\n      swap2\n      pop\n        /* \"#utility.yul\":6500:6593   */\n      tag_358\n        /* \"#utility.yul\":6589:6592   */\n      dup3\n        /* \"#utility.yul\":6500:6593   */\n      tag_261\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6618:6619   */\n      0x00\n        /* \"#utility.yul\":6613:6616   */\n      dup3\n        /* \"#utility.yul\":6609:6620   */\n      add\n        /* \"#utility.yul\":6602:6620   */\n      swap1\n      pop\n        /* \"#utility.yul\":6228:6626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:7011   */\n    tag_190:\n        /* \"#utility.yul\":6816:6819   */\n      0x00\n        /* \"#utility.yul\":6838:6985   */\n      tag_360\n        /* \"#utility.yul\":6981:6984   */\n      dup3\n        /* \"#utility.yul\":6838:6985   */\n      tag_262\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6831:6985   */\n      swap2\n      pop\n        /* \"#utility.yul\":7002:7005   */\n      dup2\n        /* \"#utility.yul\":6995:7005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6632:7011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7017:7122   */\n    tag_263:\n        /* \"#utility.yul\":7053:7060   */\n      0x00\n        /* \"#utility.yul\":7093:7115   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":7086:7091   */\n      dup3\n        /* \"#utility.yul\":7082:7116   */\n      and\n        /* \"#utility.yul\":7071:7116   */\n      swap1\n      pop\n        /* \"#utility.yul\":7017:7122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7248   */\n    tag_264:\n        /* \"#utility.yul\":7200:7223   */\n      tag_363\n        /* \"#utility.yul\":7217:7222   */\n      dup2\n        /* \"#utility.yul\":7200:7223   */\n      tag_263\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7193:7198   */\n      dup2\n        /* \"#utility.yul\":7190:7224   */\n      eq\n        /* \"#utility.yul\":7180:7242   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7238:7239   */\n      0x00\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7228:7240   */\n      revert\n        /* \"#utility.yul\":7180:7242   */\n    tag_364:\n        /* \"#utility.yul\":7128:7248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7395   */\n    tag_265:\n        /* \"#utility.yul\":7310:7315   */\n      0x00\n        /* \"#utility.yul\":7341:7347   */\n      dup2\n        /* \"#utility.yul\":7335:7348   */\n      mload\n        /* \"#utility.yul\":7326:7348   */\n      swap1\n      pop\n        /* \"#utility.yul\":7357:7389   */\n      tag_366\n        /* \"#utility.yul\":7383:7388   */\n      dup2\n        /* \"#utility.yul\":7357:7389   */\n      tag_264\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7254:7395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7401:7477   */\n    tag_266:\n        /* \"#utility.yul\":7437:7444   */\n      0x00\n        /* \"#utility.yul\":7466:7471   */\n      dup2\n        /* \"#utility.yul\":7455:7471   */\n      swap1\n      pop\n        /* \"#utility.yul\":7401:7477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7483:7603   */\n    tag_267:\n        /* \"#utility.yul\":7555:7578   */\n      tag_369\n        /* \"#utility.yul\":7572:7577   */\n      dup2\n        /* \"#utility.yul\":7555:7578   */\n      tag_266\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7548:7553   */\n      dup2\n        /* \"#utility.yul\":7545:7579   */\n      eq\n        /* \"#utility.yul\":7535:7597   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7593:7594   */\n      0x00\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7583:7595   */\n      revert\n        /* \"#utility.yul\":7535:7597   */\n    tag_370:\n        /* \"#utility.yul\":7483:7603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7609:7750   */\n    tag_268:\n        /* \"#utility.yul\":7665:7670   */\n      0x00\n        /* \"#utility.yul\":7696:7702   */\n      dup2\n        /* \"#utility.yul\":7690:7703   */\n      mload\n        /* \"#utility.yul\":7681:7703   */\n      swap1\n      pop\n        /* \"#utility.yul\":7712:7744   */\n      tag_372\n        /* \"#utility.yul\":7738:7743   */\n      dup2\n        /* \"#utility.yul\":7712:7744   */\n      tag_267\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7609:7750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7756:7899   */\n    tag_269:\n        /* \"#utility.yul\":7813:7818   */\n      0x00\n        /* \"#utility.yul\":7844:7850   */\n      dup2\n        /* \"#utility.yul\":7838:7851   */\n      mload\n        /* \"#utility.yul\":7829:7851   */\n      swap1\n      pop\n        /* \"#utility.yul\":7860:7893   */\n      tag_374\n        /* \"#utility.yul\":7887:7892   */\n      dup2\n        /* \"#utility.yul\":7860:7893   */\n      tag_249\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7756:7899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7905:8876   */\n    tag_220:\n        /* \"#utility.yul\":8008:8014   */\n      0x00\n        /* \"#utility.yul\":8016:8022   */\n      0x00\n        /* \"#utility.yul\":8024:8030   */\n      0x00\n        /* \"#utility.yul\":8032:8038   */\n      0x00\n        /* \"#utility.yul\":8040:8046   */\n      0x00\n        /* \"#utility.yul\":8089:8092   */\n      0xa0\n        /* \"#utility.yul\":8077:8086   */\n      dup7\n        /* \"#utility.yul\":8068:8075   */\n      dup9\n        /* \"#utility.yul\":8064:8087   */\n      sub\n        /* \"#utility.yul\":8060:8093   */\n      slt\n        /* \"#utility.yul\":8057:8177   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":8096:8175   */\n      tag_377\n      tag_247\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":8057:8177   */\n    tag_376:\n        /* \"#utility.yul\":8216:8217   */\n      0x00\n        /* \"#utility.yul\":8241:8304   */\n      tag_378\n        /* \"#utility.yul\":8296:8303   */\n      dup9\n        /* \"#utility.yul\":8287:8293   */\n      dup3\n        /* \"#utility.yul\":8276:8285   */\n      dup10\n        /* \"#utility.yul\":8272:8294   */\n      add\n        /* \"#utility.yul\":8241:8304   */\n      tag_265\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8231:8304   */\n      swap6\n      pop\n        /* \"#utility.yul\":8187:8314   */\n      pop\n        /* \"#utility.yul\":8353:8355   */\n      0x20\n        /* \"#utility.yul\":8379:8442   */\n      tag_379\n        /* \"#utility.yul\":8434:8441   */\n      dup9\n        /* \"#utility.yul\":8425:8431   */\n      dup3\n        /* \"#utility.yul\":8414:8423   */\n      dup10\n        /* \"#utility.yul\":8410:8432   */\n      add\n        /* \"#utility.yul\":8379:8442   */\n      tag_268\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8369:8442   */\n      swap5\n      pop\n        /* \"#utility.yul\":8324:8452   */\n      pop\n        /* \"#utility.yul\":8491:8493   */\n      0x40\n        /* \"#utility.yul\":8517:8581   */\n      tag_380\n        /* \"#utility.yul\":8573:8580   */\n      dup9\n        /* \"#utility.yul\":8564:8570   */\n      dup3\n        /* \"#utility.yul\":8553:8562   */\n      dup10\n        /* \"#utility.yul\":8549:8571   */\n      add\n        /* \"#utility.yul\":8517:8581   */\n      tag_269\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8507:8581   */\n      swap4\n      pop\n        /* \"#utility.yul\":8462:8591   */\n      pop\n        /* \"#utility.yul\":8630:8632   */\n      0x60\n        /* \"#utility.yul\":8656:8720   */\n      tag_381\n        /* \"#utility.yul\":8712:8719   */\n      dup9\n        /* \"#utility.yul\":8703:8709   */\n      dup3\n        /* \"#utility.yul\":8692:8701   */\n      dup10\n        /* \"#utility.yul\":8688:8710   */\n      add\n        /* \"#utility.yul\":8656:8720   */\n      tag_269\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8646:8720   */\n      swap3\n      pop\n        /* \"#utility.yul\":8601:8730   */\n      pop\n        /* \"#utility.yul\":8769:8772   */\n      0x80\n        /* \"#utility.yul\":8796:8859   */\n      tag_382\n        /* \"#utility.yul\":8851:8858   */\n      dup9\n        /* \"#utility.yul\":8842:8848   */\n      dup3\n        /* \"#utility.yul\":8831:8840   */\n      dup10\n        /* \"#utility.yul\":8827:8849   */\n      add\n        /* \"#utility.yul\":8796:8859   */\n      tag_265\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8786:8859   */\n      swap2\n      pop\n        /* \"#utility.yul\":8740:8869   */\n      pop\n        /* \"#utility.yul\":7905:8876   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8882:9051   */\n    tag_270:\n        /* \"#utility.yul\":8966:8977   */\n      0x00\n        /* \"#utility.yul\":9000:9006   */\n      dup3\n        /* \"#utility.yul\":8995:8998   */\n      dup3\n        /* \"#utility.yul\":8988:9007   */\n      mstore\n        /* \"#utility.yul\":9040:9044   */\n      0x20\n        /* \"#utility.yul\":9035:9038   */\n      dup3\n        /* \"#utility.yul\":9031:9045   */\n      add\n        /* \"#utility.yul\":9016:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8882:9051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9057:9238   */\n    tag_271:\n        /* \"#utility.yul\":9197:9230   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9193:9194   */\n      0x00\n        /* \"#utility.yul\":9185:9191   */\n      dup3\n        /* \"#utility.yul\":9181:9195   */\n      add\n        /* \"#utility.yul\":9174:9231   */\n      mstore\n        /* \"#utility.yul\":9057:9238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9244:9610   */\n    tag_272:\n        /* \"#utility.yul\":9386:9389   */\n      0x00\n        /* \"#utility.yul\":9407:9474   */\n      tag_386\n        /* \"#utility.yul\":9471:9473   */\n      0x1f\n        /* \"#utility.yul\":9466:9469   */\n      dup4\n        /* \"#utility.yul\":9407:9474   */\n      tag_270\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9400:9474   */\n      swap2\n      pop\n        /* \"#utility.yul\":9483:9576   */\n      tag_387\n        /* \"#utility.yul\":9572:9575   */\n      dup3\n        /* \"#utility.yul\":9483:9576   */\n      tag_271\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9601:9603   */\n      0x20\n        /* \"#utility.yul\":9596:9599   */\n      dup3\n        /* \"#utility.yul\":9592:9604   */\n      add\n        /* \"#utility.yul\":9585:9604   */\n      swap1\n      pop\n        /* \"#utility.yul\":9244:9610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9616:10035   */\n    tag_236:\n        /* \"#utility.yul\":9782:9786   */\n      0x00\n        /* \"#utility.yul\":9820:9822   */\n      0x20\n        /* \"#utility.yul\":9809:9818   */\n      dup3\n        /* \"#utility.yul\":9805:9823   */\n      add\n        /* \"#utility.yul\":9797:9823   */\n      swap1\n      pop\n        /* \"#utility.yul\":9869:9878   */\n      dup2\n        /* \"#utility.yul\":9863:9867   */\n      dup2\n        /* \"#utility.yul\":9859:9879   */\n      sub\n        /* \"#utility.yul\":9855:9856   */\n      0x00\n        /* \"#utility.yul\":9844:9853   */\n      dup4\n        /* \"#utility.yul\":9840:9857   */\n      add\n        /* \"#utility.yul\":9833:9880   */\n      mstore\n        /* \"#utility.yul\":9897:10028   */\n      tag_389\n        /* \"#utility.yul\":10023:10027   */\n      dup2\n        /* \"#utility.yul\":9897:10028   */\n      tag_272\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9889:10028   */\n      swap1\n      pop\n        /* \"#utility.yul\":9616:10035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122023f117fa363d84db6bc7724cc6d82fed0268488a62bf4255fb354f47110c4bfc64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 656,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3227:11",
										"nodeType": "YulBlock",
										"src": "0:3227:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "608:80:11",
													"nodeType": "YulBlock",
													"src": "608:80:11",
													"statements": [
														{
															"nativeSrc": "618:22:11",
															"nodeType": "YulAssignment",
															"src": "618:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:11"
																},
																"nativeSrc": "627:13:11",
																"nodeType": "YulFunctionCall",
																"src": "627:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:11"
																},
																"nativeSrc": "649:33:11",
																"nodeType": "YulFunctionCall",
																"src": "649:33:11"
															},
															"nativeSrc": "649:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:11",
														"nodeType": "YulTypedName",
														"src": "586:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:11",
														"nodeType": "YulTypedName",
														"src": "594:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:11",
														"nodeType": "YulTypedName",
														"src": "602:5:11",
														"type": ""
													}
												],
												"src": "545:143:11"
											},
											{
												"body": {
													"nativeSrc": "739:81:11",
													"nodeType": "YulBlock",
													"src": "739:81:11",
													"statements": [
														{
															"nativeSrc": "749:65:11",
															"nodeType": "YulAssignment",
															"src": "749:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:11",
																		"nodeType": "YulLiteral",
																		"src": "771:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:11"
																},
																"nativeSrc": "760:54:11",
																"nodeType": "YulFunctionCall",
																"src": "760:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:11",
														"nodeType": "YulTypedName",
														"src": "721:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:11",
														"nodeType": "YulTypedName",
														"src": "731:7:11",
														"type": ""
													}
												],
												"src": "694:126:11"
											},
											{
												"body": {
													"nativeSrc": "871:51:11",
													"nodeType": "YulBlock",
													"src": "871:51:11",
													"statements": [
														{
															"nativeSrc": "881:35:11",
															"nodeType": "YulAssignment",
															"src": "881:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:11"
																},
																"nativeSrc": "892:24:11",
																"nodeType": "YulFunctionCall",
																"src": "892:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:11",
														"nodeType": "YulTypedName",
														"src": "853:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:11",
														"nodeType": "YulTypedName",
														"src": "863:7:11",
														"type": ""
													}
												],
												"src": "826:96:11"
											},
											{
												"body": {
													"nativeSrc": "971:79:11",
													"nodeType": "YulBlock",
													"src": "971:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:11",
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nativeSrc": "1030:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nativeSrc": "1030:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:11"
																				},
																				"nativeSrc": "1001:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:11"
																		},
																		"nativeSrc": "991:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:11"
																},
																"nativeSrc": "984:43:11",
																"nodeType": "YulFunctionCall",
																"src": "984:43:11"
															},
															"nativeSrc": "981:63:11",
															"nodeType": "YulIf",
															"src": "981:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:11",
														"nodeType": "YulTypedName",
														"src": "964:5:11",
														"type": ""
													}
												],
												"src": "928:122:11"
											},
											{
												"body": {
													"nativeSrc": "1119:80:11",
													"nodeType": "YulBlock",
													"src": "1119:80:11",
													"statements": [
														{
															"nativeSrc": "1129:22:11",
															"nodeType": "YulAssignment",
															"src": "1129:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:11"
																},
																"nativeSrc": "1138:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:11"
																},
																"nativeSrc": "1160:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:11"
															},
															"nativeSrc": "1160:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:11",
														"nodeType": "YulTypedName",
														"src": "1097:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:11",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:11",
														"nodeType": "YulTypedName",
														"src": "1113:5:11",
														"type": ""
													}
												],
												"src": "1056:143:11"
											},
											{
												"body": {
													"nativeSrc": "1350:832:11",
													"nodeType": "YulBlock",
													"src": "1350:832:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:11",
																"nodeType": "YulBlock",
																"src": "1397:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:11"
																			},
																			"nativeSrc": "1399:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:11"
																		},
																		"nativeSrc": "1399:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:11"
																		},
																		"nativeSrc": "1367:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:11"
																},
																"nativeSrc": "1363:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:11"
															},
															"nativeSrc": "1360:120:11",
															"nodeType": "YulIf",
															"src": "1360:120:11"
														},
														{
															"nativeSrc": "1490:128:11",
															"nodeType": "YulBlock",
															"src": "1490:128:11",
															"statements": [
																{
																	"nativeSrc": "1505:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:11"
																				},
																				"nativeSrc": "1576:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1544:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:11"
																		},
																		"nativeSrc": "1544:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:11",
															"nodeType": "YulBlock",
															"src": "1628:129:11",
															"statements": [
																{
																	"nativeSrc": "1643:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:11"
																				},
																				"nativeSrc": "1715:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1683:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:11"
																		},
																		"nativeSrc": "1683:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:11",
															"nodeType": "YulBlock",
															"src": "1767:129:11",
															"statements": [
																{
																	"nativeSrc": "1782:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:11"
																				},
																				"nativeSrc": "1854:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1822:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:11"
																		},
																		"nativeSrc": "1822:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:11",
															"nodeType": "YulBlock",
															"src": "1906:129:11",
															"statements": [
																{
																	"nativeSrc": "1921:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:11"
																				},
																				"nativeSrc": "1993:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1961:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:11"
																		},
																		"nativeSrc": "1961:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:11",
															"nodeType": "YulBlock",
															"src": "2045:130:11",
															"statements": [
																{
																	"nativeSrc": "2060:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:11",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:11"
																				},
																				"nativeSrc": "2133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2101:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:11"
																		},
																		"nativeSrc": "2101:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory",
												"nativeSrc": "1205:977:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:11",
														"nodeType": "YulTypedName",
														"src": "1288:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:11",
														"nodeType": "YulTypedName",
														"src": "1299:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:11",
														"nodeType": "YulTypedName",
														"src": "1311:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:11",
														"nodeType": "YulTypedName",
														"src": "1319:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:11",
														"nodeType": "YulTypedName",
														"src": "1327:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:11",
														"nodeType": "YulTypedName",
														"src": "1335:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:11",
														"nodeType": "YulTypedName",
														"src": "1343:6:11",
														"type": ""
													}
												],
												"src": "1205:977:11"
											},
											{
												"body": {
													"nativeSrc": "2253:53:11",
													"nodeType": "YulBlock",
													"src": "2253:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2270:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2293:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2293:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2275:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2275:17:11"
																		},
																		"nativeSrc": "2275:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2263:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:11"
																},
																"nativeSrc": "2263:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2263:37:11"
															},
															"nativeSrc": "2263:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2263:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2188:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2241:5:11",
														"nodeType": "YulTypedName",
														"src": "2241:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2248:3:11",
														"nodeType": "YulTypedName",
														"src": "2248:3:11",
														"type": ""
													}
												],
												"src": "2188:118:11"
											},
											{
												"body": {
													"nativeSrc": "2410:124:11",
													"nodeType": "YulBlock",
													"src": "2410:124:11",
													"statements": [
														{
															"nativeSrc": "2420:26:11",
															"nodeType": "YulAssignment",
															"src": "2420:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2432:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2443:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2428:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:11"
																},
																"nativeSrc": "2428:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2428:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2420:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2500:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2500:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:11"
																		},
																		"nativeSrc": "2509:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2456:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2456:43:11"
																},
																"nativeSrc": "2456:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2456:71:11"
															},
															"nativeSrc": "2456:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2456:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2312:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2382:9:11",
														"nodeType": "YulTypedName",
														"src": "2382:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2394:6:11",
														"nodeType": "YulTypedName",
														"src": "2394:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2405:4:11",
														"nodeType": "YulTypedName",
														"src": "2405:4:11",
														"type": ""
													}
												],
												"src": "2312:222:11"
											},
											{
												"body": {
													"nativeSrc": "2605:53:11",
													"nodeType": "YulBlock",
													"src": "2605:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2622:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2645:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2645:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2627:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2627:17:11"
																		},
																		"nativeSrc": "2627:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2627:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2615:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:11"
																},
																"nativeSrc": "2615:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2615:37:11"
															},
															"nativeSrc": "2615:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2615:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2540:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2593:5:11",
														"nodeType": "YulTypedName",
														"src": "2593:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2600:3:11",
														"nodeType": "YulTypedName",
														"src": "2600:3:11",
														"type": ""
													}
												],
												"src": "2540:118:11"
											},
											{
												"body": {
													"nativeSrc": "2762:124:11",
													"nodeType": "YulBlock",
													"src": "2762:124:11",
													"statements": [
														{
															"nativeSrc": "2772:26:11",
															"nodeType": "YulAssignment",
															"src": "2772:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2784:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2784:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2795:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2780:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:11"
																},
																"nativeSrc": "2780:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2780:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2772:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2772:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2852:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2852:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2865:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2865:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2876:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2876:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2861:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2861:3:11"
																		},
																		"nativeSrc": "2861:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2861:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2808:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:43:11"
																},
																"nativeSrc": "2808:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2808:71:11"
															},
															"nativeSrc": "2808:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2808:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2664:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2734:9:11",
														"nodeType": "YulTypedName",
														"src": "2734:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2746:6:11",
														"nodeType": "YulTypedName",
														"src": "2746:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2757:4:11",
														"nodeType": "YulTypedName",
														"src": "2757:4:11",
														"type": ""
													}
												],
												"src": "2664:222:11"
											},
											{
												"body": {
													"nativeSrc": "3018:206:11",
													"nodeType": "YulBlock",
													"src": "3018:206:11",
													"statements": [
														{
															"nativeSrc": "3028:26:11",
															"nodeType": "YulAssignment",
															"src": "3028:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3040:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3040:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3051:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3051:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3036:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3036:3:11"
																},
																"nativeSrc": "3036:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3036:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3028:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3028:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3108:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3121:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3121:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3132:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3132:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3117:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:11"
																		},
																		"nativeSrc": "3117:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3064:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3064:43:11"
																},
																"nativeSrc": "3064:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3064:71:11"
															},
															"nativeSrc": "3064:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3064:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3189:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3189:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3202:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3213:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3213:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3198:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:11"
																		},
																		"nativeSrc": "3198:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3145:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3145:43:11"
																},
																"nativeSrc": "3145:72:11",
																"nodeType": "YulFunctionCall",
																"src": "3145:72:11"
															},
															"nativeSrc": "3145:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "3145:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2892:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2982:9:11",
														"nodeType": "YulTypedName",
														"src": "2982:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2994:6:11",
														"nodeType": "YulTypedName",
														"src": "2994:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3002:6:11",
														"nodeType": "YulTypedName",
														"src": "3002:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3013:4:11",
														"nodeType": "YulTypedName",
														"src": "3013:4:11",
														"type": ""
													}
												],
												"src": "2892:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040525f6003555f6004555f60055534801561001b575f5ffd5b506040516120df3803806120df833981810160405281019061003d91906103e4565b8260015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100ac919061046a565b60405180910390fd5b6100c48161029060201b60201c565b505f850361010957846040517ff1fdfd2b0000000000000000000000000000000000000000000000000000000081526004016101009190610492565b60405180910390fd5b5f840361014d57836040517f5052fe8e0000000000000000000000000000000000000000000000000000000081526004016101449190610492565b60405180910390fd5b848411156101945784846040517f3122626300000000000000000000000000000000000000000000000000000000815260040161018b9291906104ab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101cb575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610202575f5ffd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460c081815250508360a0818152505050505050506104d2565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b61036981610357565b8114610373575f5ffd5b50565b5f8151905061038481610360565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103b38261038a565b9050919050565b6103c3816103a9565b81146103cd575f5ffd5b50565b5f815190506103de816103ba565b92915050565b5f5f5f5f5f60a086880312156103fd576103fc610353565b5b5f61040a88828901610376565b955050602061041b88828901610376565b945050604061042c888289016103d0565b935050606061043d888289016103d0565b925050608061044e888289016103d0565b9150509295509295909350565b610464816103a9565b82525050565b5f60208201905061047d5f83018461045b565b92915050565b61048c81610357565b82525050565b5f6020820190506104a55f830184610483565b92915050565b5f6040820190506104be5f830185610483565b6104cb6020830184610483565b9392505050565b60805160a05160c051611bb261052d5f395f81816103f5015261064a01525f8181610d13015261109401525f81816106c00152818161082b0152818161098e015281816110fc0152818161122f01526113460152611bb25ff3fe6080604052600436106100eb575f3560e01c80638648840a11610089578063939495bd11610058578063939495bd146102fc578063c6aca33c14610326578063f2fde38b14610350578063f39b1809146103785761012d565b80638648840a146102585780638da5cb5b14610280578063931fb90e146102aa57806393295c1c146102d25761012d565b8063715018a6116100c5578063715018a6146101c6578063779bb136146101dc57806379a823341461020657806382fe54b5146102305761012d565b806316a1930f1461016a5780636900670c14610174578063698b72411461019e5761012d565b3661012d57336040517fe1d158ff0000000000000000000000000000000000000000000000000000000081526004016101249190611686565b60405180910390fd5b336040517fe1d158ff0000000000000000000000000000000000000000000000000000000081526004016101619190611686565b60405180910390fd5b6101726103a2565b005b34801561017f575f5ffd5b506101886105bf565b60405161019591906116b7565b60405180910390f35b3480156101a9575f5ffd5b506101c460048036038101906101bf91906116fe565b610603565b005b3480156101d1575f5ffd5b506101da610874565b005b3480156101e7575f5ffd5b506101f0610887565b6040516101fd91906116b7565b60405180910390f35b348015610211575f5ffd5b5061021a610906565b6040516102279190611784565b60405180910390f35b34801561023b575f5ffd5b50610256600480360381019061025191906116fe565b61092b565b005b348015610263575f5ffd5b5061027e600480360381019061027991906117c7565b610937565b005b34801561028b575f5ffd5b5061029461094b565b6040516102a19190611686565b60405180910390f35b3480156102b5575f5ffd5b506102d060048036038101906102cb91906116fe565b610973565b005b3480156102dd575f5ffd5b506102e661097f565b6040516102f391906116b7565b60405180910390f35b348015610307575f5ffd5b50610310610988565b60405161031d91906116b7565b60405180910390f35b348015610331575f5ffd5b5061033a610a27565b60405161034791906116b7565b60405180910390f35b34801561035b575f5ffd5b50610376600480360381019061037191906117c7565b610a30565b005b348015610383575f5ffd5b5061038c610ab4565b60405161039991906116b7565b60405180910390f35b345f6103ad82610abd565b90505f81036103f357336040517fb2f092310000000000000000000000000000000000000000000000000000000081526004016103ea9190611686565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060055482610422919061181f565b111561046557806040517f2900b02c00000000000000000000000000000000000000000000000000000000815260040161045c91906116b7565b60405180910390fd5b5f61046f34610abd565b90503460065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104f8919061181f565b925050819055508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461054b919061181f565b9250508190555060035f81548092919061056490611852565b91905055508060055f82825461057a919061181f565b925050819055507f9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd33826040516105b2929190611899565b60405180910390a1505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b805f810361064857336040517fb2f0923100000000000000000000000000000000000000000000000000000000815260040161063f9190611686565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060055482610677919061181f565b11156106ba57806040517f2900b02c0000000000000000000000000000000000000000000000000000000081526004016106b191906116b7565b60405180910390fd5b8160065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610761919061181f565b925050819055508160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b4919061181f565b9250508190555060035f8154809291906107cd90611852565b91905055508160055f8282546107e3919061181f565b925050819055507f9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd338360405161081b929190611899565b60405180910390a16108703330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610aec909392919063ffffffff16565b5050565b61087c610b6e565b6108855f610bf5565b565b5f60065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61093481610cb8565b50565b61093f610b6e565b61094881610a30565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61097c81611045565b50565b5f600554905090565b5f60065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f600454905090565b610a38610b6e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aa8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a9f9190611686565b60405180910390fd5b610ab181610bf5565b50565b5f600354905090565b5f68056bc75e2d63100000610ad0611396565b83610adb91906118c0565b610ae5919061192e565b9050919050565b610b68848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610b219392919061195e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114d0565b50505050565b610b7661156b565b73ffffffffffffffffffffffffffffffffffffffff16610b9461094b565b73ffffffffffffffffffffffffffffffffffffffff1614610bf357610bb761156b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bea9190611686565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cc0611572565b805f610ccb82610abd565b90505f8103610d1157336040517fb2f09231000000000000000000000000000000000000000000000000000000008152600401610d089190611686565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115610d7657806040517fc3993565000000000000000000000000000000000000000000000000000000008152600401610d6d91906116b7565b60405180910390fd5b60065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610e355733816040517f51a73142000000000000000000000000000000000000000000000000000000008152600401610e2c929190611899565b60405180910390fd5b5f610e3f84610abd565b90508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e8d9190611993565b925050819055508360065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f1b9190611993565b9250508190555060045f815480929190610f3490611852565b91905055508060055f828254610f4a9190611993565b925050819055507f9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e83382604051610f82929190611899565b60405180910390a15f3373ffffffffffffffffffffffffffffffffffffffff1685604051610faf906119f3565b5f6040518083038185875af1925050503d805f8114610fe9576040519150601f19603f3d011682016040523d82523d5f602084013e610fee565b606091505b50509050806110365733856040517f6c5e1a1400000000000000000000000000000000000000000000000000000000815260040161102d929190611899565b60405180910390fd5b505050506110426115bf565b50565b61104d611572565b805f810361109257336040517fb2f092310000000000000000000000000000000000000000000000000000000081526004016110899190611686565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008111156110f757806040517fc39935650000000000000000000000000000000000000000000000000000000081526004016110ee91906116b7565b60405180910390fd5b60065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156111d65733816040517f51a731420000000000000000000000000000000000000000000000000000000081526004016111cd929190611899565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112229190611993565b925050819055508160065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112d09190611993565b9250508190555060045f8154809291906112e990611852565b91905055508160055f8282546112ff9190611993565b925050819055507f9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e83383604051611337929190611899565b60405180910390a161138a33837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115c89092919063ffffffff16565b506113936115bf565b50565b5f5f5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611403573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114279190611a8d565b509350509250505f820361147257816040517f3654402900000000000000000000000000000000000000000000000000000000815260040161146991906116b7565b60405180910390fd5b610e1061ffff1681426114859190611993565b11156114c857816040517f2609a2650000000000000000000000000000000000000000000000000000000081526004016114bf91906116b7565b60405180910390fd5b819250505090565b5f5f60205f8451602086015f885af1806114ef576040513d5f823e3d81fd5b3d92505f519150505f8214611508576001811415611523565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561156557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161155c9190611686565b60405180910390fd5b50505050565b5f33905090565b60025f54036115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad90611b5e565b60405180910390fd5b60025f81905550565b60015f81905550565b611642838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016115fb929190611899565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114d0565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61167082611647565b9050919050565b61168081611666565b82525050565b5f6020820190506116995f830184611677565b92915050565b5f819050919050565b6116b18161169f565b82525050565b5f6020820190506116ca5f8301846116a8565b92915050565b5f5ffd5b6116dd8161169f565b81146116e7575f5ffd5b50565b5f813590506116f8816116d4565b92915050565b5f60208284031215611713576117126116d0565b5b5f611720848285016116ea565b91505092915050565b5f819050919050565b5f61174c61174761174284611647565b611729565b611647565b9050919050565b5f61175d82611732565b9050919050565b5f61176e82611753565b9050919050565b61177e81611764565b82525050565b5f6020820190506117975f830184611775565b92915050565b6117a681611666565b81146117b0575f5ffd5b50565b5f813590506117c18161179d565b92915050565b5f602082840312156117dc576117db6116d0565b5b5f6117e9848285016117b3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118298261169f565b91506118348361169f565b925082820190508082111561184c5761184b6117f2565b5b92915050565b5f61185c8261169f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361188e5761188d6117f2565b5b600182019050919050565b5f6040820190506118ac5f830185611677565b6118b960208301846116a8565b9392505050565b5f6118ca8261169f565b91506118d58361169f565b92508282026118e38161169f565b915082820484148315176118fa576118f96117f2565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119388261169f565b91506119438361169f565b92508261195357611952611901565b5b828204905092915050565b5f6060820190506119715f830186611677565b61197e6020830185611677565b61198b60408301846116a8565b949350505050565b5f61199d8261169f565b91506119a88361169f565b92508282039050818111156119c0576119bf6117f2565b5b92915050565b5f81905092915050565b50565b5f6119de5f836119c6565b91506119e9826119d0565b5f82019050919050565b5f6119fd826119d3565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b611a2581611a07565b8114611a2f575f5ffd5b50565b5f81519050611a4081611a1c565b92915050565b5f819050919050565b611a5881611a46565b8114611a62575f5ffd5b50565b5f81519050611a7381611a4f565b92915050565b5f81519050611a87816116d4565b92915050565b5f5f5f5f5f60a08688031215611aa657611aa56116d0565b5b5f611ab388828901611a32565b9550506020611ac488828901611a65565b9450506040611ad588828901611a79565b9350506060611ae688828901611a79565b9250506080611af788828901611a32565b9150509295509295909350565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611b48601f83611b04565b9150611b5382611b14565b602082019050919050565b5f6020820190508181035f830152611b7581611b3c565b905091905056fea264697066735822122023f117fa363d84db6bc7724cc6d82fed0268488a62bf4255fb354f47110c4bfc64736f6c634300081e0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x20DF CODESIZE SUB DUP1 PUSH2 0x20DF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3D SWAP2 SWAP1 PUSH2 0x3E4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4 DUP2 PUSH2 0x290 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP6 SUB PUSH2 0x109 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0xF1FDFD2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 SUB PUSH2 0x14D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5052FE8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP5 GT ISZERO PUSH2 0x194 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x3122626300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP3 SWAP2 SWAP1 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x202 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP PUSH2 0x4D2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x369 DUP2 PUSH2 0x357 JUMP JUMPDEST DUP2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x384 DUP2 PUSH2 0x360 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3B3 DUP3 PUSH2 0x38A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x3A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3DE DUP2 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FC PUSH2 0x353 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x40A DUP9 DUP3 DUP10 ADD PUSH2 0x376 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x41B DUP9 DUP3 DUP10 ADD PUSH2 0x376 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x42C DUP9 DUP3 DUP10 ADD PUSH2 0x3D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x43D DUP9 DUP3 DUP10 ADD PUSH2 0x3D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x44E DUP9 DUP3 DUP10 ADD PUSH2 0x3D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x3A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x47D PUSH0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48C DUP2 PUSH2 0x357 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4BE PUSH0 DUP4 ADD DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x483 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1BB2 PUSH2 0x52D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3F5 ADD MSTORE PUSH2 0x64A ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xD13 ADD MSTORE PUSH2 0x1094 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x6C0 ADD MSTORE DUP2 DUP2 PUSH2 0x82B ADD MSTORE DUP2 DUP2 PUSH2 0x98E ADD MSTORE DUP2 DUP2 PUSH2 0x10FC ADD MSTORE DUP2 DUP2 PUSH2 0x122F ADD MSTORE PUSH2 0x1346 ADD MSTORE PUSH2 0x1BB2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8648840A GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x939495BD GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x939495BD EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xC6ACA33C EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF39B1809 EQ PUSH2 0x378 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x8648840A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x931FB90E EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x93295C1C EQ PUSH2 0x2D2 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x779BB136 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x79A82334 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x82FE54B5 EQ PUSH2 0x230 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x16A1930F EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x6900670C EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x698B7241 EQ PUSH2 0x19E JUMPI PUSH2 0x12D JUMP JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xE1D158FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x40 MLOAD PUSH32 0xE1D158FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x172 PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x874 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38C PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH0 PUSH2 0x3AD DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x3F3 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST GT ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x2900B02C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x46F CALLVALUE PUSH2 0xABD JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x564 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x648 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST GT ISZERO PUSH2 0x6BA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x2900B02C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x81B SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x870 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x87C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x885 PUSH0 PUSH2 0xBF5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0xCB8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x948 DUP2 PUSH2 0xA30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x1045 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0xB6E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xBF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0xAD0 PUSH2 0x1396 JUMP JUMPDEST DUP4 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x192E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB68 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB76 PUSH2 0x156B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB94 PUSH2 0x94B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF3 JUMPI PUSH2 0xBB7 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0x1572 JUMP JUMPDEST DUP1 PUSH0 PUSH2 0xCCB DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xD11 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xD76 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xC399356500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xE35 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x51A7314200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE3F DUP5 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF1B SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF34 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xF82 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xFAF SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1036 JUMPI CALLER DUP6 PUSH1 0x40 MLOAD PUSH32 0x6C5E1A1400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0x1042 PUSH2 0x15BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x1572 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1092 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x10F7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xC399356500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x11D6 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x51A7314200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CD SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12E9 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1337 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x138A CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1393 PUSH2 0x15BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x1472 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x3654402900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH2 0xFFFF AND DUP2 TIMESTAMP PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST GT ISZERO PUSH2 0x14C8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x2609A26500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1508 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1523 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1565 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AD SWAP1 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1642 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15FB SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1670 DUP3 PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1699 PUSH0 DUP4 ADD DUP5 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CA PUSH0 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x169F JUMP JUMPDEST DUP2 EQ PUSH2 0x16E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F8 DUP2 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1720 DUP5 DUP3 DUP6 ADD PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x175D DUP3 PUSH2 0x1732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x176E DUP3 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177E DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1797 PUSH0 DUP4 ADD DUP5 PUSH2 0x1775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C1 DUP2 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E9 DUP5 DUP3 DUP6 ADD PUSH2 0x17B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1829 DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x1834 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x185C DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x18B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18CA DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x18D5 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18E3 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1938 DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1901 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1971 PUSH0 DUP4 ADD DUP7 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x197E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x198B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x199D DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x19A8 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH0 DUP4 PUSH2 0x19C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A25 DUP2 PUSH2 0x1A07 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A40 DUP2 PUSH2 0x1A1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A58 DUP2 PUSH2 0x1A46 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A73 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A87 DUP2 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH2 0x1AA5 PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AB3 DUP9 DUP3 DUP10 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AC4 DUP9 DUP3 DUP10 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AD5 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B48 PUSH1 0x1F DUP4 PUSH2 0x1B04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B53 DUP3 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALL OR STATICCALL CALLDATASIZE RETURNDATASIZE DUP5 0xDB PUSH12 0xC7724CC6D82FED0268488A62 0xBF TIMESTAMP SSTORE EXTSTATICCALL CALLDATALOAD 0x4F SELFBALANCE GT 0xC 0x4B 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "736:13356:10:-:0;;;1855:1;1829:27;;1936:1;1912:25;;2076:1;2046:31;;5223:642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5323:6;1716:1:5;1821:7;:22;;;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;5355:1:10::1;5344:7;:12:::0;5341:56:::1;;5389:7;5365:32;;;;;;;;;;;:::i;:::-;;;;;;;;5341:56;5421:1;5410:7;:12:::0;5407:56:::1;;5455:7;5431:32;;;;;;;;;;;:::i;:::-;;;;;;;;5407:56;5486:7;5476;:17;5473:78;;;5534:7;5543;5502:49;;;;;;;;;;;;:::i;:::-;;;;;;;;5473:78;5581:1;5564:19;;:5;:19;;::::0;5561:32:::1;;5585:8;;;5561:32;5667:1;5644:25;;:11;:25;;::::0;5641:38:::1;;5671:8;;;5641:38;5742:11;5726:28;;;;;;;;::::0;::::1;5795:5;5764:6;;:37;;;;;;;;;;;;;;;;;;5823:7;5811:19;;;;::::0;::::1;5851:7;5840:18;;;;::::0;::::1;5223:642:::0;;;;;736:13356;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:118::-;2275:24;2293:5;2275:24;:::i;:::-;2270:3;2263:37;2188:118;;:::o;2312:222::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:71;2524:1;2513:9;2509:17;2500:6;2456:71;:::i;:::-;2312:222;;;;:::o;2540:118::-;2627:24;2645:5;2627:24;:::i;:::-;2622:3;2615:37;2540:118;;:::o;2664:222::-;2757:4;2795:2;2784:9;2780:18;2772:26;;2808:71;2876:1;2865:9;2861:17;2852:6;2808:71;:::i;:::-;2664:222;;;;:::o;2892:332::-;3013:4;3051:2;3040:9;3036:18;3028:26;;3064:71;3132:1;3121:9;3117:17;3108:6;3064:71;:::i;:::-;3145:72;3213:2;3202:9;3198:18;3189:6;3145:72;:::i;:::-;2892:332;;;;;:::o;736:13356:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1166": {
									"entryPoint": null,
									"id": 1166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1176": {
									"entryPoint": null,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_848": {
									"entryPoint": 5328,
									"id": 848,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 2926,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_902": {
									"entryPoint": 5483,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_336": {
									"entryPoint": 5567,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_328": {
									"entryPoint": 5490,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_retirarFondosETH_1443": {
									"entryPoint": 3256,
									"id": 1443,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_retirarFondosUSDC_1495": {
									"entryPoint": 4165,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 3061,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@chainLinkFeeds_1223": {
									"entryPoint": 5014,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertirEthEnUSDC_1639": {
									"entryPoint": 2749,
									"id": 1639,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositarETH_1566": {
									"entryPoint": 930,
									"id": 1566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositarUSDC_1620": {
									"entryPoint": 1539,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@i_feed_956": {
									"entryPoint": 2310,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": 2379,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 2164,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@retirarETH_1506": {
									"entryPoint": 2347,
									"id": 1506,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@retirarUSDC_1517": {
									"entryPoint": 2419,
									"id": 1517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 2796,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_471": {
									"entryPoint": 5576,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 2608,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferirOwner_1731": {
									"entryPoint": 2359,
									"id": 1731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verBoveda_1653": {
									"entryPoint": 1471,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verSaldoETH_1691": {
									"entryPoint": 2183,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verSaldoUSDC_1672": {
									"entryPoint": 2440,
									"id": 1672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verTotalContrato_1718": {
									"entryPoint": 2431,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verTotalDepositos_1700": {
									"entryPoint": 2740,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verTotalRetiros_1709": {
									"entryPoint": 2599,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 6663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6401,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10038:11",
										"nodeType": "YulBlock",
										"src": "0:10038:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:11",
													"nodeType": "YulBlock",
													"src": "52:81:11",
													"statements": [
														{
															"nativeSrc": "62:65:11",
															"nodeType": "YulAssignment",
															"src": "62:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:11",
																		"nodeType": "YulLiteral",
																		"src": "84:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:11"
																},
																"nativeSrc": "73:54:11",
																"nodeType": "YulFunctionCall",
																"src": "73:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:126:11"
											},
											{
												"body": {
													"nativeSrc": "184:51:11",
													"nodeType": "YulBlock",
													"src": "184:51:11",
													"statements": [
														{
															"nativeSrc": "194:35:11",
															"nodeType": "YulAssignment",
															"src": "194:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:11"
																},
																"nativeSrc": "205:24:11",
																"nodeType": "YulFunctionCall",
																"src": "205:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:11",
														"nodeType": "YulTypedName",
														"src": "166:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:11",
														"nodeType": "YulTypedName",
														"src": "176:7:11",
														"type": ""
													}
												],
												"src": "139:96:11"
											},
											{
												"body": {
													"nativeSrc": "306:53:11",
													"nodeType": "YulBlock",
													"src": "306:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:11"
																		},
																		"nativeSrc": "328:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:11"
																},
																"nativeSrc": "316:37:11",
																"nodeType": "YulFunctionCall",
																"src": "316:37:11"
															},
															"nativeSrc": "316:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:11",
														"nodeType": "YulTypedName",
														"src": "294:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:11",
														"nodeType": "YulTypedName",
														"src": "301:3:11",
														"type": ""
													}
												],
												"src": "241:118:11"
											},
											{
												"body": {
													"nativeSrc": "463:124:11",
													"nodeType": "YulBlock",
													"src": "463:124:11",
													"statements": [
														{
															"nativeSrc": "473:26:11",
															"nodeType": "YulAssignment",
															"src": "473:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:11",
																		"nodeType": "YulLiteral",
																		"src": "496:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:11"
																},
																"nativeSrc": "481:18:11",
																"nodeType": "YulFunctionCall",
																"src": "481:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:11",
																				"nodeType": "YulLiteral",
																				"src": "577:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:11"
																		},
																		"nativeSrc": "562:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:11"
																},
																"nativeSrc": "509:71:11",
																"nodeType": "YulFunctionCall",
																"src": "509:71:11"
															},
															"nativeSrc": "509:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:11",
														"nodeType": "YulTypedName",
														"src": "435:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:11",
														"nodeType": "YulTypedName",
														"src": "447:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:11",
														"nodeType": "YulTypedName",
														"src": "458:4:11",
														"type": ""
													}
												],
												"src": "365:222:11"
											},
											{
												"body": {
													"nativeSrc": "638:32:11",
													"nodeType": "YulBlock",
													"src": "638:32:11",
													"statements": [
														{
															"nativeSrc": "648:16:11",
															"nodeType": "YulAssignment",
															"src": "648:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:11",
																"nodeType": "YulIdentifier",
																"src": "659:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:11",
														"nodeType": "YulTypedName",
														"src": "620:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:11",
														"nodeType": "YulTypedName",
														"src": "630:7:11",
														"type": ""
													}
												],
												"src": "593:77:11"
											},
											{
												"body": {
													"nativeSrc": "741:53:11",
													"nodeType": "YulBlock",
													"src": "741:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:11"
																		},
																		"nativeSrc": "763:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:11"
																},
																"nativeSrc": "751:37:11",
																"nodeType": "YulFunctionCall",
																"src": "751:37:11"
															},
															"nativeSrc": "751:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:11",
														"nodeType": "YulTypedName",
														"src": "729:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:11",
														"nodeType": "YulTypedName",
														"src": "736:3:11",
														"type": ""
													}
												],
												"src": "676:118:11"
											},
											{
												"body": {
													"nativeSrc": "898:124:11",
													"nodeType": "YulBlock",
													"src": "898:124:11",
													"statements": [
														{
															"nativeSrc": "908:26:11",
															"nodeType": "YulAssignment",
															"src": "908:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:11",
																		"nodeType": "YulLiteral",
																		"src": "931:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:11"
																},
																"nativeSrc": "916:18:11",
																"nodeType": "YulFunctionCall",
																"src": "916:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:11"
																		},
																		"nativeSrc": "997:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:11"
																},
																"nativeSrc": "944:71:11",
																"nodeType": "YulFunctionCall",
																"src": "944:71:11"
															},
															"nativeSrc": "944:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:11",
														"nodeType": "YulTypedName",
														"src": "870:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:11",
														"nodeType": "YulTypedName",
														"src": "882:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:11",
														"nodeType": "YulTypedName",
														"src": "893:4:11",
														"type": ""
													}
												],
												"src": "800:222:11"
											},
											{
												"body": {
													"nativeSrc": "1068:35:11",
													"nodeType": "YulBlock",
													"src": "1068:35:11",
													"statements": [
														{
															"nativeSrc": "1078:19:11",
															"nodeType": "YulAssignment",
															"src": "1078:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:11"
																},
																"nativeSrc": "1088:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:11",
														"nodeType": "YulTypedName",
														"src": "1061:6:11",
														"type": ""
													}
												],
												"src": "1028:75:11"
											},
											{
												"body": {
													"nativeSrc": "1198:28:11",
													"nodeType": "YulBlock",
													"src": "1198:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:11"
																},
																"nativeSrc": "1208:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:11"
															},
															"nativeSrc": "1208:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:11"
											},
											{
												"body": {
													"nativeSrc": "1321:28:11",
													"nodeType": "YulBlock",
													"src": "1321:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:11"
																},
																"nativeSrc": "1331:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:11"
															},
															"nativeSrc": "1331:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:11"
											},
											{
												"body": {
													"nativeSrc": "1398:79:11",
													"nodeType": "YulBlock",
													"src": "1398:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:11",
																"nodeType": "YulBlock",
																"src": "1455:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:11"
																			},
																			"nativeSrc": "1457:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:11"
																		},
																		"nativeSrc": "1457:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:11"
																				},
																				"nativeSrc": "1428:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:11"
																		},
																		"nativeSrc": "1418:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:11"
																},
																"nativeSrc": "1411:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:11"
															},
															"nativeSrc": "1408:63:11",
															"nodeType": "YulIf",
															"src": "1408:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:11",
														"nodeType": "YulTypedName",
														"src": "1391:5:11",
														"type": ""
													}
												],
												"src": "1355:122:11"
											},
											{
												"body": {
													"nativeSrc": "1535:87:11",
													"nodeType": "YulBlock",
													"src": "1535:87:11",
													"statements": [
														{
															"nativeSrc": "1545:29:11",
															"nodeType": "YulAssignment",
															"src": "1545:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:11"
																},
																"nativeSrc": "1554:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1583:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:11"
																},
																"nativeSrc": "1583:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:11"
															},
															"nativeSrc": "1583:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1483:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:11",
														"nodeType": "YulTypedName",
														"src": "1513:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:11",
														"nodeType": "YulTypedName",
														"src": "1521:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:11",
														"nodeType": "YulTypedName",
														"src": "1529:5:11",
														"type": ""
													}
												],
												"src": "1483:139:11"
											},
											{
												"body": {
													"nativeSrc": "1694:263:11",
													"nodeType": "YulBlock",
													"src": "1694:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:11",
																"nodeType": "YulBlock",
																"src": "1740:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:11"
																			},
																			"nativeSrc": "1742:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:11"
																		},
																		"nativeSrc": "1742:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:11"
																		},
																		"nativeSrc": "1711:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:11"
																},
																"nativeSrc": "1707:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:11"
															},
															"nativeSrc": "1704:119:11",
															"nodeType": "YulIf",
															"src": "1704:119:11"
														},
														{
															"nativeSrc": "1833:117:11",
															"nodeType": "YulBlock",
															"src": "1833:117:11",
															"statements": [
																{
																	"nativeSrc": "1848:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:11"
																				},
																				"nativeSrc": "1908:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1887:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:11"
																		},
																		"nativeSrc": "1887:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1628:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:11",
														"nodeType": "YulTypedName",
														"src": "1664:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:11",
														"nodeType": "YulTypedName",
														"src": "1675:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:11",
														"nodeType": "YulTypedName",
														"src": "1687:6:11",
														"type": ""
													}
												],
												"src": "1628:329:11"
											},
											{
												"body": {
													"nativeSrc": "1995:28:11",
													"nodeType": "YulBlock",
													"src": "1995:28:11",
													"statements": [
														{
															"nativeSrc": "2005:12:11",
															"nodeType": "YulAssignment",
															"src": "2005:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2012:5:11",
																"nodeType": "YulIdentifier",
																"src": "2012:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2005:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2005:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1963:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1981:5:11",
														"nodeType": "YulTypedName",
														"src": "1981:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1991:3:11",
														"nodeType": "YulTypedName",
														"src": "1991:3:11",
														"type": ""
													}
												],
												"src": "1963:60:11"
											},
											{
												"body": {
													"nativeSrc": "2089:82:11",
													"nodeType": "YulBlock",
													"src": "2089:82:11",
													"statements": [
														{
															"nativeSrc": "2099:66:11",
															"nodeType": "YulAssignment",
															"src": "2099:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2157:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2157:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2139:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2139:17:11"
																				},
																				"nativeSrc": "2139:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2139:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2130:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "2130:8:11"
																		},
																		"nativeSrc": "2130:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2130:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2112:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:11"
																},
																"nativeSrc": "2112:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2112:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2099:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2099:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2029:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2069:5:11",
														"nodeType": "YulTypedName",
														"src": "2069:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2079:9:11",
														"nodeType": "YulTypedName",
														"src": "2079:9:11",
														"type": ""
													}
												],
												"src": "2029:142:11"
											},
											{
												"body": {
													"nativeSrc": "2237:66:11",
													"nodeType": "YulBlock",
													"src": "2237:66:11",
													"statements": [
														{
															"nativeSrc": "2247:50:11",
															"nodeType": "YulAssignment",
															"src": "2247:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2291:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2291:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2260:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2260:30:11"
																},
																"nativeSrc": "2260:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2260:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2247:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2247:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2177:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:11",
														"nodeType": "YulTypedName",
														"src": "2217:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2227:9:11",
														"nodeType": "YulTypedName",
														"src": "2227:9:11",
														"type": ""
													}
												],
												"src": "2177:126:11"
											},
											{
												"body": {
													"nativeSrc": "2397:66:11",
													"nodeType": "YulBlock",
													"src": "2397:66:11",
													"statements": [
														{
															"nativeSrc": "2407:50:11",
															"nodeType": "YulAssignment",
															"src": "2407:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2451:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2451:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2420:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:30:11"
																},
																"nativeSrc": "2420:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2420:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2407:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2407:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "2309:154:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2377:5:11",
														"nodeType": "YulTypedName",
														"src": "2377:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2387:9:11",
														"nodeType": "YulTypedName",
														"src": "2387:9:11",
														"type": ""
													}
												],
												"src": "2309:154:11"
											},
											{
												"body": {
													"nativeSrc": "2562:94:11",
													"nodeType": "YulBlock",
													"src": "2562:94:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2579:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2579:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2643:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2643:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "2584:58:11",
																			"nodeType": "YulIdentifier",
																			"src": "2584:58:11"
																		},
																		"nativeSrc": "2584:65:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2584:65:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:11"
																},
																"nativeSrc": "2572:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2572:78:11"
															},
															"nativeSrc": "2572:78:11",
															"nodeType": "YulExpressionStatement",
															"src": "2572:78:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "2469:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2550:5:11",
														"nodeType": "YulTypedName",
														"src": "2550:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2557:3:11",
														"nodeType": "YulTypedName",
														"src": "2557:3:11",
														"type": ""
													}
												],
												"src": "2469:187:11"
											},
											{
												"body": {
													"nativeSrc": "2788:152:11",
													"nodeType": "YulBlock",
													"src": "2788:152:11",
													"statements": [
														{
															"nativeSrc": "2798:26:11",
															"nodeType": "YulAssignment",
															"src": "2798:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2810:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2810:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2821:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2821:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:11"
																},
																"nativeSrc": "2806:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2806:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2798:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2798:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2906:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2906:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2919:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2919:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2930:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2930:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2915:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:11"
																		},
																		"nativeSrc": "2915:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "2834:71:11",
																	"nodeType": "YulIdentifier",
																	"src": "2834:71:11"
																},
																"nativeSrc": "2834:99:11",
																"nodeType": "YulFunctionCall",
																"src": "2834:99:11"
															},
															"nativeSrc": "2834:99:11",
															"nodeType": "YulExpressionStatement",
															"src": "2834:99:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "2662:278:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2760:9:11",
														"nodeType": "YulTypedName",
														"src": "2760:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2772:6:11",
														"nodeType": "YulTypedName",
														"src": "2772:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2783:4:11",
														"nodeType": "YulTypedName",
														"src": "2783:4:11",
														"type": ""
													}
												],
												"src": "2662:278:11"
											},
											{
												"body": {
													"nativeSrc": "2989:79:11",
													"nodeType": "YulBlock",
													"src": "2989:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3046:16:11",
																"nodeType": "YulBlock",
																"src": "3046:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3058:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3058:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3048:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3048:6:11"
																			},
																			"nativeSrc": "3048:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3048:12:11"
																		},
																		"nativeSrc": "3048:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3048:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3012:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3012:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3037:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3037:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3019:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3019:17:11"
																				},
																				"nativeSrc": "3019:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3019:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3009:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3009:2:11"
																		},
																		"nativeSrc": "3009:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3009:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3002:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:11"
																},
																"nativeSrc": "3002:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3002:43:11"
															},
															"nativeSrc": "2999:63:11",
															"nodeType": "YulIf",
															"src": "2999:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2946:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2982:5:11",
														"nodeType": "YulTypedName",
														"src": "2982:5:11",
														"type": ""
													}
												],
												"src": "2946:122:11"
											},
											{
												"body": {
													"nativeSrc": "3126:87:11",
													"nodeType": "YulBlock",
													"src": "3126:87:11",
													"statements": [
														{
															"nativeSrc": "3136:29:11",
															"nodeType": "YulAssignment",
															"src": "3136:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3158:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3145:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:11"
																},
																"nativeSrc": "3145:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3145:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3136:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3136:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3174:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3174:26:11"
																},
																"nativeSrc": "3174:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3174:33:11"
															},
															"nativeSrc": "3174:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3174:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3074:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3104:6:11",
														"nodeType": "YulTypedName",
														"src": "3104:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3112:3:11",
														"nodeType": "YulTypedName",
														"src": "3112:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3120:5:11",
														"nodeType": "YulTypedName",
														"src": "3120:5:11",
														"type": ""
													}
												],
												"src": "3074:139:11"
											},
											{
												"body": {
													"nativeSrc": "3285:263:11",
													"nodeType": "YulBlock",
													"src": "3285:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3331:83:11",
																"nodeType": "YulBlock",
																"src": "3331:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3333:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3333:77:11"
																			},
																			"nativeSrc": "3333:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3333:79:11"
																		},
																		"nativeSrc": "3333:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3333:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3306:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3306:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3315:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3315:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3302:3:11"
																		},
																		"nativeSrc": "3302:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3302:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3327:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3298:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3298:3:11"
																},
																"nativeSrc": "3298:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3298:32:11"
															},
															"nativeSrc": "3295:119:11",
															"nodeType": "YulIf",
															"src": "3295:119:11"
														},
														{
															"nativeSrc": "3424:117:11",
															"nodeType": "YulBlock",
															"src": "3424:117:11",
															"statements": [
																{
																	"nativeSrc": "3439:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3439:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3453:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3453:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3443:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3443:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3468:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3468:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3503:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3503:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3514:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3514:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3499:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3499:3:11"
																				},
																				"nativeSrc": "3499:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3499:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3523:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3523:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3478:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3478:20:11"
																		},
																		"nativeSrc": "3478:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3468:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3468:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3219:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3255:9:11",
														"nodeType": "YulTypedName",
														"src": "3255:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3266:7:11",
														"nodeType": "YulTypedName",
														"src": "3266:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3278:6:11",
														"nodeType": "YulTypedName",
														"src": "3278:6:11",
														"type": ""
													}
												],
												"src": "3219:329:11"
											},
											{
												"body": {
													"nativeSrc": "3582:152:11",
													"nodeType": "YulBlock",
													"src": "3582:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3599:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3599:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3602:77:11",
																		"nodeType": "YulLiteral",
																		"src": "3602:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3592:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:11"
																},
																"nativeSrc": "3592:88:11",
																"nodeType": "YulFunctionCall",
																"src": "3592:88:11"
															},
															"nativeSrc": "3592:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "3592:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3696:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3696:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3699:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3699:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3689:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:11"
																},
																"nativeSrc": "3689:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3689:15:11"
															},
															"nativeSrc": "3689:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3689:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3720:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3720:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3723:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3723:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3713:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:11"
																},
																"nativeSrc": "3713:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3713:15:11"
															},
															"nativeSrc": "3713:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3713:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3554:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3554:180:11"
											},
											{
												"body": {
													"nativeSrc": "3784:147:11",
													"nodeType": "YulBlock",
													"src": "3784:147:11",
													"statements": [
														{
															"nativeSrc": "3794:25:11",
															"nodeType": "YulAssignment",
															"src": "3794:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3817:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3817:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3799:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3799:17:11"
																},
																"nativeSrc": "3799:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3799:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3794:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "3794:1:11"
																}
															]
														},
														{
															"nativeSrc": "3828:25:11",
															"nodeType": "YulAssignment",
															"src": "3828:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3851:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3851:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3833:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3833:17:11"
																},
																"nativeSrc": "3833:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3833:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3828:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "3828:1:11"
																}
															]
														},
														{
															"nativeSrc": "3862:16:11",
															"nodeType": "YulAssignment",
															"src": "3862:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3873:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3873:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3876:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3876:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3869:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3869:3:11"
																},
																"nativeSrc": "3869:9:11",
																"nodeType": "YulFunctionCall",
																"src": "3869:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3862:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3902:22:11",
																"nodeType": "YulBlock",
																"src": "3902:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3904:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3904:16:11"
																			},
																			"nativeSrc": "3904:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3904:18:11"
																		},
																		"nativeSrc": "3904:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3904:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3894:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "3894:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3897:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3897:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3891:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3891:2:11"
																},
																"nativeSrc": "3891:10:11",
																"nodeType": "YulFunctionCall",
																"src": "3891:10:11"
															},
															"nativeSrc": "3888:36:11",
															"nodeType": "YulIf",
															"src": "3888:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3740:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3771:1:11",
														"nodeType": "YulTypedName",
														"src": "3771:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3774:1:11",
														"nodeType": "YulTypedName",
														"src": "3774:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3780:3:11",
														"nodeType": "YulTypedName",
														"src": "3780:3:11",
														"type": ""
													}
												],
												"src": "3740:191:11"
											},
											{
												"body": {
													"nativeSrc": "3980:190:11",
													"nodeType": "YulBlock",
													"src": "3980:190:11",
													"statements": [
														{
															"nativeSrc": "3990:33:11",
															"nodeType": "YulAssignment",
															"src": "3990:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4017:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4017:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3999:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3999:17:11"
																},
																"nativeSrc": "3999:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3999:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3990:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3990:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4113:22:11",
																"nodeType": "YulBlock",
																"src": "4113:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4115:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4115:16:11"
																			},
																			"nativeSrc": "4115:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4115:18:11"
																		},
																		"nativeSrc": "4115:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4038:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4038:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4045:66:11",
																		"nodeType": "YulLiteral",
																		"src": "4045:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4035:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4035:2:11"
																},
																"nativeSrc": "4035:77:11",
																"nodeType": "YulFunctionCall",
																"src": "4035:77:11"
															},
															"nativeSrc": "4032:103:11",
															"nodeType": "YulIf",
															"src": "4032:103:11"
														},
														{
															"nativeSrc": "4144:20:11",
															"nodeType": "YulAssignment",
															"src": "4144:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4155:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4155:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4162:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4162:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4151:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:11"
																},
																"nativeSrc": "4151:13:11",
																"nodeType": "YulFunctionCall",
																"src": "4151:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4144:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3937:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3966:5:11",
														"nodeType": "YulTypedName",
														"src": "3966:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3976:3:11",
														"nodeType": "YulTypedName",
														"src": "3976:3:11",
														"type": ""
													}
												],
												"src": "3937:233:11"
											},
											{
												"body": {
													"nativeSrc": "4302:206:11",
													"nodeType": "YulBlock",
													"src": "4302:206:11",
													"statements": [
														{
															"nativeSrc": "4312:26:11",
															"nodeType": "YulAssignment",
															"src": "4312:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4324:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4324:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4335:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4320:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:11"
																},
																"nativeSrc": "4320:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4320:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4312:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4312:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4392:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4392:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4405:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4405:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4416:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4416:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4401:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:11"
																		},
																		"nativeSrc": "4401:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4401:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4348:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4348:43:11"
																},
																"nativeSrc": "4348:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4348:71:11"
															},
															"nativeSrc": "4348:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4348:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4473:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4473:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4486:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4486:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4497:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4497:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4482:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4482:3:11"
																		},
																		"nativeSrc": "4482:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4482:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4429:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4429:43:11"
																},
																"nativeSrc": "4429:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4429:72:11"
															},
															"nativeSrc": "4429:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4429:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4176:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4266:9:11",
														"nodeType": "YulTypedName",
														"src": "4266:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4278:6:11",
														"nodeType": "YulTypedName",
														"src": "4278:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4286:6:11",
														"nodeType": "YulTypedName",
														"src": "4286:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4297:4:11",
														"nodeType": "YulTypedName",
														"src": "4297:4:11",
														"type": ""
													}
												],
												"src": "4176:332:11"
											},
											{
												"body": {
													"nativeSrc": "4562:362:11",
													"nodeType": "YulBlock",
													"src": "4562:362:11",
													"statements": [
														{
															"nativeSrc": "4572:25:11",
															"nodeType": "YulAssignment",
															"src": "4572:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4595:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4595:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4577:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4577:17:11"
																},
																"nativeSrc": "4577:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4577:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4572:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4572:1:11"
																}
															]
														},
														{
															"nativeSrc": "4606:25:11",
															"nodeType": "YulAssignment",
															"src": "4606:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4629:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4629:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4611:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4611:17:11"
																},
																"nativeSrc": "4611:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4611:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4606:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4606:1:11"
																}
															]
														},
														{
															"nativeSrc": "4640:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4640:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4663:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4666:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4666:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4659:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:11"
																},
																"nativeSrc": "4659:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4659:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4644:11:11",
																	"nodeType": "YulTypedName",
																	"src": "4644:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4677:41:11",
															"nodeType": "YulAssignment",
															"src": "4677:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4706:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4688:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4688:17:11"
																},
																"nativeSrc": "4688:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4688:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4677:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4677:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4895:22:11",
																"nodeType": "YulBlock",
																"src": "4895:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4897:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4897:16:11"
																			},
																			"nativeSrc": "4897:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4897:18:11"
																		},
																		"nativeSrc": "4897:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4897:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4828:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4828:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4821:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4821:6:11"
																				},
																				"nativeSrc": "4821:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4821:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4851:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4851:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4858:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "4858:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4867:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "4867:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4854:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4854:3:11"
																						},
																						"nativeSrc": "4854:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4854:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4848:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4848:2:11"
																				},
																				"nativeSrc": "4848:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4848:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4801:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4801:2:11"
																		},
																		"nativeSrc": "4801:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4801:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4781:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:11"
																},
																"nativeSrc": "4781:113:11",
																"nodeType": "YulFunctionCall",
																"src": "4781:113:11"
															},
															"nativeSrc": "4778:139:11",
															"nodeType": "YulIf",
															"src": "4778:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4514:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4545:1:11",
														"nodeType": "YulTypedName",
														"src": "4545:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4548:1:11",
														"nodeType": "YulTypedName",
														"src": "4548:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4554:7:11",
														"nodeType": "YulTypedName",
														"src": "4554:7:11",
														"type": ""
													}
												],
												"src": "4514:410:11"
											},
											{
												"body": {
													"nativeSrc": "4958:152:11",
													"nodeType": "YulBlock",
													"src": "4958:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4975:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4975:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4978:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4978:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4968:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:11"
																},
																"nativeSrc": "4968:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4968:88:11"
															},
															"nativeSrc": "4968:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4968:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5072:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5075:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5075:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5065:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:11"
																},
																"nativeSrc": "5065:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5065:15:11"
															},
															"nativeSrc": "5065:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5065:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5096:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5096:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5099:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5099:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5089:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5089:6:11"
																},
																"nativeSrc": "5089:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5089:15:11"
															},
															"nativeSrc": "5089:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5089:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4930:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4930:180:11"
											},
											{
												"body": {
													"nativeSrc": "5158:143:11",
													"nodeType": "YulBlock",
													"src": "5158:143:11",
													"statements": [
														{
															"nativeSrc": "5168:25:11",
															"nodeType": "YulAssignment",
															"src": "5168:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5191:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5191:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5173:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5173:17:11"
																},
																"nativeSrc": "5173:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5173:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5168:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5168:1:11"
																}
															]
														},
														{
															"nativeSrc": "5202:25:11",
															"nodeType": "YulAssignment",
															"src": "5202:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5225:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5225:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5207:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5207:17:11"
																},
																"nativeSrc": "5207:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5207:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5202:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5202:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5249:22:11",
																"nodeType": "YulBlock",
																"src": "5249:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5251:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5251:16:11"
																			},
																			"nativeSrc": "5251:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5251:18:11"
																		},
																		"nativeSrc": "5251:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5251:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5246:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5246:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5239:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:11"
																},
																"nativeSrc": "5239:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5239:9:11"
															},
															"nativeSrc": "5236:35:11",
															"nodeType": "YulIf",
															"src": "5236:35:11"
														},
														{
															"nativeSrc": "5281:14:11",
															"nodeType": "YulAssignment",
															"src": "5281:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5290:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5290:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5293:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5293:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5286:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:11"
																},
																"nativeSrc": "5286:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5286:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5281:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5281:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5116:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5147:1:11",
														"nodeType": "YulTypedName",
														"src": "5147:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5150:1:11",
														"nodeType": "YulTypedName",
														"src": "5150:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5156:1:11",
														"nodeType": "YulTypedName",
														"src": "5156:1:11",
														"type": ""
													}
												],
												"src": "5116:185:11"
											},
											{
												"body": {
													"nativeSrc": "5461:288:11",
													"nodeType": "YulBlock",
													"src": "5461:288:11",
													"statements": [
														{
															"nativeSrc": "5471:26:11",
															"nodeType": "YulAssignment",
															"src": "5471:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5483:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5483:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5494:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:11"
																},
																"nativeSrc": "5479:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5479:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5471:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5471:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5551:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5564:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5564:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5575:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5575:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5560:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:11"
																		},
																		"nativeSrc": "5560:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5560:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5507:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5507:43:11"
																},
																"nativeSrc": "5507:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5507:71:11"
															},
															"nativeSrc": "5507:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5507:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5632:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5645:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5645:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5656:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5656:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5641:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:11"
																		},
																		"nativeSrc": "5641:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5641:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5588:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5588:43:11"
																},
																"nativeSrc": "5588:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5588:72:11"
															},
															"nativeSrc": "5588:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5588:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5714:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5714:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5727:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5727:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5738:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5738:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5723:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5723:3:11"
																		},
																		"nativeSrc": "5723:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5723:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5670:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5670:43:11"
																},
																"nativeSrc": "5670:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5670:72:11"
															},
															"nativeSrc": "5670:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5670:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5307:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5417:9:11",
														"nodeType": "YulTypedName",
														"src": "5417:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5429:6:11",
														"nodeType": "YulTypedName",
														"src": "5429:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5437:6:11",
														"nodeType": "YulTypedName",
														"src": "5437:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5445:6:11",
														"nodeType": "YulTypedName",
														"src": "5445:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5456:4:11",
														"nodeType": "YulTypedName",
														"src": "5456:4:11",
														"type": ""
													}
												],
												"src": "5307:442:11"
											},
											{
												"body": {
													"nativeSrc": "5800:149:11",
													"nodeType": "YulBlock",
													"src": "5800:149:11",
													"statements": [
														{
															"nativeSrc": "5810:25:11",
															"nodeType": "YulAssignment",
															"src": "5810:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5833:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5833:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5815:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5815:17:11"
																},
																"nativeSrc": "5815:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5815:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5810:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5810:1:11"
																}
															]
														},
														{
															"nativeSrc": "5844:25:11",
															"nodeType": "YulAssignment",
															"src": "5844:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5867:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5867:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5849:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5849:17:11"
																},
																"nativeSrc": "5849:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5849:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5844:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5844:1:11"
																}
															]
														},
														{
															"nativeSrc": "5878:17:11",
															"nodeType": "YulAssignment",
															"src": "5878:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5890:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5890:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5893:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5893:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5886:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5886:3:11"
																},
																"nativeSrc": "5886:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5886:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5878:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5878:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5920:22:11",
																"nodeType": "YulBlock",
																"src": "5920:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5922:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5922:16:11"
																			},
																			"nativeSrc": "5922:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5922:18:11"
																		},
																		"nativeSrc": "5922:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5922:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5911:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5911:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5917:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5917:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5908:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5908:2:11"
																},
																"nativeSrc": "5908:11:11",
																"nodeType": "YulFunctionCall",
																"src": "5908:11:11"
															},
															"nativeSrc": "5905:37:11",
															"nodeType": "YulIf",
															"src": "5905:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5755:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5786:1:11",
														"nodeType": "YulTypedName",
														"src": "5786:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5789:1:11",
														"nodeType": "YulTypedName",
														"src": "5789:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5795:4:11",
														"nodeType": "YulTypedName",
														"src": "5795:4:11",
														"type": ""
													}
												],
												"src": "5755:194:11"
											},
											{
												"body": {
													"nativeSrc": "6068:34:11",
													"nodeType": "YulBlock",
													"src": "6068:34:11",
													"statements": [
														{
															"nativeSrc": "6078:18:11",
															"nodeType": "YulAssignment",
															"src": "6078:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "6093:3:11",
																"nodeType": "YulIdentifier",
																"src": "6093:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6078:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "6078:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5955:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6040:3:11",
														"nodeType": "YulTypedName",
														"src": "6040:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6045:6:11",
														"nodeType": "YulTypedName",
														"src": "6045:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6056:11:11",
														"nodeType": "YulTypedName",
														"src": "6056:11:11",
														"type": ""
													}
												],
												"src": "5955:147:11"
											},
											{
												"body": {
													"nativeSrc": "6214:8:11",
													"nodeType": "YulBlock",
													"src": "6214:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "6108:114:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6206:6:11",
														"nodeType": "YulTypedName",
														"src": "6206:6:11",
														"type": ""
													}
												],
												"src": "6108:114:11"
											},
											{
												"body": {
													"nativeSrc": "6391:235:11",
													"nodeType": "YulBlock",
													"src": "6391:235:11",
													"statements": [
														{
															"nativeSrc": "6401:90:11",
															"nodeType": "YulAssignment",
															"src": "6401:90:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6484:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6484:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6489:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6489:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6408:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "6408:75:11"
																},
																"nativeSrc": "6408:83:11",
																"nodeType": "YulFunctionCall",
																"src": "6408:83:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6401:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6589:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6589:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6500:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6500:88:11"
																},
																"nativeSrc": "6500:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6500:93:11"
															},
															"nativeSrc": "6500:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6500:93:11"
														},
														{
															"nativeSrc": "6602:18:11",
															"nodeType": "YulAssignment",
															"src": "6602:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6613:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6613:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6618:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6618:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6609:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6609:3:11"
																},
																"nativeSrc": "6609:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6609:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6602:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6228:398:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6379:3:11",
														"nodeType": "YulTypedName",
														"src": "6379:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6387:3:11",
														"nodeType": "YulTypedName",
														"src": "6387:3:11",
														"type": ""
													}
												],
												"src": "6228:398:11"
											},
											{
												"body": {
													"nativeSrc": "6820:191:11",
													"nodeType": "YulBlock",
													"src": "6820:191:11",
													"statements": [
														{
															"nativeSrc": "6831:154:11",
															"nodeType": "YulAssignment",
															"src": "6831:154:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6981:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6981:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6838:141:11",
																	"nodeType": "YulIdentifier",
																	"src": "6838:141:11"
																},
																"nativeSrc": "6838:147:11",
																"nodeType": "YulFunctionCall",
																"src": "6838:147:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6831:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6831:3:11"
																}
															]
														},
														{
															"nativeSrc": "6995:10:11",
															"nodeType": "YulAssignment",
															"src": "6995:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "7002:3:11",
																"nodeType": "YulIdentifier",
																"src": "7002:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6995:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6632:379:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6807:3:11",
														"nodeType": "YulTypedName",
														"src": "6807:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6816:3:11",
														"nodeType": "YulTypedName",
														"src": "6816:3:11",
														"type": ""
													}
												],
												"src": "6632:379:11"
											},
											{
												"body": {
													"nativeSrc": "7061:61:11",
													"nodeType": "YulBlock",
													"src": "7061:61:11",
													"statements": [
														{
															"nativeSrc": "7071:45:11",
															"nodeType": "YulAssignment",
															"src": "7071:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7086:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7086:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7093:22:11",
																		"nodeType": "YulLiteral",
																		"src": "7093:22:11",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7082:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7082:3:11"
																},
																"nativeSrc": "7082:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7082:34:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7071:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7071:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "7017:105:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7043:5:11",
														"nodeType": "YulTypedName",
														"src": "7043:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7053:7:11",
														"nodeType": "YulTypedName",
														"src": "7053:7:11",
														"type": ""
													}
												],
												"src": "7017:105:11"
											},
											{
												"body": {
													"nativeSrc": "7170:78:11",
													"nodeType": "YulBlock",
													"src": "7170:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7226:16:11",
																"nodeType": "YulBlock",
																"src": "7226:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7235:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7235:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7238:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7238:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7228:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7228:6:11"
																			},
																			"nativeSrc": "7228:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7228:12:11"
																		},
																		"nativeSrc": "7228:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7228:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7193:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7193:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7217:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7217:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "7200:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "7200:16:11"
																				},
																				"nativeSrc": "7200:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7200:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7190:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7190:2:11"
																		},
																		"nativeSrc": "7190:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7190:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7183:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:11"
																},
																"nativeSrc": "7183:42:11",
																"nodeType": "YulFunctionCall",
																"src": "7183:42:11"
															},
															"nativeSrc": "7180:62:11",
															"nodeType": "YulIf",
															"src": "7180:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "7128:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7163:5:11",
														"nodeType": "YulTypedName",
														"src": "7163:5:11",
														"type": ""
													}
												],
												"src": "7128:120:11"
											},
											{
												"body": {
													"nativeSrc": "7316:79:11",
													"nodeType": "YulBlock",
													"src": "7316:79:11",
													"statements": [
														{
															"nativeSrc": "7326:22:11",
															"nodeType": "YulAssignment",
															"src": "7326:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7341:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7341:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7335:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7335:5:11"
																},
																"nativeSrc": "7335:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7335:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7326:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7326:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7383:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7383:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "7357:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7357:25:11"
																},
																"nativeSrc": "7357:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7357:32:11"
															},
															"nativeSrc": "7357:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "7357:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "7254:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7294:6:11",
														"nodeType": "YulTypedName",
														"src": "7294:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7302:3:11",
														"nodeType": "YulTypedName",
														"src": "7302:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7310:5:11",
														"nodeType": "YulTypedName",
														"src": "7310:5:11",
														"type": ""
													}
												],
												"src": "7254:141:11"
											},
											{
												"body": {
													"nativeSrc": "7445:32:11",
													"nodeType": "YulBlock",
													"src": "7445:32:11",
													"statements": [
														{
															"nativeSrc": "7455:16:11",
															"nodeType": "YulAssignment",
															"src": "7455:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "7466:5:11",
																"nodeType": "YulIdentifier",
																"src": "7466:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7455:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7455:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7401:76:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7427:5:11",
														"nodeType": "YulTypedName",
														"src": "7427:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7437:7:11",
														"nodeType": "YulTypedName",
														"src": "7437:7:11",
														"type": ""
													}
												],
												"src": "7401:76:11"
											},
											{
												"body": {
													"nativeSrc": "7525:78:11",
													"nodeType": "YulBlock",
													"src": "7525:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7581:16:11",
																"nodeType": "YulBlock",
																"src": "7581:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7590:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7590:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7593:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7593:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7583:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7583:6:11"
																			},
																			"nativeSrc": "7583:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7583:12:11"
																		},
																		"nativeSrc": "7583:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7583:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7548:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7548:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7572:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7572:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "7555:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "7555:16:11"
																				},
																				"nativeSrc": "7555:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7555:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7545:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7545:2:11"
																		},
																		"nativeSrc": "7545:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7538:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:11"
																},
																"nativeSrc": "7538:42:11",
																"nodeType": "YulFunctionCall",
																"src": "7538:42:11"
															},
															"nativeSrc": "7535:62:11",
															"nodeType": "YulIf",
															"src": "7535:62:11"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "7483:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7518:5:11",
														"nodeType": "YulTypedName",
														"src": "7518:5:11",
														"type": ""
													}
												],
												"src": "7483:120:11"
											},
											{
												"body": {
													"nativeSrc": "7671:79:11",
													"nodeType": "YulBlock",
													"src": "7671:79:11",
													"statements": [
														{
															"nativeSrc": "7681:22:11",
															"nodeType": "YulAssignment",
															"src": "7681:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7696:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7696:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7690:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7690:5:11"
																},
																"nativeSrc": "7690:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7690:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7681:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7681:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7738:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7738:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "7712:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7712:25:11"
																},
																"nativeSrc": "7712:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7712:32:11"
															},
															"nativeSrc": "7712:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "7712:32:11"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "7609:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7649:6:11",
														"nodeType": "YulTypedName",
														"src": "7649:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7657:3:11",
														"nodeType": "YulTypedName",
														"src": "7657:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7665:5:11",
														"nodeType": "YulTypedName",
														"src": "7665:5:11",
														"type": ""
													}
												],
												"src": "7609:141:11"
											},
											{
												"body": {
													"nativeSrc": "7819:80:11",
													"nodeType": "YulBlock",
													"src": "7819:80:11",
													"statements": [
														{
															"nativeSrc": "7829:22:11",
															"nodeType": "YulAssignment",
															"src": "7829:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7844:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7844:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7838:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7838:5:11"
																},
																"nativeSrc": "7838:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7838:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7829:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7829:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7887:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7887:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7860:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "7860:26:11"
																},
																"nativeSrc": "7860:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7860:33:11"
															},
															"nativeSrc": "7860:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "7860:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7756:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7797:6:11",
														"nodeType": "YulTypedName",
														"src": "7797:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7805:3:11",
														"nodeType": "YulTypedName",
														"src": "7805:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7813:5:11",
														"nodeType": "YulTypedName",
														"src": "7813:5:11",
														"type": ""
													}
												],
												"src": "7756:143:11"
											},
											{
												"body": {
													"nativeSrc": "8047:829:11",
													"nodeType": "YulBlock",
													"src": "8047:829:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8094:83:11",
																"nodeType": "YulBlock",
																"src": "8094:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8096:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8096:77:11"
																			},
																			"nativeSrc": "8096:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8096:79:11"
																		},
																		"nativeSrc": "8096:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8096:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8068:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8068:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8077:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8077:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8064:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8064:3:11"
																		},
																		"nativeSrc": "8064:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8064:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8089:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8089:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8060:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8060:3:11"
																},
																"nativeSrc": "8060:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8060:33:11"
															},
															"nativeSrc": "8057:120:11",
															"nodeType": "YulIf",
															"src": "8057:120:11"
														},
														{
															"nativeSrc": "8187:127:11",
															"nodeType": "YulBlock",
															"src": "8187:127:11",
															"statements": [
																{
																	"nativeSrc": "8202:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8202:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8216:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8216:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8206:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8206:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8231:73:11",
																	"nodeType": "YulAssignment",
																	"src": "8231:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8276:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8276:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8287:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8287:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8272:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8272:3:11"
																				},
																				"nativeSrc": "8272:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8272:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8296:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8296:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8241:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "8241:30:11"
																		},
																		"nativeSrc": "8241:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8241:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8231:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8231:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8324:128:11",
															"nodeType": "YulBlock",
															"src": "8324:128:11",
															"statements": [
																{
																	"nativeSrc": "8339:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8339:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8353:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8353:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8343:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8343:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8369:73:11",
																	"nodeType": "YulAssignment",
																	"src": "8369:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8414:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8414:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8425:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8425:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8410:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8410:3:11"
																				},
																				"nativeSrc": "8410:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8410:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8434:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8434:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "8379:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "8379:30:11"
																		},
																		"nativeSrc": "8379:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8369:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8369:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8462:129:11",
															"nodeType": "YulBlock",
															"src": "8462:129:11",
															"statements": [
																{
																	"nativeSrc": "8477:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8477:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8491:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8491:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8481:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8481:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8507:74:11",
																	"nodeType": "YulAssignment",
																	"src": "8507:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8553:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8553:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8564:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8564:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8549:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8549:3:11"
																				},
																				"nativeSrc": "8549:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8549:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8573:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8573:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8517:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "8517:31:11"
																		},
																		"nativeSrc": "8517:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8517:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8507:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8507:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8601:129:11",
															"nodeType": "YulBlock",
															"src": "8601:129:11",
															"statements": [
																{
																	"nativeSrc": "8616:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8616:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8630:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8630:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8620:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8620:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8646:74:11",
																	"nodeType": "YulAssignment",
																	"src": "8646:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8692:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8692:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8703:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8703:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8688:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8688:3:11"
																				},
																				"nativeSrc": "8688:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8688:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8712:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8712:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8656:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "8656:31:11"
																		},
																		"nativeSrc": "8656:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8646:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8646:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8740:129:11",
															"nodeType": "YulBlock",
															"src": "8740:129:11",
															"statements": [
																{
																	"nativeSrc": "8755:17:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8755:17:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8769:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8769:3:11",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8759:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8759:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8786:73:11",
																	"nodeType": "YulAssignment",
																	"src": "8786:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8831:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8831:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8842:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8842:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8827:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8827:3:11"
																				},
																				"nativeSrc": "8827:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8827:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8851:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8851:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8796:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "8796:30:11"
																		},
																		"nativeSrc": "8796:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8796:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8786:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8786:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "7905:971:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7985:9:11",
														"nodeType": "YulTypedName",
														"src": "7985:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7996:7:11",
														"nodeType": "YulTypedName",
														"src": "7996:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8008:6:11",
														"nodeType": "YulTypedName",
														"src": "8008:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8016:6:11",
														"nodeType": "YulTypedName",
														"src": "8016:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8024:6:11",
														"nodeType": "YulTypedName",
														"src": "8024:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8032:6:11",
														"nodeType": "YulTypedName",
														"src": "8032:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8040:6:11",
														"nodeType": "YulTypedName",
														"src": "8040:6:11",
														"type": ""
													}
												],
												"src": "7905:971:11"
											},
											{
												"body": {
													"nativeSrc": "8978:73:11",
													"nodeType": "YulBlock",
													"src": "8978:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8995:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8995:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9000:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9000:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8988:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:11"
																},
																"nativeSrc": "8988:19:11",
																"nodeType": "YulFunctionCall",
																"src": "8988:19:11"
															},
															"nativeSrc": "8988:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "8988:19:11"
														},
														{
															"nativeSrc": "9016:29:11",
															"nodeType": "YulAssignment",
															"src": "9016:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9035:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9035:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9040:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9040:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9031:3:11"
																},
																"nativeSrc": "9031:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9031:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9016:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9016:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8882:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8950:3:11",
														"nodeType": "YulTypedName",
														"src": "8950:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8955:6:11",
														"nodeType": "YulTypedName",
														"src": "8955:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8966:11:11",
														"nodeType": "YulTypedName",
														"src": "8966:11:11",
														"type": ""
													}
												],
												"src": "8882:169:11"
											},
											{
												"body": {
													"nativeSrc": "9163:75:11",
													"nodeType": "YulBlock",
													"src": "9163:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9185:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9185:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9193:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9193:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9181:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9181:3:11"
																		},
																		"nativeSrc": "9181:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9181:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9197:33:11",
																		"nodeType": "YulLiteral",
																		"src": "9197:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9174:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9174:6:11"
																},
																"nativeSrc": "9174:57:11",
																"nodeType": "YulFunctionCall",
																"src": "9174:57:11"
															},
															"nativeSrc": "9174:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "9174:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9057:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9155:6:11",
														"nodeType": "YulTypedName",
														"src": "9155:6:11",
														"type": ""
													}
												],
												"src": "9057:181:11"
											},
											{
												"body": {
													"nativeSrc": "9390:220:11",
													"nodeType": "YulBlock",
													"src": "9390:220:11",
													"statements": [
														{
															"nativeSrc": "9400:74:11",
															"nodeType": "YulAssignment",
															"src": "9400:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9466:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9466:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9471:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9471:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9407:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9407:58:11"
																},
																"nativeSrc": "9407:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9407:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9572:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "9483:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9483:88:11"
																},
																"nativeSrc": "9483:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9483:93:11"
															},
															"nativeSrc": "9483:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9483:93:11"
														},
														{
															"nativeSrc": "9585:19:11",
															"nodeType": "YulAssignment",
															"src": "9585:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9596:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9596:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9601:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9601:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9592:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9592:3:11"
																},
																"nativeSrc": "9592:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9592:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9585:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9585:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9244:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9378:3:11",
														"nodeType": "YulTypedName",
														"src": "9378:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9386:3:11",
														"nodeType": "YulTypedName",
														"src": "9386:3:11",
														"type": ""
													}
												],
												"src": "9244:366:11"
											},
											{
												"body": {
													"nativeSrc": "9787:248:11",
													"nodeType": "YulBlock",
													"src": "9787:248:11",
													"statements": [
														{
															"nativeSrc": "9797:26:11",
															"nodeType": "YulAssignment",
															"src": "9797:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9809:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9809:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9820:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9820:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9805:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9805:3:11"
																},
																"nativeSrc": "9805:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9805:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9797:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9797:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9844:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9844:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9855:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9855:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:11"
																		},
																		"nativeSrc": "9840:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9840:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9863:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9863:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9869:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9859:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9859:3:11"
																		},
																		"nativeSrc": "9859:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9833:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:11"
																},
																"nativeSrc": "9833:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9833:47:11"
															},
															"nativeSrc": "9833:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9833:47:11"
														},
														{
															"nativeSrc": "9889:139:11",
															"nodeType": "YulAssignment",
															"src": "9889:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10023:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10023:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9897:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9897:124:11"
																},
																"nativeSrc": "9897:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9897:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9889:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9889:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9616:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9767:9:11",
														"nodeType": "YulTypedName",
														"src": "9767:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9782:4:11",
														"nodeType": "YulTypedName",
														"src": "9782:4:11",
														"type": ""
													}
												],
												"src": "9616:419:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"952": [
									{
										"length": 32,
										"start": 1728
									},
									{
										"length": 32,
										"start": 2091
									},
									{
										"length": 32,
										"start": 2446
									},
									{
										"length": 32,
										"start": 4348
									},
									{
										"length": 32,
										"start": 4655
									},
									{
										"length": 32,
										"start": 4934
									}
								],
								"971": [
									{
										"length": 32,
										"start": 3347
									},
									{
										"length": 32,
										"start": 4244
									}
								],
								"974": [
									{
										"length": 32,
										"start": 1013
									},
									{
										"length": 32,
										"start": 1610
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100eb575f3560e01c80638648840a11610089578063939495bd11610058578063939495bd146102fc578063c6aca33c14610326578063f2fde38b14610350578063f39b1809146103785761012d565b80638648840a146102585780638da5cb5b14610280578063931fb90e146102aa57806393295c1c146102d25761012d565b8063715018a6116100c5578063715018a6146101c6578063779bb136146101dc57806379a823341461020657806382fe54b5146102305761012d565b806316a1930f1461016a5780636900670c14610174578063698b72411461019e5761012d565b3661012d57336040517fe1d158ff0000000000000000000000000000000000000000000000000000000081526004016101249190611686565b60405180910390fd5b336040517fe1d158ff0000000000000000000000000000000000000000000000000000000081526004016101619190611686565b60405180910390fd5b6101726103a2565b005b34801561017f575f5ffd5b506101886105bf565b60405161019591906116b7565b60405180910390f35b3480156101a9575f5ffd5b506101c460048036038101906101bf91906116fe565b610603565b005b3480156101d1575f5ffd5b506101da610874565b005b3480156101e7575f5ffd5b506101f0610887565b6040516101fd91906116b7565b60405180910390f35b348015610211575f5ffd5b5061021a610906565b6040516102279190611784565b60405180910390f35b34801561023b575f5ffd5b50610256600480360381019061025191906116fe565b61092b565b005b348015610263575f5ffd5b5061027e600480360381019061027991906117c7565b610937565b005b34801561028b575f5ffd5b5061029461094b565b6040516102a19190611686565b60405180910390f35b3480156102b5575f5ffd5b506102d060048036038101906102cb91906116fe565b610973565b005b3480156102dd575f5ffd5b506102e661097f565b6040516102f391906116b7565b60405180910390f35b348015610307575f5ffd5b50610310610988565b60405161031d91906116b7565b60405180910390f35b348015610331575f5ffd5b5061033a610a27565b60405161034791906116b7565b60405180910390f35b34801561035b575f5ffd5b50610376600480360381019061037191906117c7565b610a30565b005b348015610383575f5ffd5b5061038c610ab4565b60405161039991906116b7565b60405180910390f35b345f6103ad82610abd565b90505f81036103f357336040517fb2f092310000000000000000000000000000000000000000000000000000000081526004016103ea9190611686565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060055482610422919061181f565b111561046557806040517f2900b02c00000000000000000000000000000000000000000000000000000000815260040161045c91906116b7565b60405180910390fd5b5f61046f34610abd565b90503460065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104f8919061181f565b925050819055508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461054b919061181f565b9250508190555060035f81548092919061056490611852565b91905055508060055f82825461057a919061181f565b925050819055507f9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd33826040516105b2929190611899565b60405180910390a1505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b805f810361064857336040517fb2f0923100000000000000000000000000000000000000000000000000000000815260040161063f9190611686565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060055482610677919061181f565b11156106ba57806040517f2900b02c0000000000000000000000000000000000000000000000000000000081526004016106b191906116b7565b60405180910390fd5b8160065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610761919061181f565b925050819055508160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107b4919061181f565b9250508190555060035f8154809291906107cd90611852565b91905055508160055f8282546107e3919061181f565b925050819055507f9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd338360405161081b929190611899565b60405180910390a16108703330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610aec909392919063ffffffff16565b5050565b61087c610b6e565b6108855f610bf5565b565b5f60065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61093481610cb8565b50565b61093f610b6e565b61094881610a30565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61097c81611045565b50565b5f600554905090565b5f60065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f600454905090565b610a38610b6e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aa8575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a9f9190611686565b60405180910390fd5b610ab181610bf5565b50565b5f600354905090565b5f68056bc75e2d63100000610ad0611396565b83610adb91906118c0565b610ae5919061192e565b9050919050565b610b68848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610b219392919061195e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114d0565b50505050565b610b7661156b565b73ffffffffffffffffffffffffffffffffffffffff16610b9461094b565b73ffffffffffffffffffffffffffffffffffffffff1614610bf357610bb761156b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bea9190611686565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cc0611572565b805f610ccb82610abd565b90505f8103610d1157336040517fb2f09231000000000000000000000000000000000000000000000000000000008152600401610d089190611686565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811115610d7657806040517fc3993565000000000000000000000000000000000000000000000000000000008152600401610d6d91906116b7565b60405180910390fd5b60065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610e355733816040517f51a73142000000000000000000000000000000000000000000000000000000008152600401610e2c929190611899565b60405180910390fd5b5f610e3f84610abd565b90508060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610e8d9190611993565b925050819055508360065f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f1b9190611993565b9250508190555060045f815480929190610f3490611852565b91905055508060055f828254610f4a9190611993565b925050819055507f9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e83382604051610f82929190611899565b60405180910390a15f3373ffffffffffffffffffffffffffffffffffffffff1685604051610faf906119f3565b5f6040518083038185875af1925050503d805f8114610fe9576040519150601f19603f3d011682016040523d82523d5f602084013e610fee565b606091505b50509050806110365733856040517f6c5e1a1400000000000000000000000000000000000000000000000000000000815260040161102d929190611899565b60405180910390fd5b505050506110426115bf565b50565b61104d611572565b805f810361109257336040517fb2f092310000000000000000000000000000000000000000000000000000000081526004016110899190611686565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008111156110f757806040517fc39935650000000000000000000000000000000000000000000000000000000081526004016110ee91906116b7565b60405180910390fd5b60065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111156111d65733816040517f51a731420000000000000000000000000000000000000000000000000000000081526004016111cd929190611899565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112229190611993565b925050819055508160065f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112d09190611993565b9250508190555060045f8154809291906112e990611852565b91905055508160055f8282546112ff9190611993565b925050819055507f9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e83383604051611337929190611899565b60405180910390a161138a33837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115c89092919063ffffffff16565b506113936115bf565b50565b5f5f5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611403573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114279190611a8d565b509350509250505f820361147257816040517f3654402900000000000000000000000000000000000000000000000000000000815260040161146991906116b7565b60405180910390fd5b610e1061ffff1681426114859190611993565b11156114c857816040517f2609a2650000000000000000000000000000000000000000000000000000000081526004016114bf91906116b7565b60405180910390fd5b819250505090565b5f5f60205f8451602086015f885af1806114ef576040513d5f823e3d81fd5b3d92505f519150505f8214611508576001811415611523565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561156557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161155c9190611686565b60405180910390fd5b50505050565b5f33905090565b60025f54036115b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ad90611b5e565b60405180910390fd5b60025f81905550565b60015f81905550565b611642838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016115fb929190611899565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114d0565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61167082611647565b9050919050565b61168081611666565b82525050565b5f6020820190506116995f830184611677565b92915050565b5f819050919050565b6116b18161169f565b82525050565b5f6020820190506116ca5f8301846116a8565b92915050565b5f5ffd5b6116dd8161169f565b81146116e7575f5ffd5b50565b5f813590506116f8816116d4565b92915050565b5f60208284031215611713576117126116d0565b5b5f611720848285016116ea565b91505092915050565b5f819050919050565b5f61174c61174761174284611647565b611729565b611647565b9050919050565b5f61175d82611732565b9050919050565b5f61176e82611753565b9050919050565b61177e81611764565b82525050565b5f6020820190506117975f830184611775565b92915050565b6117a681611666565b81146117b0575f5ffd5b50565b5f813590506117c18161179d565b92915050565b5f602082840312156117dc576117db6116d0565b5b5f6117e9848285016117b3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118298261169f565b91506118348361169f565b925082820190508082111561184c5761184b6117f2565b5b92915050565b5f61185c8261169f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361188e5761188d6117f2565b5b600182019050919050565b5f6040820190506118ac5f830185611677565b6118b960208301846116a8565b9392505050565b5f6118ca8261169f565b91506118d58361169f565b92508282026118e38161169f565b915082820484148315176118fa576118f96117f2565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119388261169f565b91506119438361169f565b92508261195357611952611901565b5b828204905092915050565b5f6060820190506119715f830186611677565b61197e6020830185611677565b61198b60408301846116a8565b949350505050565b5f61199d8261169f565b91506119a88361169f565b92508282039050818111156119c0576119bf6117f2565b5b92915050565b5f81905092915050565b50565b5f6119de5f836119c6565b91506119e9826119d0565b5f82019050919050565b5f6119fd826119d3565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b611a2581611a07565b8114611a2f575f5ffd5b50565b5f81519050611a4081611a1c565b92915050565b5f819050919050565b611a5881611a46565b8114611a62575f5ffd5b50565b5f81519050611a7381611a4f565b92915050565b5f81519050611a87816116d4565b92915050565b5f5f5f5f5f60a08688031215611aa657611aa56116d0565b5b5f611ab388828901611a32565b9550506020611ac488828901611a65565b9450506040611ad588828901611a79565b9350506060611ae688828901611a79565b9250506080611af788828901611a32565b9150509295509295909350565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611b48601f83611b04565b9150611b5382611b14565b602082019050919050565b5f6020820190508181035f830152611b7581611b3c565b905091905056fea264697066735822122023f117fa363d84db6bc7724cc6d82fed0268488a62bf4255fb354f47110c4bfc64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8648840A GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x939495BD GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x939495BD EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xC6ACA33C EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF39B1809 EQ PUSH2 0x378 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x8648840A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x931FB90E EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x93295C1C EQ PUSH2 0x2D2 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x779BB136 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x79A82334 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x82FE54B5 EQ PUSH2 0x230 JUMPI PUSH2 0x12D JUMP JUMPDEST DUP1 PUSH4 0x16A1930F EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x6900670C EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x698B7241 EQ PUSH2 0x19E JUMPI PUSH2 0x12D JUMP JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xE1D158FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x40 MLOAD PUSH32 0xE1D158FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x172 PUSH2 0x3A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x874 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1F0 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x16FE JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x33A PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xA30 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38C PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH0 PUSH2 0x3AD DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x3F3 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST GT ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x2900B02C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x46F CALLVALUE PUSH2 0xABD JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x564 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x648 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST GT ISZERO PUSH2 0x6BA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x2900B02C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7CD SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x81B SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x870 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x87C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x885 PUSH0 PUSH2 0xBF5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x934 DUP2 PUSH2 0xCB8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93F PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x948 DUP2 PUSH2 0xA30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x1045 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0xB6E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xBF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0xAD0 PUSH2 0x1396 JUMP JUMPDEST DUP4 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0xAE5 SWAP2 SWAP1 PUSH2 0x192E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB68 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB76 PUSH2 0x156B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB94 PUSH2 0x94B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF3 JUMPI PUSH2 0xBB7 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0x1572 JUMP JUMPDEST DUP1 PUSH0 PUSH2 0xCCB DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xD11 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xD76 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xC399356500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xE35 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x51A7314200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE3F DUP5 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF1B SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF34 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xF82 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xFAF SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1036 JUMPI CALLER DUP6 PUSH1 0x40 MLOAD PUSH32 0x6C5E1A1400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP PUSH2 0x1042 PUSH2 0x15BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x1572 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x1092 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xB2F0923100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x10F7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xC399356500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x11D6 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x51A7314200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CD SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12E9 SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1337 SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x138A CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1393 PUSH2 0x15BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x1472 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x3654402900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH2 0xFFFF AND DUP2 TIMESTAMP PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST GT ISZERO PUSH2 0x14C8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x2609A26500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1508 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1523 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1565 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x15B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AD SWAP1 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1642 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15FB SWAP3 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1670 DUP3 PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1699 PUSH0 DUP4 ADD DUP5 PUSH2 0x1677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CA PUSH0 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x169F JUMP JUMPDEST DUP2 EQ PUSH2 0x16E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F8 DUP2 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1720 DUP5 DUP3 DUP6 ADD PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x175D DUP3 PUSH2 0x1732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x176E DUP3 PUSH2 0x1753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177E DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1797 PUSH0 DUP4 ADD DUP5 PUSH2 0x1775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1666 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C1 DUP2 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E9 DUP5 DUP3 DUP6 ADD PUSH2 0x17B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1829 DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x1834 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x185C DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18AC PUSH0 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x18B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18CA DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x18D5 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18E3 DUP2 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18FA JUMPI PUSH2 0x18F9 PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1938 DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1901 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1971 PUSH0 DUP4 ADD DUP7 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x197E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x198B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x199D DUP3 PUSH2 0x169F JUMP JUMPDEST SWAP2 POP PUSH2 0x19A8 DUP4 PUSH2 0x169F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x17F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE PUSH0 DUP4 PUSH2 0x19C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A25 DUP2 PUSH2 0x1A07 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A2F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A40 DUP2 PUSH2 0x1A1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A58 DUP2 PUSH2 0x1A46 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A73 DUP2 PUSH2 0x1A4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A87 DUP2 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH2 0x1AA5 PUSH2 0x16D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AB3 DUP9 DUP3 DUP10 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AC4 DUP9 DUP3 DUP10 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AD5 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1AE6 DUP9 DUP3 DUP10 ADD PUSH2 0x1A79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1AF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B48 PUSH1 0x1F DUP4 PUSH2 0x1B04 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B53 DUP3 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B75 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALL OR STATICCALL CALLDATASIZE RETURNDATASIZE DUP5 0xDB PUSH12 0xC7724CC6D82FED0268488A62 0xBF TIMESTAMP SSTORE EXTSTATICCALL CALLDATALOAD 0x4F SELFBALANCE GT 0xC 0x4B 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "736:13356:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6041:10;6011:41;;;;;;;;;;;:::i;:::-;;;;;;;;736:13356;6246:10;6216:41;;;;;;;;;;;:::i;:::-;;;;;;;;10798:366;;;:::i;:::-;;12494:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11456:373;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;12958:127:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10362:85;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13977:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10583:86:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13659:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12713:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13443:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13220:92:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10798:366;10860:9;6991:14;7008:26;7027:6;7008:18;:26::i;:::-;6991:43;;7060:1;7047:9;:14;7044:56;;7089:10;7070:30;;;;;;;;;;;:::i;:::-;;;;;;;;7044:56;7143:9;7126:14;;7114:9;:26;;;;:::i;:::-;:38;7110:85;;;7185:9;7161:34;;;;;;;;;;;:::i;:::-;;;;;;;;7110:85;10881:14:::1;10898:29;10917:9;10898:18;:29::i;:::-;10881:46;;10983:9;10937:18;:30;10964:1;10937:30;;;;;;;;;;;;;;;:42;10968:10;10937:42;;;;;;;;;;;;;;;;:55;;;;;;;:::i;:::-;;;;;;;;11025:9;11002:7;:19;11010:10;11002:19;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;11044:10;;:12;;;;;;;;;:::i;:::-;;;;;;11084:9;11066:14;;:27;;;;;;;:::i;:::-;;;;;;;;11108:49;11135:10;11147:9;11108:49;;;;;;;:::i;:::-;;;;;;;;10871:293;6981:232:::0;10798:366;:::o;12494:102::-;12538:11;12570:7;:19;12578:10;12570:19;;;;;;;;;;;;;;;;12561:28;;12494:102;:::o;11456:373::-;11523:6;7389:1;7379:6;:11;7376:53;;7418:10;7399:30;;;;;;;;;;;:::i;:::-;;;;;;;;7376:53;7469:9;7452:14;;7443:6;:23;;;;:::i;:::-;:35;7439:79;;;7511:6;7487:31;;;;;;;;;;;:::i;:::-;;;;;;;;7439:79;11592:6:::1;11541:18;:35;11568:6;11541:35;;;;;;;;;;;;;;;:47;11577:10;11541:47;;;;;;;;;;;;;;;;:57;;;;;;;:::i;:::-;;;;;;;;11631:6;11608:7;:19;11616:10;11608:19;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;11647:10;;:12;;;;;;;;;:::i;:::-;;;;;;11687:6;11669:14;;:24;;;;;;;:::i;:::-;;;;;;;;11708:46;11735:10;11747:6;11708:46;;;;;;;:::i;:::-;;;;;;;;11764:58;11788:10;11808:4;11815:6;11764;:23;;;;:58;;;;;;:::i;:::-;11456:373:::0;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;12958:127:10:-;13004:11;13036:18;:30;13063:1;13036:30;;;;;;;;;;;;;;;:42;13067:10;13036:42;;;;;;;;;;;;;;;;13027:51;;12958:127;:::o;1091:35::-;;;;;;;;;;;;;:::o;10362:85::-;10415:25;10433:6;10415:17;:25::i;:::-;10362:85;:::o;13977:112::-;1531:13:1;:11;:13::i;:::-;14052:30:10::1;14070:11;14052:17;:30::i;:::-;13977:112:::0;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;10583:86:10:-;10636:26;10655:6;10636:18;:26::i;:::-;10583:86;:::o;13659:95::-;13710:4;13733:14;;13726:21;;13659:95;:::o;12713:133::-;12760:11;12792:18;:35;12819:6;12792:35;;;;;;;;;;;;;;;:47;12828:10;12792:47;;;;;;;;;;;;;;;;12783:56;;12713:133;:::o;13443:88::-;13493:4;13516:8;;13509:15;;13443:88;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;13220:92:10:-;13272:4;13295:10;;13288:17;;13220:92;:::o;12147:171::-;12211:21;1543:12;12277:16;:14;:16::i;:::-;12268:6;:25;;;;:::i;:::-;12267:44;;;;:::i;:::-;12248:63;;12147:171;;;:::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8908:536:10:-;2261:21:5;:19;:21::i;:::-;8988:6:10::1;7769:14;7786:26;7805:6;7786:18;:26::i;:::-;7769:43;;7838:1;7825:9;:14:::0;7822:56:::1;;7867:10;7848:30;;;;;;;;;;;:::i;:::-;;;;;;;;7822:56;7904:8;7892:9;:20;7888:67;;;7945:9;7921:34;;;;;;;;;;;:::i;:::-;;;;;;;;7888:67;7978:18;:30;8005:1;7978:30;;;;;;;;;;;;;;;:42;8009:10;7978:42;;;;;;;;;;;;;;;;7969:6;:51;7965:113;;;8056:10;8068:9;8029:49;;;;;;;;;;;;:::i;:::-;;;;;;;;7965:113;9006:14:::2;9023:26;9042:6;9023:18;:26::i;:::-;9006:43;;9082:9;9059:7;:19;9067:10;9059:19;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;9147:6;9101:18;:30;9128:1;9101:30;;;;;;;;;;;;;;;:42;9132:10;9101:42;;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;;;;;;;9163:8;;:10;;;;;;;;;:::i;:::-;;;;;;9201:9;9183:14;;:27;;;;;;;:::i;:::-;;;;;;;;9234:51;9263:10;9275:9;9234:51;;;;;;;:::i;:::-;;;;;;;;9297:12;9323:10;9315:24;;9347:6;9315:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9296:62;;;9373:7;9368:69;;9418:10;9430:6;9389:48;;;;;;;;;;;;:::i;:::-;;;;;;;;9368:69;8996:448;;7759:337:::1;2292:1:5;2303:20:::0;:18;:20::i;:::-;8908:536:10;:::o;9849:378::-;2261:21:5;:19;:21::i;:::-;9931:6:10::1;8339:1;8329:6;:11:::0;8326:53:::1;;8368:10;8349:30;;;;;;;;;;;:::i;:::-;;;;;;;;8326:53;8402:8;8393:6;:17;8389:61;;;8443:6;8419:31;;;;;;;;;;;:::i;:::-;;;;;;;;8389:61;8473:18;:35;8500:6;8473:35;;;;;;;;;;;;;;;:47;8509:10;8473:47;;;;;;;;;;;;;;;;8464:6;:56;8460:115;;;8556:10;8568:6;8529:46;;;;;;;;;;;;:::i;:::-;;;;;;;;8460:115;9972:6:::2;9949:7;:19;9957:10;9949:19;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;10039:6;9988:18;:35;10015:6;9988:35;;;;;;;;;;;;;;;:47;10024:10;9988:47;;;;;;;;;;;;;;;;:57;;;;;;;:::i;:::-;;;;;;;;10055:8;;:10;;;;;;;;;:::i;:::-;;;;;;10093:6;10075:14;;:24;;;;;;;:::i;:::-;;;;;;;;10123:48;10152:10;10164:6;10123:48;;;;;;;:::i;:::-;;;;;;;;10181:39;10201:10;10213:6;10181;:19;;;;:39;;;;;:::i;:::-;2292:1:5::1;2303:20:::0;:18;:20::i;:::-;9849:378:10;:::o;6443:386::-;6491:15;6521:18;6542:16;6563:6;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6518:69;;;;;;;6616:1;6601:11;:16;6597:76;;6660:11;6626:47;;;;;;;;;;;:::i;:::-;;;;;;;;6597:76;1274:4;6686:38;;6704:8;6686:15;:26;;;;:::i;:::-;:38;6683:98;;;6768:11;6733:48;;;;;;;;;;;:::i;:::-;;;;;;;;6683:98;6810:11;6792:30;;6508:321;;6443:386;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:60::-;1991:3;2012:5;2005:12;;1963:60;;;:::o;2029:142::-;2079:9;2112:53;2130:34;2139:24;2157:5;2139:24;:::i;:::-;2130:34;:::i;:::-;2112:53;:::i;:::-;2099:66;;2029:142;;;:::o;2177:126::-;2227:9;2260:37;2291:5;2260:37;:::i;:::-;2247:50;;2177:126;;;:::o;2309:154::-;2387:9;2420:37;2451:5;2420:37;:::i;:::-;2407:50;;2309:154;;;:::o;2469:187::-;2584:65;2643:5;2584:65;:::i;:::-;2579:3;2572:78;2469:187;;:::o;2662:278::-;2783:4;2821:2;2810:9;2806:18;2798:26;;2834:99;2930:1;2919:9;2915:17;2906:6;2834:99;:::i;:::-;2662:278;;;;:::o;2946:122::-;3019:24;3037:5;3019:24;:::i;:::-;3012:5;3009:35;2999:63;;3058:1;3055;3048:12;2999:63;2946:122;:::o;3074:139::-;3120:5;3158:6;3145:20;3136:29;;3174:33;3201:5;3174:33;:::i;:::-;3074:139;;;;:::o;3219:329::-;3278:6;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:53;3523:7;3514:6;3503:9;3499:22;3478:53;:::i;:::-;3468:63;;3424:117;3219:329;;;;:::o;3554:180::-;3602:77;3599:1;3592:88;3699:4;3696:1;3689:15;3723:4;3720:1;3713:15;3740:191;3780:3;3799:20;3817:1;3799:20;:::i;:::-;3794:25;;3833:20;3851:1;3833:20;:::i;:::-;3828:25;;3876:1;3873;3869:9;3862:16;;3897:3;3894:1;3891:10;3888:36;;;3904:18;;:::i;:::-;3888:36;3740:191;;;;:::o;3937:233::-;3976:3;3999:24;4017:5;3999:24;:::i;:::-;3990:33;;4045:66;4038:5;4035:77;4032:103;;4115:18;;:::i;:::-;4032:103;4162:1;4155:5;4151:13;4144:20;;3937:233;;;:::o;4176:332::-;4297:4;4335:2;4324:9;4320:18;4312:26;;4348:71;4416:1;4405:9;4401:17;4392:6;4348:71;:::i;:::-;4429:72;4497:2;4486:9;4482:18;4473:6;4429:72;:::i;:::-;4176:332;;;;;:::o;4514:410::-;4554:7;4577:20;4595:1;4577:20;:::i;:::-;4572:25;;4611:20;4629:1;4611:20;:::i;:::-;4606:25;;4666:1;4663;4659:9;4688:30;4706:11;4688:30;:::i;:::-;4677:41;;4867:1;4858:7;4854:15;4851:1;4848:22;4828:1;4821:9;4801:83;4778:139;;4897:18;;:::i;:::-;4778:139;4562:362;4514:410;;;;:::o;4930:180::-;4978:77;4975:1;4968:88;5075:4;5072:1;5065:15;5099:4;5096:1;5089:15;5116:185;5156:1;5173:20;5191:1;5173:20;:::i;:::-;5168:25;;5207:20;5225:1;5207:20;:::i;:::-;5202:25;;5246:1;5236:35;;5251:18;;:::i;:::-;5236:35;5293:1;5290;5286:9;5281:14;;5116:185;;;;:::o;5307:442::-;5456:4;5494:2;5483:9;5479:18;5471:26;;5507:71;5575:1;5564:9;5560:17;5551:6;5507:71;:::i;:::-;5588:72;5656:2;5645:9;5641:18;5632:6;5588:72;:::i;:::-;5670;5738:2;5727:9;5723:18;5714:6;5670:72;:::i;:::-;5307:442;;;;;;:::o;5755:194::-;5795:4;5815:20;5833:1;5815:20;:::i;:::-;5810:25;;5849:20;5867:1;5849:20;:::i;:::-;5844:25;;5893:1;5890;5886:9;5878:17;;5917:1;5911:4;5908:11;5905:37;;;5922:18;;:::i;:::-;5905:37;5755:194;;;;:::o;5955:147::-;6056:11;6093:3;6078:18;;5955:147;;;;:::o;6108:114::-;;:::o;6228:398::-;6387:3;6408:83;6489:1;6484:3;6408:83;:::i;:::-;6401:90;;6500:93;6589:3;6500:93;:::i;:::-;6618:1;6613:3;6609:11;6602:18;;6228:398;;;:::o;6632:379::-;6816:3;6838:147;6981:3;6838:147;:::i;:::-;6831:154;;7002:3;6995:10;;6632:379;;;:::o;7017:105::-;7053:7;7093:22;7086:5;7082:34;7071:45;;7017:105;;;:::o;7128:120::-;7200:23;7217:5;7200:23;:::i;:::-;7193:5;7190:34;7180:62;;7238:1;7235;7228:12;7180:62;7128:120;:::o;7254:141::-;7310:5;7341:6;7335:13;7326:22;;7357:32;7383:5;7357:32;:::i;:::-;7254:141;;;;:::o;7401:76::-;7437:7;7466:5;7455:16;;7401:76;;;:::o;7483:120::-;7555:23;7572:5;7555:23;:::i;:::-;7548:5;7545:34;7535:62;;7593:1;7590;7583:12;7535:62;7483:120;:::o;7609:141::-;7665:5;7696:6;7690:13;7681:22;;7712:32;7738:5;7712:32;:::i;:::-;7609:141;;;;:::o;7756:143::-;7813:5;7844:6;7838:13;7829:22;;7860:33;7887:5;7860:33;:::i;:::-;7756:143;;;;:::o;7905:971::-;8008:6;8016;8024;8032;8040;8089:3;8077:9;8068:7;8064:23;8060:33;8057:120;;;8096:79;;:::i;:::-;8057:120;8216:1;8241:63;8296:7;8287:6;8276:9;8272:22;8241:63;:::i;:::-;8231:73;;8187:127;8353:2;8379:63;8434:7;8425:6;8414:9;8410:22;8379:63;:::i;:::-;8369:73;;8324:128;8491:2;8517:64;8573:7;8564:6;8553:9;8549:22;8517:64;:::i;:::-;8507:74;;8462:129;8630:2;8656:64;8712:7;8703:6;8692:9;8688:22;8656:64;:::i;:::-;8646:74;;8601:129;8769:3;8796:63;8851:7;8842:6;8831:9;8827:22;8796:63;:::i;:::-;8786:73;;8740:129;7905:971;;;;;;;;:::o;8882:169::-;8966:11;9000:6;8995:3;8988:19;9040:4;9035:3;9031:14;9016:29;;8882:169;;;;:::o;9057:181::-;9197:33;9193:1;9185:6;9181:14;9174:57;9057:181;:::o;9244:366::-;9386:3;9407:67;9471:2;9466:3;9407:67;:::i;:::-;9400:74;;9483:93;9572:3;9483:93;:::i;:::-;9601:2;9596:3;9592:12;9585:19;;9244:366;;;:::o;9616:419::-;9782:4;9820:2;9809:9;9805:18;9797:26;;9869:9;9863:4;9859:20;9855:1;9844:9;9840:17;9833:47;9897:131;10023:4;9897:131;:::i;:::-;9889:139;;9616:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1418000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "418",
								"depositarETH()": "infinite",
								"depositarUSDC(uint256)": "infinite",
								"i_feed()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"retirarETH(uint256)": "infinite",
								"retirarUSDC(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferirOwner(address)": "infinite",
								"verBoveda()": "2565",
								"verSaldoETH()": "2651",
								"verSaldoUSDC()": "infinite",
								"verTotalContrato()": "2521",
								"verTotalDepositos()": "2520",
								"verTotalRetiros()": "2476"
							},
							"internal": {
								"_retirarFondosETH(uint256)": "infinite",
								"_retirarFondosUSDC(uint256)": "infinite",
								"chainLinkFeeds()": "infinite",
								"convertirEthEnUSDC(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1855,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1829,
									"end": 1856,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1936,
									"end": 1937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1912,
									"end": 1937,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1912,
									"end": 1937,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2046,
									"end": 2077,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2046,
									"end": 2077,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 5223,
									"end": 5865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5323,
									"end": 5329,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5355,
									"end": 5356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5344,
									"end": 5351,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5344,
									"end": 5356,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5341,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 5341,
									"end": 5397,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5396,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "F1FDFD2B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 5365,
									"end": 5397,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5397,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5341,
									"end": 5397,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 5341,
									"end": 5397,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5422,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5410,
									"end": 5417,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5410,
									"end": 5422,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5407,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 5407,
									"end": 5463,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5455,
									"end": 5462,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "5052FE8E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 5431,
									"end": 5463,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5431,
									"end": 5463,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5407,
									"end": 5463,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 5407,
									"end": 5463,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5486,
									"end": 5493,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5476,
									"end": 5483,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5476,
									"end": 5493,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5473,
									"end": 5551,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5473,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5473,
									"end": 5551,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5534,
									"end": 5541,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5550,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3122626300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 5502,
									"end": 5551,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5502,
									"end": 5551,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5473,
									"end": 5551,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5473,
									"end": 5551,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5581,
									"end": 5582,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5564,
									"end": 5583,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5569,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5564,
									"end": 5583,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5583,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5561,
									"end": 5593,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5561,
									"end": 5593,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5585,
									"end": 5593,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5585,
									"end": 5593,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5585,
									"end": 5593,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5561,
									"end": 5593,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5561,
									"end": 5593,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5667,
									"end": 5668,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5644,
									"end": 5669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5644,
									"end": 5669,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5644,
									"end": 5655,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5644,
									"end": 5669,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5644,
									"end": 5669,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5644,
									"end": 5669,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5641,
									"end": 5679,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5641,
									"end": 5679,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5671,
									"end": 5679,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5671,
									"end": 5679,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5671,
									"end": 5679,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5641,
									"end": 5679,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5641,
									"end": 5679,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5742,
									"end": 5753,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5726,
									"end": 5754,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5795,
									"end": 5800,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5764,
									"end": 5770,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5764,
									"end": 5801,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5823,
									"end": 5830,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5830,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 5811,
									"end": 5830,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5830,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5830,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5830,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5830,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5851,
									"end": 5858,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5840,
									"end": 5858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 5840,
									"end": 5858,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5840,
									"end": 5858,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5840,
									"end": 5858,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5840,
									"end": 5858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5840,
									"end": 5858,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5223,
									"end": 5865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2275,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2270,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2263,
									"end": 2300,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2188,
									"end": 2306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2405,
									"end": 2409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2428,
									"end": 2446,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2456,
									"end": 2527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2312,
									"end": 2534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2540,
									"end": 2658,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2540,
									"end": 2658,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2627,
									"end": 2651,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2645,
									"end": 2650,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2627,
									"end": 2651,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 2627,
									"end": 2651,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2627,
									"end": 2651,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2627,
									"end": 2651,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2615,
									"end": 2652,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2540,
									"end": 2658,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2540,
									"end": 2658,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2540,
									"end": 2658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2757,
									"end": 2761,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2797,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2784,
									"end": 2793,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2772,
									"end": 2798,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2772,
									"end": 2798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2876,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2874,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2861,
									"end": 2878,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2852,
									"end": 2858,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2808,
									"end": 2879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2879,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2808,
									"end": 2879,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2664,
									"end": 2886,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3017,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3053,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3040,
									"end": 3049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3054,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3028,
									"end": 3054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3028,
									"end": 3054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3064,
									"end": 3135,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 3132,
									"end": 3133,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3121,
									"end": 3130,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3134,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3108,
									"end": 3114,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3064,
									"end": 3135,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3064,
									"end": 3135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3064,
									"end": 3135,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 3064,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3217,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3213,
									"end": 3215,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3202,
									"end": 3211,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3198,
									"end": 3216,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3217,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3145,
									"end": 3217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3145,
									"end": 3217,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3145,
									"end": 3217,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 3224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "974"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "971"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "952"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 14092,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023f117fa363d84db6bc7724cc6d82fed0268488a62bf4255fb354f47110c4bfc64736f6c634300081e0033",
									".code": [
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "8648840A"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "939495BD"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "939495BD"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "C6ACA33C"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "F39B1809"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "8648840A"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "931FB90E"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "93295C1C"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "779BB136"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "79A82334"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "82FE54B5"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "16A1930F"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "6900670C"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH",
											"source": 10,
											"value": "698B7241"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "E1D158FF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6011,
											"end": 6052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6256,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH",
											"source": 10,
											"value": "E1D158FF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6216,
											"end": 6257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6257,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10798,
											"end": 11164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12494,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 12494,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 11456,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 11456,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 12958,
											"end": 13085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 12958,
											"end": 13085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1091,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 10362,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 10362,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 13977,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13977,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 10583,
											"end": 10669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 10583,
											"end": 10669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 13659,
											"end": 13754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 13659,
											"end": 13754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 12713,
											"end": 12846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 12713,
											"end": 12846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 13443,
											"end": 13531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 13443,
											"end": 13531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 13220,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 13220,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7008,
											"end": 7034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 7034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7061,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7044,
											"end": 7100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7099,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "B2F0923100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7070,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7100,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7100,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7044,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7143,
											"end": 7152,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "974"
										},
										{
											"begin": 7126,
											"end": 7140,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7126,
											"end": 7140,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 7114,
											"end": 7140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7152,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7110,
											"end": 7195,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH",
											"source": 10,
											"value": "2900B02C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7161,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7161,
											"end": 7195,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7110,
											"end": 7195,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7110,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 10895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 10917,
											"end": 10926,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10898,
											"end": 10927,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10927,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 10898,
											"end": 10927,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 10927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 10927,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 10992,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10967,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10978,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 10937,
											"end": 10992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11020,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 11002,
											"end": 11034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11034,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11044,
											"end": 11054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 11044,
											"end": 11056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11066,
											"end": 11080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 11066,
											"end": 11093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD"
										},
										{
											"begin": 11135,
											"end": 11145,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11147,
											"end": 11156,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 11108,
											"end": 11157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11157,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 10871,
											"end": 11164,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 7213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 11164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12570,
											"end": 12577,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12588,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12561,
											"end": 12589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12561,
											"end": 12589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7390,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7376,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7376,
											"end": 7429,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7418,
											"end": 7428,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH",
											"source": 10,
											"value": "B2F0923100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7399,
											"end": 7429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7429,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7376,
											"end": 7429,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 7376,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "974"
										},
										{
											"begin": 7452,
											"end": 7466,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7452,
											"end": 7466,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 7443,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7478,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7518,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7439,
											"end": 7518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "2900B02C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7487,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7518,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7518,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7439,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11592,
											"end": 11598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11574,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11576,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11587,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 11541,
											"end": 11598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11541,
											"end": 11598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11616,
											"end": 11626,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 11608,
											"end": 11637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11608,
											"end": 11637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 11647,
											"end": 11657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 11647,
											"end": 11659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11687,
											"end": 11693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11669,
											"end": 11683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 11669,
											"end": 11693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9D15693852BF60DC27BD5AA831D0351359B7D01D428AE1BAAE11F15CBCFEBAFD"
										},
										{
											"begin": 11735,
											"end": 11745,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11753,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 11708,
											"end": 11754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11754,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 11788,
											"end": 11798,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11808,
											"end": 11812,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 11815,
											"end": 11821,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11770,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 11764,
											"end": 11787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11764,
											"end": 11787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 11764,
											"end": 11787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 11764,
											"end": 11822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13004,
											"end": 13015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13063,
											"end": 13064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13066,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13067,
											"end": 13077,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12958,
											"end": 13085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10415,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10433,
											"end": 10439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10415,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 10415,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10415,
											"end": 10440,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10415,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 14070,
											"end": 14081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14052,
											"end": 14082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 14052,
											"end": 14082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13977,
											"end": 14089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 10636,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10662,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 10636,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13710,
											"end": 13714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13747,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 13733,
											"end": 13747,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12827,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12838,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12792,
											"end": 12839,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13524,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13516,
											"end": 13524,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13509,
											"end": 13524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13509,
											"end": 13524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13443,
											"end": 13531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13295,
											"end": 13305,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 13295,
											"end": 13305,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13288,
											"end": 13305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13288,
											"end": 13305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13220,
											"end": 13312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12318,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 12147,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1555,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 12277,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 12277,
											"end": 12293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 12268,
											"end": 12293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 12268,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12267,
											"end": 12311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 12267,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 9444,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 8908,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 8994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7805,
											"end": 7811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7786,
											"end": 7812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7786,
											"end": 7812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7838,
											"end": 7839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7839,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7822,
											"end": 7878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7867,
											"end": 7877,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B2F0923100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 7822,
											"end": 7878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7904,
											"end": 7912,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "971"
										},
										{
											"begin": 7892,
											"end": 7901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7912,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7888,
											"end": 7955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 7954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C399356500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7921,
											"end": 7955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 7955,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 7888,
											"end": 7955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 7996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 8008,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8019,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8020,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 7975,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 8020,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8078,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7965,
											"end": 8078,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8056,
											"end": 8066,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "51A7314200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8029,
											"end": 8078,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8078,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7965,
											"end": 8078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9020,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 9042,
											"end": 9048,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9023,
											"end": 9041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 9023,
											"end": 9049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9023,
											"end": 9049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 9023,
											"end": 9049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9006,
											"end": 9049,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9091,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9066,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9077,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 9059,
											"end": 9091,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9059,
											"end": 9091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9153,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9119,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9131,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9142,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 9101,
											"end": 9153,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9153,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9163,
											"end": 9171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9163,
											"end": 9173,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9210,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9197,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9183,
											"end": 9197,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 9183,
											"end": 9210,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8"
										},
										{
											"begin": 9263,
											"end": 9273,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9284,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 9234,
											"end": 9285,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9285,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9297,
											"end": 9309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9333,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9339,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9315,
											"end": 9339,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9347,
											"end": 9353,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 9315,
											"end": 9358,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9315,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9358,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9358,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9373,
											"end": 9380,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 9368,
											"end": 9437,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9418,
											"end": 9428,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9430,
											"end": 9436,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6C5E1A1400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 9389,
											"end": 9437,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9437,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9437,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 9368,
											"end": 9437,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9444,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8996,
											"end": 9444,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7759,
											"end": 8096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8908,
											"end": 9444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 9444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9849,
											"end": 10227,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 9849,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9931,
											"end": 9937,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8340,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8326,
											"end": 8379,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8378,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B2F0923100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8349,
											"end": 8379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8379,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8326,
											"end": 8379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8410,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "971"
										},
										{
											"begin": 8393,
											"end": 8399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8410,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8450,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8389,
											"end": 8450,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8443,
											"end": 8449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C399356500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8419,
											"end": 8450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8419,
											"end": 8450,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8389,
											"end": 8450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8506,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8473,
											"end": 8508,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8519,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8520,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8520,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8460,
											"end": 8575,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8460,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 8460,
											"end": 8575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8566,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8574,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "51A7314200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8529,
											"end": 8575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8575,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8460,
											"end": 8575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 8460,
											"end": 8575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 9978,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9967,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 9949,
											"end": 9978,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 9978,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10045,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10006,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10015,
											"end": 10021,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10023,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10034,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 9988,
											"end": 10045,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9988,
											"end": 10045,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10055,
											"end": 10063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 10055,
											"end": 10065,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10065,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 10075,
											"end": 10089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 10075,
											"end": 10099,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10099,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "9CDE449504E4972FFDDEC09813E0C252A1462D76BEF1864B9E7520DADB7183E8"
										},
										{
											"begin": 10152,
											"end": 10162,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10170,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 10123,
											"end": 10171,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10171,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 10201,
											"end": 10211,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10219,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10187,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 10181,
											"end": 10200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10200,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10200,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 10181,
											"end": 10200,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 10181,
											"end": 10220,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9849,
											"end": 10227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9849,
											"end": 10227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6829,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6443,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "PUSH",
											"source": 10,
											"value": "FEAF968C"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6563,
											"end": 6587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 6563,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6518,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6597,
											"end": 6673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH",
											"source": 10,
											"value": "3654402900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 6626,
											"end": 6673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6673,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6673,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6597,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 6686,
											"end": 6724,
											"name": "PUSH",
											"source": 10,
											"value": "FFFF"
										},
										{
											"begin": 6686,
											"end": 6724,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6701,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6686,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6686,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6724,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6683,
											"end": 6781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6768,
											"end": 6779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH",
											"source": 10,
											"value": "2609A26500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 6733,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6781,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6781,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6683,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6443,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2139,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2130,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2112,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2260,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2177,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2463,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2309,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 2420,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2463,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2656,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2469,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2643,
											"end": 2648,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2584,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2649,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2584,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2579,
											"end": 2582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2572,
											"end": 2650,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2469,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2823,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2824,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2798,
											"end": 2824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 2834,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2933,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2834,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 3068,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 2946,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3037,
											"end": 3042,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3019,
											"end": 3043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3043,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3019,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3012,
											"end": 3017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3044,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 3068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3165,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3174,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3201,
											"end": 3206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3174,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3174,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3174,
											"end": 3207,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3174,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3313,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3302,
											"end": 3325,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3330,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3414,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3295,
											"end": 3414,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3333,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3333,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3333,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3333,
											"end": 3412,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3333,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3414,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3295,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3478,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3478,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3734,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3554,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3679,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3680,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3703,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3727,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3799,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3794,
											"end": 3819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3794,
											"end": 3819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3833,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3833,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3894,
											"end": 3895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3904,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 4170,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3937,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3999,
											"end": 4023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4111,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4035,
											"end": 4112,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4032,
											"end": 4135,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 4115,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4135,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4032,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4162,
											"end": 4163,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4155,
											"end": 4160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4151,
											"end": 4164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 4170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 4170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 4170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 4170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4337,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4348,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4348,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4348,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4348,
											"end": 4419,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4348,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4429,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4497,
											"end": 4499,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4495,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4429,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4429,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4429,
											"end": 4501,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4429,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4561,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4595,
											"end": 4596,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4577,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4577,
											"end": 4597,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4577,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4572,
											"end": 4597,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4572,
											"end": 4597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4611,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4611,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4631,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4659,
											"end": 4668,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4688,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4718,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4688,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4718,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4848,
											"end": 4870,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4830,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 4884,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4778,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4778,
											"end": 4917,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 4897,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4897,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4778,
											"end": 4917,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 4778,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4562,
											"end": 4924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 5110,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 4930,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5055,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 5056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5079,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5065,
											"end": 5080,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5099,
											"end": 5103,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5104,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5173,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5193,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 5173,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5193,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5193,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5225,
											"end": 5226,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5207,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5227,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 5207,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5227,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5236,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5236,
											"end": 5271,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 5251,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5236,
											"end": 5271,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 5236,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5295,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5577,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5507,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5507,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5588,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5645,
											"end": 5654,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5588,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5588,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5588,
											"end": 5660,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5588,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5670,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 5742,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5670,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5799,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5815,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5835,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5815,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5849,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5869,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5849,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5911,
											"end": 5915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5908,
											"end": 5919,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5922,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5905,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 6102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6108,
											"end": 6222,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 6108,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6108,
											"end": 6222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6108,
											"end": 6222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6626,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6228,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6489,
											"end": 6490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 6408,
											"end": 6491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6491,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6408,
											"end": 6491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 6500,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6500,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6609,
											"end": 6620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6602,
											"end": 6620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 7011,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6632,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6816,
											"end": 6819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6981,
											"end": 6984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6838,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6985,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6838,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7002,
											"end": 7005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 7011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 7011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 7011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 7011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7122,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7017,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7115,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7116,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7071,
											"end": 7116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7071,
											"end": 7116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7122,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7017,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7248,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7128,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7217,
											"end": 7222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7200,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7200,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7240,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7347,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7335,
											"end": 7348,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7326,
											"end": 7348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7326,
											"end": 7348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7383,
											"end": 7388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7357,
											"end": 7389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7254,
											"end": 7395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7477,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7401,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7455,
											"end": 7471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7455,
											"end": 7471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7477,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7401,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7603,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7483,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7555,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7572,
											"end": 7577,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7555,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7555,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7555,
											"end": 7578,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7555,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7535,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7535,
											"end": 7597,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7595,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7535,
											"end": 7597,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7535,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7665,
											"end": 7670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7702,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7703,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7738,
											"end": 7743,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7712,
											"end": 7744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7813,
											"end": 7818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7838,
											"end": 7851,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7860,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7860,
											"end": 7893,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7860,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8092,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8075,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8064,
											"end": 8087,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8060,
											"end": 8093,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8057,
											"end": 8177,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8057,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8057,
											"end": 8177,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8096,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8096,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 8096,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8096,
											"end": 8175,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8096,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8057,
											"end": 8177,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8057,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8296,
											"end": 8303,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8276,
											"end": 8285,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8272,
											"end": 8294,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8241,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 8241,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8241,
											"end": 8304,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8241,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8304,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8355,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8379,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8434,
											"end": 8441,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8431,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8414,
											"end": 8423,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8410,
											"end": 8432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8379,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 8379,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8379,
											"end": 8442,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8379,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8442,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8491,
											"end": 8493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8573,
											"end": 8580,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8564,
											"end": 8570,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8553,
											"end": 8562,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8517,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 8517,
											"end": 8581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8517,
											"end": 8581,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8517,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8507,
											"end": 8581,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8507,
											"end": 8581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8462,
											"end": 8591,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8632,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8656,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8712,
											"end": 8719,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8709,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8692,
											"end": 8701,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8688,
											"end": 8710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 8656,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8720,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8656,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8646,
											"end": 8720,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8646,
											"end": 8720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8601,
											"end": 8730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8772,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8796,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8851,
											"end": 8858,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8842,
											"end": 8848,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8831,
											"end": 8840,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8827,
											"end": 8849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 8796,
											"end": 8859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8859,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8796,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8786,
											"end": 8859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8786,
											"end": 8859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8740,
											"end": 8869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 8876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8966,
											"end": 8977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 9006,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 8998,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8988,
											"end": 9007,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9016,
											"end": 9045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 9051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9238,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 9057,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9230,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9244,
											"end": 9610,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 9244,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9386,
											"end": 9389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9471,
											"end": 9473,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9466,
											"end": 9469,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 9407,
											"end": 9474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9474,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9407,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9400,
											"end": 9474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9400,
											"end": 9474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9483,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 9572,
											"end": 9575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9483,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 9483,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9483,
											"end": 9576,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 9483,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9601,
											"end": 9603,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9596,
											"end": 9599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9592,
											"end": 9604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9585,
											"end": 9604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9585,
											"end": 9604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9244,
											"end": 9610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9244,
											"end": 9610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9244,
											"end": 9610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9244,
											"end": 9610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 10035,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 9616,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9782,
											"end": 9786,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9797,
											"end": 9823,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9797,
											"end": 9823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 9878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9879,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9855,
											"end": 9856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9833,
											"end": 9880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9897,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9897,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 9897,
											"end": 10028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9897,
											"end": 10028,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9897,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9889,
											"end": 10028,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9889,
											"end": 10028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 10035,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 10035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 10035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 10035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositarETH()": "16a1930f",
							"depositarUSDC(uint256)": "698b7241",
							"i_feed()": "79a82334",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"retirarETH(uint256)": "82fe54b5",
							"retirarUSDC(uint256)": "931fb90e",
							"transferOwnership(address)": "f2fde38b",
							"transferirOwner(address)": "8648840a",
							"verBoveda()": "6900670c",
							"verSaldoETH()": "779bb136",
							"verSaldoUSDC()": "939495bd",
							"verTotalContrato()": "93295c1c",
							"verTotalDepositos()": "f39b1809",
							"verTotalRetiros()": "c6aca33c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limite\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_umbral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenERC20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_ExtraccionRechazada\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limite\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"umbral\",\"type\":\"uint256\"}],\"name\":\"KipuBank_InicializacionInvalida\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_LimiteExcedido\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limite\",\"type\":\"uint256\"}],\"name\":\"KipuBank_LimiteInvalido\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"}],\"name\":\"KipuBank_MontoCero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"}],\"name\":\"KipuBank_OperacionNoPermitida\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"precio\",\"type\":\"uint256\"}],\"name\":\"KipuBank_OraculoComprometido\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"precio\",\"type\":\"uint256\"}],\"name\":\"KipuBank_PrecioDesactualizado\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_SaldoInsuficiente\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_UmbralExcedido\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"umbral\",\"type\":\"uint256\"}],\"name\":\"KipuBank_UmbralInvalido\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_DepositoRealizado\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"titular\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"monto\",\"type\":\"uint256\"}],\"name\":\"KipuBank_ExtraccionRealizada\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"depositarETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monto\",\"type\":\"uint256\"}],\"name\":\"depositarUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_feed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monto\",\"type\":\"uint256\"}],\"name\":\"retirarETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monto\",\"type\":\"uint256\"}],\"name\":\"retirarUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nuevoOwner\",\"type\":\"address\"}],\"name\":\"transferirOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verBoveda\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"monto_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verSaldoETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"saldo_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verSaldoUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"saldo_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verTotalContrato\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verTotalDepositos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verTotalRetiros\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"KipuBank_ExtraccionRechazada(address,uint256)\":[{\"params\":{\"monto\":\"monto a extraer de la boveda\",\"titular\":\"titular de la cuenta a realizar la extracci\\u00f3n\"}}],\"KipuBank_InicializacionInvalida(uint256,uint256)\":[{\"params\":{\"limite\":\"limite del contrato\",\"umbral\":\"umbral del contrato\"}}],\"KipuBank_LimiteExcedido(uint256)\":[{\"params\":{\"monto\":\"monto que excede el limite a depositar\"}}],\"KipuBank_LimiteInvalido(uint256)\":[{\"params\":{\"limite\":\"limite que es invalido\"}}],\"KipuBank_MontoCero(address)\":[{\"params\":{\"titular\":\"titular que emite una transaccion con valor nulo\"}}],\"KipuBank_OperacionNoPermitida(address)\":[{\"params\":{\"titular\":\"titular que realizo la operacion no permitida\"}}],\"KipuBank_OraculoComprometido(uint256)\":[{\"params\":{\"precio\":\"Precio que di\\u00f3 el \\u00f3raculo\"}}],\"KipuBank_PrecioDesactualizado(uint256)\":[{\"params\":{\"precio\":\"Es el precio que qued\\u00f3 desactualizado\"}}],\"KipuBank_SaldoInsuficiente(address,uint256)\":[{\"params\":{\"monto\":\"monto a retirar\",\"titular\":\"titular con saldo insuficiente\"}}],\"KipuBank_UmbralExcedido(uint256)\":[{\"params\":{\"monto\":\"que excede el umbral establecido\"}}],\"KipuBank_UmbralInvalido(uint256)\":[{\"params\":{\"umbral\":\"umbral que es invalido\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"KipuBank_DepositoRealizado(address,uint256)\":{\"params\":{\"monto\":\"monto que se desea depositar\",\"titular\":\"titular que realiza el detposito\"}},\"KipuBank_ExtraccionRealizada(address,uint256)\":{\"params\":{\"monto\":\"monto que se desea extraer\",\"titular\":\"titular que desea realizar la extracci\\u00f3n\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Se deben generar el limite, umbral y las direcciones del data feed y el token a utilizar al momento de desplegar el contrato\",\"params\":{\"_feed\":\"Direccion del data feed a utlizar\",\"_limite\":\"Limite global que se permite por transaccion\",\"_tokenERC20\":\"Direccion del token ERC20 a utilizar\",\"_umbral\":\"Umbral de limite de retiros\"}},\"depositarETH()\":{\"details\":\"Es payable y usa el modificador de verificarDepositos\"},\"depositarUSDC(uint256)\":{\"details\":\"Es payable y usa el modificador de verificarDepositosSe utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20No se marca como payable ya que es un token ERC20 y no Ether\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"retirarETH(uint256)\":{\"params\":{\"_monto\":\"es el monto a retirar de la boveda\"}},\"retirarUSDC(uint256)\":{\"params\":{\"_monto\":\"es el monto a retirar de la boveda\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferirOwner(address)\":{\"details\":\"El modificador de onlyOwner es necesario para seguridad\",\"params\":{\"_nuevoOwner\":\"Ser\\u00e1 la direcci\\u00f3n del nuevo propietario del contrato\"}},\"verBoveda()\":{\"returns\":{\"monto_\":\"devuelve el saldo depositado total en USD depositado por cada titular\"}},\"verSaldoETH()\":{\"returns\":{\"saldo_\":\"Retornal el saldo en ETH\"}},\"verSaldoUSDC()\":{\"returns\":{\"saldo_\":\"Retorna el saldo en USDC\"}},\"verTotalContrato()\":{\"returns\":{\"_0\":\"Devuelve el saldo del contrato en USD\"}},\"verTotalDepositos()\":{\"returns\":{\"_0\":\"Devuelve la cantidad de depositos\"}},\"verTotalRetiros()\":{\"returns\":{\"_0\":\"Devuelve la cantidad de retiros\"}}},\"stateVariables\":{\"DECIMAL_FACTOR\":{\"details\":\"Se hace la suma de los decimales de ethereum y de los decimales de la conversi\\u00f3n de chainlink para restarles los decimales de USDC, nos da la base igualitaria\"},\"HEARTBEAT\":{\"details\":\"Por convenci\\u00f3n se establece en 3600\"},\"_boveda\":{\"details\":\"El total se calcula en USD\"},\"_totalContrato\":{\"details\":\"El total del contrato es en USD\"},\"i_bankCap\":{\"details\":\"Tener en cuenta que el limite global ser\\u00e1 en USD\"},\"i_feed\":{\"details\":\"Utilizamos el data feed de Chainlink\"},\"i_usdc\":{\"details\":\"Es especifico para el token USDC\"}},\"version\":1},\"userdoc\":{\"errors\":{\"KipuBank_ExtraccionRechazada(address,uint256)\":[{\"notice\":\"Error de extraccion\"}],\"KipuBank_InicializacionInvalida(uint256,uint256)\":[{\"notice\":\"Error de umbral mayor al limite\"}],\"KipuBank_LimiteExcedido(uint256)\":[{\"notice\":\"Error por sobrepasarse del limite\"}],\"KipuBank_LimiteInvalido(uint256)\":[{\"notice\":\"Error por limite invalido\"}],\"KipuBank_MontoCero(address)\":[{\"notice\":\"Error monto cero\"}],\"KipuBank_OperacionNoPermitida(address)\":[{\"notice\":\"Error por operacion no permitida\"}],\"KipuBank_OraculoComprometido(uint256)\":[{\"notice\":\"Error por \\u00f3raculo dando un precio equivoco\"}],\"KipuBank_PrecioDesactualizado(uint256)\":[{\"notice\":\"Error por precio desactualizado\"}],\"KipuBank_SaldoInsuficiente(address,uint256)\":[{\"notice\":\"Error por saldo insuficiente\"}],\"KipuBank_UmbralExcedido(uint256)\":[{\"notice\":\"Error por umbral excedido\"}],\"KipuBank_UmbralInvalido(uint256)\":[{\"notice\":\"Error por umbral invalido\"}]},\"events\":{\"KipuBank_DepositoRealizado(address,uint256)\":{\"notice\":\"Evento para depositos realizado exitosamente\"},\"KipuBank_ExtraccionRealizada(address,uint256)\":{\"notice\":\"Evento para extracciones realizadas exitosamente\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor del contrato\"},\"depositarETH()\":{\"notice\":\"Funcion para depositar en la boveda\"},\"depositarUSDC(uint256)\":{\"notice\":\"Funcion para depositar en la boveda\"},\"i_feed()\":{\"notice\":\"Interfaz publica del data feed\"},\"retirarETH(uint256)\":{\"notice\":\"Funcion externa para realizar el retiro de saldo en ETH\"},\"retirarUSDC(uint256)\":{\"notice\":\"Funcion externa para realizar el retiro de saldo en USDC\"},\"transferirOwner(address)\":{\"notice\":\"Funci\\u00f3n para traspasar el contrato a otro due\\u00f1o\"},\"verBoveda()\":{\"notice\":\"Funcion para ver el saldo total guardado en el boveda en USD\"},\"verSaldoETH()\":{\"notice\":\"Funci\\u00f3n para el saldo en ETH del titular\"},\"verSaldoUSDC()\":{\"notice\":\"Funci\\u00f3n para ver el saldo en USDC del titular\"},\"verTotalContrato()\":{\"notice\":\"Funcion para ver el saldo total del contrato en USD\"},\"verTotalDepositos()\":{\"notice\":\"Funcion para ver la cantidad total de los depositos realizados\"},\"verTotalRetiros()\":{\"notice\":\"Funcion para ver la cantidad total de los retiros realizados\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KipuBank.sol\":\"KipuBank\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/KipuBank.sol\":{\"keccak256\":\"0xcbac708e42c23a397505192f33f364ee27cd5048dd9815d18c40415285e20559\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d201a34a206adcca0705de8121a83996a9fd2bb1223b7657f3fd38f7269b9138\",\"dweb:/ipfs/QmdibgLnaHyKq8XVmudZGoYz44p8EY7aFp8RD8RaCJjFYw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 956,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "i_feed",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 978,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_depositos",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 982,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_retiros",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 986,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_totalContrato",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 993,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_cuentasMultiToken",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 998,
								"contract": "contracts/KipuBank.sol:KipuBank",
								"label": "_boveda",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"KipuBank_ExtraccionRechazada(address,uint256)": [
								{
									"notice": "Error de extraccion"
								}
							],
							"KipuBank_InicializacionInvalida(uint256,uint256)": [
								{
									"notice": "Error de umbral mayor al limite"
								}
							],
							"KipuBank_LimiteExcedido(uint256)": [
								{
									"notice": "Error por sobrepasarse del limite"
								}
							],
							"KipuBank_LimiteInvalido(uint256)": [
								{
									"notice": "Error por limite invalido"
								}
							],
							"KipuBank_MontoCero(address)": [
								{
									"notice": "Error monto cero"
								}
							],
							"KipuBank_OperacionNoPermitida(address)": [
								{
									"notice": "Error por operacion no permitida"
								}
							],
							"KipuBank_OraculoComprometido(uint256)": [
								{
									"notice": "Error por óraculo dando un precio equivoco"
								}
							],
							"KipuBank_PrecioDesactualizado(uint256)": [
								{
									"notice": "Error por precio desactualizado"
								}
							],
							"KipuBank_SaldoInsuficiente(address,uint256)": [
								{
									"notice": "Error por saldo insuficiente"
								}
							],
							"KipuBank_UmbralExcedido(uint256)": [
								{
									"notice": "Error por umbral excedido"
								}
							],
							"KipuBank_UmbralInvalido(uint256)": [
								{
									"notice": "Error por umbral invalido"
								}
							]
						},
						"events": {
							"KipuBank_DepositoRealizado(address,uint256)": {
								"notice": "Evento para depositos realizado exitosamente"
							},
							"KipuBank_ExtraccionRealizada(address,uint256)": {
								"notice": "Evento para extracciones realizadas exitosamente"
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor del contrato"
							},
							"depositarETH()": {
								"notice": "Funcion para depositar en la boveda"
							},
							"depositarUSDC(uint256)": {
								"notice": "Funcion para depositar en la boveda"
							},
							"i_feed()": {
								"notice": "Interfaz publica del data feed"
							},
							"retirarETH(uint256)": {
								"notice": "Funcion externa para realizar el retiro de saldo en ETH"
							},
							"retirarUSDC(uint256)": {
								"notice": "Funcion externa para realizar el retiro de saldo en USDC"
							},
							"transferirOwner(address)": {
								"notice": "Función para traspasar el contrato a otro dueño"
							},
							"verBoveda()": {
								"notice": "Funcion para ver el saldo total guardado en el boveda en USD"
							},
							"verSaldoETH()": {
								"notice": "Función para el saldo en ETH del titular"
							},
							"verSaldoUSDC()": {
								"notice": "Función para ver el saldo en USDC del titular"
							},
							"verTotalContrato()": {
								"notice": "Funcion para ver el saldo total del contrato en USD"
							},
							"verTotalDepositos()": {
								"notice": "Funcion para ver la cantidad total de los depositos realizados"
							},
							"verTotalRetiros()": {
								"notice": "Funcion para ver la cantidad total de los retiros realizados"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							920
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 921,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 920,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 920,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								920
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							932
						],
						"IERC20": [
							426
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 932,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 426,
										"src": "590:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 932,
										"src": "598:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								932,
								426
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 275,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 275,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 275,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 275,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 275,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 275,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								360,
								369
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							932
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 933,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 932,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							426
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 427,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							348
						]
					},
					"id": 349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 348,
							"linearizedBaseContracts": [
								348
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 289,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 287,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 292,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 348,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 348,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 305,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 308,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 313,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 318,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 323,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 348,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 348,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 343,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 348,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 349,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							426
						]
					},
					"id": 427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 351,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 426,
							"linearizedBaseContracts": [
								426
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 360,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 369,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 426,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 426,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 426,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 426,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 426,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 426,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 427,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								360,
								369
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							426
						],
						"SafeERC20": [
							890
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 427,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 429,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 426,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 276,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 431,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 890,
							"linearizedBaseContracts": [
								890
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 438,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 447,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 462,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 464,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 460,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 458,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 890,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 488,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 490,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 491,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 492,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 484,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 890,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 515,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 517,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 513,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 511,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 510,
												"id": 522,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 501,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 500,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 426,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 890,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 543,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 545,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 546,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 548,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 541,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 539,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 538,
												"id": 551,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 526,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 426,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 890,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 570,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$890",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$890",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 566,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 579,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 555,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 426,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 890,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															596
														],
														"declarations": [
															{
																"constant": false,
																"id": 596,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 605,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 601,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$890",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$890",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 599,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 597,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 403,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 607,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 616,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 615,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 610,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 611,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 596,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 612,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 609,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 614,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 618,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 619,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 620,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 621,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$426",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 617,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 426,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 890,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 638,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 642,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 413,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 644,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 646,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 640,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 650,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 651,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$426",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 649,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 655,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 658,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$426",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 660,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 633,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 661,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 656,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 654,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 667,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 668,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 666,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 426,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 890,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 687,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 703,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 714,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 713,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 709,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 707,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 706,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 712,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 692,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 275,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 890,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 732,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 747,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 748,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 749,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 750,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 761,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 760,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 756,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 753,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 759,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 739,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 740,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 737,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 720,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 719,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 275,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 890,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 777,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 791,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 792,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 793,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 789,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 804,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 803,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 799,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 768,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 797,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 796,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 802,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 783,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 784,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 785,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 782,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 766,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 275,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 890,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 813,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 813,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 811,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 823,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 834,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$426",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$426",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 826,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 841,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$426",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$426",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 839,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 838,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 809,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 426,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 890,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 859,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													866
												],
												"declarations": [
													{
														"constant": false,
														"id": 866,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 888,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 866,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 852,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 868,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 869,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 870,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 875,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 852,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$426",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$426",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 873,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 885,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 858,
												"id": 887,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$426",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 850,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 426,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 426,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 890,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 891,
							"src": "698:9376:7",
							"usedErrors": [
								438,
								447
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							920
						]
					},
					"id": 921,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 898,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 897,
												"id": 900,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 920,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 906,
												"id": 909,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 920,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 920,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 921,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							932
						]
					},
					"id": 933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 923,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 932,
							"linearizedBaseContracts": [
								932
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 925,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 932,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 933,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"contracts/KipuBank.sol": {
				"ast": {
					"absolutePath": "contracts/KipuBank.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							920
						],
						"IERC1363": [
							275
						],
						"IERC20": [
							426
						],
						"KipuBank": [
							1732
						],
						"Ownable": [
							193
						],
						"ReentrancyGuard": [
							348
						],
						"SafeERC20": [
							890
						]
					},
					"id": 1733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1733,
							"sourceUnit": 349,
							"src": "286:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1733,
							"sourceUnit": 427,
							"src": "349:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1733,
							"sourceUnit": 891,
							"src": "406:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1733,
							"sourceUnit": 194,
							"src": "472:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1733,
							"sourceUnit": 46,
							"src": "622:112:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 939,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "630:21:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 941,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"757:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 348,
										"src": "757:15:10"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "757:15:10"
								},
								{
									"baseName": {
										"id": 943,
										"name": "Ownable",
										"nameLocations": [
											"774:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "774:7:10"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "774:7:10"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1732,
							"linearizedBaseContracts": [
								1732,
								193,
								920,
								348
							],
							"name": "KipuBank",
							"nameLocation": "745:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 948,
									"libraryName": {
										"id": 945,
										"name": "SafeERC20",
										"nameLocations": [
											"849:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "849:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "843:27:10",
									"typeName": {
										"id": 947,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 946,
											"name": "IERC20",
											"nameLocations": [
												"863:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 426,
											"src": "863:6:10"
										},
										"referencedDeclaration": 426,
										"src": "863:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$426",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "876:83:10",
										"text": "@notice Direccion del Token ERC20\n @dev Es especifico para el token USDC"
									},
									"id": 952,
									"mutability": "immutable",
									"name": "i_usdc",
									"nameLocation": "981:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "964:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$426",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 951,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 950,
											"name": "IERC20",
											"nameLocations": [
												"964:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 426,
											"src": "964:6:10"
										},
										"referencedDeclaration": 426,
										"src": "964:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$426",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "994:92:10",
										"text": "@notice Interfaz publica del data feed\n @dev Utilizamos el data feed de Chainlink"
									},
									"functionSelector": "79a82334",
									"id": 956,
									"mutability": "mutable",
									"name": "i_feed",
									"nameLocation": "1120:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1091:35:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 955,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 954,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1091:21:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1091:21:10"
										},
										"referencedDeclaration": 45,
										"src": "1091:21:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1133:108:10",
										"text": "@notice Constante de refresco del precio del data feed\n @dev Por convención se establece en 3600"
									},
									"id": 960,
									"mutability": "constant",
									"name": "HEARTBEAT",
									"nameLocation": "1262:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1246:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 958,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1246:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1274:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "1285:222:10",
										"text": "@notice Constante de decimales de conversión\n @dev Se hace la suma de los decimales de ethereum y de los decimales de la conversión de chainlink para restarles los decimales de USDC, nos da la base igualitaria"
									},
									"id": 968,
									"mutability": "constant",
									"name": "DECIMAL_FACTOR",
									"nameLocation": "1526:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1512:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 962,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1512:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 967,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 963,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1543:1:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											},
											"id": 966,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 964,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1547:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3230",
												"id": 965,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1553:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_20_by_1",
													"typeString": "int_const 20"
												},
												"value": "20"
											},
											"src": "1547:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											}
										},
										"src": "1543:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "1562:45:10",
										"text": "@notice Umbral para fijo para transaccion"
									},
									"id": 971,
									"mutability": "immutable",
									"name": "i_umbral",
									"nameLocation": "1627:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1612:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1612:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "1642:100:10",
										"text": "@notice Limite global de deposito\n @dev Tener en cuenta que el limite global será en USD"
									},
									"id": 974,
									"mutability": "immutable",
									"name": "i_bankCap",
									"nameLocation": "1762:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1747:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1747:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1778:46:10",
										"text": "@notice Cantidad de depositos del contrato"
									},
									"id": 978,
									"mutability": "mutable",
									"name": "_depositos",
									"nameLocation": "1842:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1829:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1829:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 977,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1855:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "1863:44:10",
										"text": "@notice Cantidad de retiros del contrato"
									},
									"id": 982,
									"mutability": "mutable",
									"name": "_retiros",
									"nameLocation": "1925:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "1912:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 980,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1912:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1936:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1944:97:10",
										"text": "@notice Total de ether depositado en el contrato\n @dev El total del contrato es en USD"
									},
									"id": 986,
									"mutability": "mutable",
									"name": "_totalContrato",
									"nameLocation": "2059:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "2046:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2046:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 985,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2076:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "2084:91:10",
										"text": "@notice Estructura que almacena por titular el monto que posee en los diferentes tokens"
									},
									"id": 993,
									"mutability": "mutable",
									"name": "_cuentasMultiToken",
									"nameLocation": "2255:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "2180:93:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 992,
										"keyName": "token",
										"keyNameLocation": "2197:5:10",
										"keyType": {
											"id": 988,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2189:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2180:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 991,
											"keyName": "titular",
											"keyNameLocation": "2223:7:10",
											"keyType": {
												"id": 989,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2215:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2206:39:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "monto",
											"valueNameLocation": "2239:5:10",
											"valueType": {
												"id": 990,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2234:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "2280:109:10",
										"text": "@notice Estructura que almacena el total de la boveda del titular\n @dev El total se calcula en USD"
									},
									"id": 998,
									"mutability": "mutable",
									"name": "_boveda",
									"nameLocation": "2442:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1732,
									"src": "2394:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 997,
										"keyName": "titular",
										"keyNameLocation": "2411:7:10",
										"keyType": {
											"id": 995,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2403:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2394:39:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "monto",
										"valueNameLocation": "2427:5:10",
										"valueType": {
											"id": 996,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2422:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "2457:162:10",
										"text": "@notice Evento para depositos realizado exitosamente\n @param titular titular que realiza el detposito\n @param monto monto que se desea depositar"
									},
									"eventSelector": "9d15693852bf60dc27bd5aa831d0351359b7d01d428ae1baae11f15cbcfebafd",
									"id": 1005,
									"name": "KipuBank_DepositoRealizado",
									"nameLocation": "2630:26:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "2665:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2657:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "2679:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2674:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2674:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:29:10"
									},
									"src": "2624:62:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "2692:173:10",
										"text": "@notice Evento para extracciones realizadas exitosamente\n @param titular titular que desea realizar la extracción\n @param monto monto que se desea extraer"
									},
									"eventSelector": "9cde449504e4972ffddec09813e0c252a1462d76bef1864b9e7520dadb7183e8",
									"id": 1012,
									"name": "KipuBank_ExtraccionRealizada",
									"nameLocation": "2876:28:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "2913:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2905:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "2927:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2922:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2922:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:29:10"
									},
									"src": "2870:64:10"
								},
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "2942:151:10",
										"text": "@notice Error de extraccion\n @param titular titular de la cuenta a realizar la extracción\n @param monto monto a extraer de la boveda"
									},
									"errorSelector": "6c5e1a14",
									"id": 1019,
									"name": "KipuBank_ExtraccionRechazada",
									"nameLocation": "3104:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "3141:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "3133:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "3155:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "3150:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3150:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:29:10"
									},
									"src": "3098:64:10"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "3168:105:10",
										"text": "@notice Error por sobrepasarse del limite\n @param monto monto que excede el limite a depositar"
									},
									"errorSelector": "2900b02c",
									"id": 1024,
									"name": "KipuBank_LimiteExcedido",
									"nameLocation": "3284:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "3313:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3308:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:12:10"
									},
									"src": "3278:42:10"
								},
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "3326:131:10",
										"text": "@notice Error por saldo insuficiente\n @param titular titular con saldo insuficiente\n @param monto monto a retirar"
									},
									"errorSelector": "51a73142",
									"id": 1031,
									"name": "KipuBank_SaldoInsuficiente",
									"nameLocation": "3468:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "3503:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3495:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "3517:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3512:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3512:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:29:10"
									},
									"src": "3462:62:10"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3530:91:10",
										"text": "@notice Error por umbral excedido\n @param monto que excede el umbral establecido"
									},
									"errorSelector": "c3993565",
									"id": 1036,
									"name": "KipuBank_UmbralExcedido",
									"nameLocation": "3632:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "monto",
												"nameLocation": "3661:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3656:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3656:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:12:10"
									},
									"src": "3626:42:10"
								},
								{
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3674:100:10",
										"text": "@notice Error monto cero\n @param titular titular que emite una transaccion con valor nulo"
									},
									"errorSelector": "b2f09231",
									"id": 1041,
									"name": "KipuBank_MontoCero",
									"nameLocation": "3785:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "3812:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "3804:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:17:10"
									},
									"src": "3779:42:10"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "3827:82:10",
										"text": "@notice Error por umbral invalido\n @param umbral umbral que es invalido"
									},
									"errorSelector": "5052fe8e",
									"id": 1046,
									"name": "KipuBank_UmbralInvalido",
									"nameLocation": "3920:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "umbral",
												"nameLocation": "3949:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3944:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3944:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3943:13:10"
									},
									"src": "3914:43:10"
								},
								{
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "3963:82:10",
										"text": "@notice Error por limite invalido\n @param limite limite que es invalido"
									},
									"errorSelector": "f1fdfd2b",
									"id": 1051,
									"name": "KipuBank_LimiteInvalido",
									"nameLocation": "4056:23:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "limite",
												"nameLocation": "4085:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4080:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4080:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:13:10"
									},
									"src": "4050:43:10"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "4099:127:10",
										"text": "@notice Error de umbral mayor al limite\n @param umbral umbral del contrato\n @param limite limite del contrato"
									},
									"errorSelector": "31226263",
									"id": 1058,
									"name": "KipuBank_InicializacionInvalida",
									"nameLocation": "4237:31:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "limite",
												"nameLocation": "4274:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4269:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4269:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "umbral",
												"nameLocation": "4287:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "4282:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4282:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:26:10"
									},
									"src": "4231:64:10"
								},
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "4301:113:10",
										"text": "@notice Error por operacion no permitida\n @param titular titular que realizo la operacion no permitida"
									},
									"errorSelector": "e1d158ff",
									"id": 1063,
									"name": "KipuBank_OperacionNoPermitida",
									"nameLocation": "4425:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "titular",
												"nameLocation": "4463:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "4455:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4455:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4454:17:10"
									},
									"src": "4419:53:10"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "4478:105:10",
										"text": "@notice Error por óraculo dando un precio equivoco\n @param precio Precio que dió el óraculo"
									},
									"errorSelector": "36544029",
									"id": 1068,
									"name": "KipuBank_OraculoComprometido",
									"nameLocation": "4594:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "precio",
												"nameLocation": "4628:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "4623:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4623:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4622:13:10"
									},
									"src": "4588:48:10"
								},
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "4642:104:10",
										"text": "@notice Error por precio desactualizado\n @param precio Es el precio que quedó desactualizado"
									},
									"errorSelector": "2609a265",
									"id": 1073,
									"name": "KipuBank_PrecioDesactualizado",
									"nameLocation": "4757:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "precio",
												"nameLocation": "4792:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4787:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4787:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:13:10"
									},
									"src": "4751:49:10"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "5331:534:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1090,
														"name": "_limite",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "5344:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5355:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5344:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1097,
												"nodeType": "IfStatement",
												"src": "5341:56:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1094,
																"name": "_limite",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "5389:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1093,
															"name": "KipuBank_LimiteInvalido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "5365:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5365:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1096,
													"nodeType": "RevertStatement",
													"src": "5358:39:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "5410:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5421:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5410:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1105,
												"nodeType": "IfStatement",
												"src": "5407:56:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1102,
																"name": "_umbral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "5455:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1101,
															"name": "KipuBank_UmbralInvalido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "5431:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5431:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1104,
													"nodeType": "RevertStatement",
													"src": "5424:39:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "5476:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1107,
														"name": "_limite",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "5486:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5476:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "5473:78:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1110,
																"name": "_limite",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "5534:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1111,
																"name": "_umbral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "5543:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1109,
															"name": "KipuBank_InicializacionInvalida",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "5502:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5502:49:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1113,
													"nodeType": "RevertStatement",
													"src": "5495:56:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "_feed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "5564:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5581:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5573:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1116,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5573:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5573:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5564:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1124,
												"nodeType": "IfStatement",
												"src": "5561:32:10",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1121,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "5585:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5585:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1123,
													"nodeType": "ExpressionStatement",
													"src": "5585:8:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1125,
														"name": "_tokenERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "5644:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5667:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5659:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5659:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5659:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5644:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "5641:38:10",
												"trueBody": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1131,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "5671:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5671:8:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1133,
													"nodeType": "ExpressionStatement",
													"src": "5671:8:10"
												}
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1135,
														"name": "i_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "5726:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$426",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1137,
																"name": "_tokenERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "5742:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1136,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "5735:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5735:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$426",
															"typeString": "contract IERC20"
														}
													},
													"src": "5726:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$426",
														"typeString": "contract IERC20"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "5726:28:10"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "i_feed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "5764:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1143,
																"name": "_feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "5795:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1142,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "5773:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5773:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "5764:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "5764:37:10"
											},
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "5811:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1148,
														"name": "_limite",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "5823:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5811:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "5811:19:10"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "i_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "5840:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "5851:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5840:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "5840:18:10"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "4806:412:10",
										"text": "@notice Constructor del contrato\n @param _limite Limite global que se permite por transaccion\n @param _umbral Umbral de limite de retiros\n @param _feed Direccion del data feed a utlizar\n @param _tokenERC20 Direccion del token ERC20 a utilizar\n @dev Se deben generar el limite, umbral y las direcciones del data feed y el token a utilizar al momento de desplegar el contrato"
									},
									"id": 1156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1087,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "5323:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1088,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1086,
												"name": "Ownable",
												"nameLocations": [
													"5315:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "5315:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5315:15:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "_limite",
												"nameLocation": "5240:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5235:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5235:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_umbral",
												"nameLocation": "5254:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5249:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5249:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5271:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5263:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "_feed",
												"nameLocation": "5287:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5279:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "_tokenERC20",
												"nameLocation": "5302:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5294:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5294:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5234:80:10"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:0:10"
									},
									"scope": 1732,
									"src": "5223:642:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "6002:53:10",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"expression": {
																"id": 1161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6041:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6045:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6041:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1160,
														"name": "KipuBank_OperacionNoPermitida",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "6011:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
															"typeString": "function (address) pure returns (error)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6011:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1164,
												"nodeType": "RevertStatement",
												"src": "6004:48:10"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "5871:99:10",
										"text": "@notice Funcion receive() no permitida\n @dev El contrato no puede recibir ether sin data"
									},
									"id": 1166,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5982:2:10"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:10"
									},
									"scope": 1732,
									"src": "5975:80:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "6207:53:10",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"expression": {
																"id": 1171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6246:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6250:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6246:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1170,
														"name": "KipuBank_OperacionNoPermitida",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "6216:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
															"typeString": "function (address) pure returns (error)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6216:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1174,
												"nodeType": "RevertStatement",
												"src": "6209:48:10"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "6061:113:10",
										"text": "@notice Funcion fallback() no permitida\n @dev El contrato no puede enviar data de manera no autorizada"
									},
									"id": 1176,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6187:2:10"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6207:0:10"
									},
									"scope": 1732,
									"src": "6179:81:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "6508:321:10",
										"statements": [
											{
												"assignments": [
													null,
													1183,
													null,
													1185,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "ethUSDPrice",
														"nameLocation": "6528:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "6521:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1182,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6521:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "updateAt",
														"nameLocation": "6550:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "6542:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6542:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1189,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1186,
															"name": "i_feed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "6563:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6570:15:10",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "6563:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6563:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6518:69:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1190,
														"name": "ethUSDPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "6601:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6616:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "6597:76:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1196,
																		"name": "ethUSDPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "6660:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6655:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6655:4:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6655:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1193,
															"name": "KipuBank_OraculoComprometido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "6626:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6626:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1199,
													"nodeType": "RevertStatement",
													"src": "6619:54:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1201,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6686:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6692:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6686:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1203,
															"name": "updateAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "6704:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6686:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1205,
														"name": "HEARTBEAT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "6715:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6686:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "6683:98:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1210,
																		"name": "ethUSDPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "6768:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6763:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6763:4:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6763:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1207,
															"name": "KipuBank_PrecioDesactualizado",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6733:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6733:48:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1213,
													"nodeType": "RevertStatement",
													"src": "6726:55:10"
												}
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "precioUSD_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "6792:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1218,
																"name": "ethUSDPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "6810:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6805:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1216,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6805:4:10",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6805:17:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6792:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "6792:30:10"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "6266:172:10",
										"text": "@notice Función para realizar la consulta del precio mediante óraculo\n @return precioUSD_ Retorna el precio en USD\n @dev Usamos el óraculo de ChainLink"
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chainLinkFeeds",
									"nameLocation": "6452:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:2:10"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "precioUSD_",
												"nameLocation": "6496:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "6491:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6491:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:17:10"
									},
									"scope": 1732,
									"src": "6443:386:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "6981:232:10",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "montoUSDC",
														"nameLocation": "6996:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "6991:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6991:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1233,
												"initialValue": {
													"arguments": [
														{
															"id": 1231,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "7027:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "convertirEthEnUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "7008:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7008:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:43:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "7047:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7060:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7047:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "7044:56:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1238,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7089:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7093:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7089:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1237,
															"name": "KipuBank_MontoCero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7070:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7070:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1241,
													"nodeType": "RevertStatement",
													"src": "7063:37:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1243,
															"name": "montoUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "7114:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1244,
															"name": "_totalContrato",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "7126:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7114:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1246,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "7143:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7114:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "7110:85:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1249,
																"name": "montoUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "7185:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1248,
															"name": "KipuBank_LimiteExcedido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "7161:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7161:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1251,
													"nodeType": "RevertStatement",
													"src": "7154:41:10"
												}
											},
											{
												"id": 1253,
												"nodeType": "PlaceholderStatement",
												"src": "7205:1:10"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "6835:98:10",
										"text": "@notice Modificador para verificar los depositos\n @param _monto es el monto a verificar"
									},
									"id": 1255,
									"name": "verificarDepositoETH",
									"nameLocation": "6947:20:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "6973:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "6968:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6968:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6967:13:10"
									},
									"src": "6938:275:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "7366:170:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "7379:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7389:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7379:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "7376:53:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1264,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7418:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7422:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7418:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1263,
															"name": "KipuBank_MontoCero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7399:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7399:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1267,
													"nodeType": "RevertStatement",
													"src": "7392:37:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1269,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7443:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1270,
															"name": "_totalContrato",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "7452:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7443:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1272,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "7469:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7443:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "7439:79:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1275,
																"name": "_monto",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "7511:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1274,
															"name": "KipuBank_LimiteExcedido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "7487:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7487:31:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1277,
													"nodeType": "RevertStatement",
													"src": "7480:38:10"
												}
											},
											{
												"id": 1279,
												"nodeType": "PlaceholderStatement",
												"src": "7528:1:10"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "7219:98:10",
										"text": "@notice Modificador para verificar los depositos\n @param _monto es el monto a verificar"
									},
									"id": 1281,
									"name": "verificarDepositoUSDC",
									"nameLocation": "7331:21:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "7358:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "7353:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7353:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7352:13:10"
									},
									"src": "7322:214:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "7759:337:10",
										"statements": [
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "montoUSDC",
														"nameLocation": "7774:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "7769:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7769:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"arguments": [
														{
															"id": 1289,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "7805:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1288,
														"name": "convertirEthEnUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "7786:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7786:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7769:43:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1292,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "7825:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7838:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7825:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "7822:56:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1296,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7867:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7871:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7867:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1295,
															"name": "KipuBank_MontoCero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7848:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7848:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1299,
													"nodeType": "RevertStatement",
													"src": "7841:37:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "7892:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1302,
														"name": "i_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "7904:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7892:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "7888:67:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1305,
																"name": "montoUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "7945:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1304,
															"name": "KipuBank_UmbralExcedido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7921:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7921:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1307,
													"nodeType": "RevertStatement",
													"src": "7914:41:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1309,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "7969:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1310,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "7978:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1315,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8005:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7997:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1311,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7997:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7997:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7978:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1318,
														"indexExpression": {
															"expression": {
																"id": 1316,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8009:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8013:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8009:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7978:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7969:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "7965:113:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8056:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8060:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8056:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1323,
																"name": "montoUSDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "8068:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1320,
															"name": "KipuBank_SaldoInsuficiente",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "8029:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (address,uint256) pure returns (error)"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8029:49:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1325,
													"nodeType": "RevertStatement",
													"src": "8022:56:10"
												}
											},
											{
												"id": 1327,
												"nodeType": "PlaceholderStatement",
												"src": "8088:1:10"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "7546:167:10",
										"text": "@notice Modificador para verificar los retiros\n @param _monto monto a verificar para el retiro\n @dev El umbral solo se aplica a los retiros de boveda"
									},
									"id": 1329,
									"name": "verificarRetiroETH",
									"nameLocation": "7727:18:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "7751:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "7746:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7746:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:13:10"
									},
									"src": "7718:378:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "8316:277:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1334,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "8329:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8339:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8329:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "IfStatement",
												"src": "8326:53:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1338,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8368:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8372:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8368:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1337,
															"name": "KipuBank_MontoCero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "8349:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8349:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1341,
													"nodeType": "RevertStatement",
													"src": "8342:37:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "8393:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1344,
														"name": "i_umbral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "8402:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8393:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "8389:61:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1347,
																"name": "_monto",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "8443:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1346,
															"name": "KipuBank_UmbralExcedido",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "8419:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256) pure returns (error)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8419:31:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1349,
													"nodeType": "RevertStatement",
													"src": "8412:38:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1351,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "8464:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1352,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "8473:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1357,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1355,
																		"name": "i_usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "8500:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8492:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1353,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8492:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8492:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8473:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1360,
														"indexExpression": {
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8509:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8513:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8509:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8473:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8464:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "8460:115:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1363,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8556:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8560:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8556:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1365,
																"name": "_monto",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "8568:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1362,
															"name": "KipuBank_SaldoInsuficiente",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "8529:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (address,uint256) pure returns (error)"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8529:46:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1367,
													"nodeType": "RevertStatement",
													"src": "8522:53:10"
												}
											},
											{
												"id": 1369,
												"nodeType": "PlaceholderStatement",
												"src": "8585:1:10"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "8102:167:10",
										"text": "@notice Modificador para verificar los retiros\n @param _monto monto a verificar para el retiro\n @dev El umbral solo se aplica a los retiros de boveda"
									},
									"id": 1371,
									"name": "verificarRetiroUSDC",
									"nameLocation": "8283:19:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "8308:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "8303:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8303:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:13:10"
									},
									"src": "8274:319:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "8996:448:10",
										"statements": [
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "montoUSDC",
														"nameLocation": "9011:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "9006:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1382,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9006:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "9042:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "convertirEthEnUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "9023:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9023:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9006:43:10"
											},
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1388,
															"name": "_boveda",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "9059:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1391,
														"indexExpression": {
															"expression": {
																"id": 1389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9067:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9071:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9067:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9059:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1392,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "9082:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9059:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "9059:32:10"
											},
											{
												"expression": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1395,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "9101:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1402,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9128:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9120:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9120:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9120:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9101:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1403,
														"indexExpression": {
															"expression": {
																"id": 1400,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9132:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9136:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9132:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9101:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1404,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "9147:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9101:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "9101:52:10"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9163:10:10",
													"subExpression": {
														"id": 1407,
														"name": "_retiros",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "9163:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "9163:10:10"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1410,
														"name": "_totalContrato",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "9183:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1411,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "9201:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9183:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "9183:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9263:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9267:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9263:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "montoUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "9275:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1414,
														"name": "KipuBank_ExtraccionRealizada",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "9234:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9234:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "EmitStatement",
												"src": "9229:56:10"
											},
											{
												"assignments": [
													1421,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9302:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "9297:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1420,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9297:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9355:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1424,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9323:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9327:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9323:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9315:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1422,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9315:8:10",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9315:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9335:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9315:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1428,
																"name": "_monto",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "9347:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9315:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9315:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9296:62:10"
											},
											{
												"condition": {
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9372:8:10",
													"subExpression": {
														"id": 1433,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "9373:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "9368:69:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1436,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9418:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9422:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9418:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1438,
																"name": "_monto",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "9430:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1435,
															"name": "KipuBank_ExtraccionRechazada",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "9389:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (address,uint256) pure returns (error)"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9389:48:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1440,
													"nodeType": "RevertStatement",
													"src": "9382:55:10"
												}
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "8603:300:10",
										"text": "@notice Funcion privada para realizar el retiro efectivo de fondos en ETH\n @param _monto recibe el monto a retirar de la boveda\n @dev Se actualiza el estado antes de la transferencia para aplicar el patrón CEI\n @dev Se utiliza la funcion de OpenZeppelin para el nonReentrant"
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1376,
												"name": "nonReentrant",
												"nameLocations": [
													"8956:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "8956:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8956:12:10"
										},
										{
											"arguments": [
												{
													"id": 1379,
													"name": "_monto",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "8988:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1378,
												"name": "verificarRetiroETH",
												"nameLocations": [
													"8969:18:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1329,
												"src": "8969:18:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8969:26:10"
										}
									],
									"name": "_retirarFondosETH",
									"nameLocation": "8917:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "8940:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "8935:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8935:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8934:13:10"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8996:0:10"
									},
									"scope": 1732,
									"src": "8908:536:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "9939:288:10",
										"statements": [
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1454,
															"name": "_boveda",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "9949:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1457,
														"indexExpression": {
															"expression": {
																"id": 1455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9957:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9961:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9957:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9949:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1458,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "9972:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9949:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "9949:29:10"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1461,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "9988:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1468,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1464,
																		"name": "i_usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "10015:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10007:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1462,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10007:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10007:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9988:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1469,
														"indexExpression": {
															"expression": {
																"id": 1466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10024:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10028:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10024:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9988:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1470,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "10039:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9988:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "9988:57:10"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "10055:10:10",
													"subExpression": {
														"id": 1473,
														"name": "_retiros",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "10055:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "10055:10:10"
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "_totalContrato",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "10075:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1477,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "10093:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10075:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "10075:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10152:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10156:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10152:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "10164:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1480,
														"name": "KipuBank_ExtraccionRealizada",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "10123:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10123:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "EmitStatement",
												"src": "10118:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10201:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10205:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10201:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1491,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "10213:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1486,
															"name": "i_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "10181:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10188:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 471,
														"src": "10181:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$426_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10181:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "10181:39:10"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "9450:394:10",
										"text": "@notice Funcion privada para realizar el retiro efectivo de fondos en USDC\n @param _monto recibe el monto a retirar de la boveda\n @dev Se actualiza el estado antes de la transferencia para aplicar el patrón CEI\n @dev Se utiliza la funcion de OpenZeppelin para el nonReentrant\n @dev Se utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20"
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1448,
												"name": "nonReentrant",
												"nameLocations": [
													"9898:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "9898:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9898:12:10"
										},
										{
											"arguments": [
												{
													"id": 1451,
													"name": "_monto",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1446,
													"src": "9931:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1452,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1450,
												"name": "verificarRetiroUSDC",
												"nameLocations": [
													"9911:19:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "9911:19:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9911:27:10"
										}
									],
									"name": "_retirarFondosUSDC",
									"nameLocation": "9858:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "9882:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "9877:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9877:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9876:13:10"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9939:0:10"
									},
									"scope": 1732,
									"src": "9849:378:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "10405:42:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1502,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "10433:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1501,
														"name": "_retirarFondosETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "10415:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10415:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "10415:25:10"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "10233:124:10",
										"text": "@notice Funcion externa para realizar el retiro de saldo en ETH\n @param _monto es el monto a retirar de la boveda"
									},
									"functionSelector": "82fe54b5",
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retirarETH",
									"nameLocation": "10371:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "10387:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "10382:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10382:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10381:13:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10405:0:10"
									},
									"scope": 1732,
									"src": "10362:85:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "10626:43:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "10655:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "_retirarFondosUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "10636:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10636:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "10636:26:10"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "10453:125:10",
										"text": "@notice Funcion externa para realizar el retiro de saldo en USDC\n @param _monto es el monto a retirar de la boveda"
									},
									"functionSelector": "931fb90e",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retirarUSDC",
									"nameLocation": "10592:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "10609:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "10604:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10604:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10603:13:10"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10626:0:10"
									},
									"scope": 1732,
									"src": "10583:86:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "10871:293:10",
										"statements": [
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "montoUSDC",
														"nameLocation": "10886:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "10881:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1531,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10917:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10921:5:10",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "10917:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1527,
														"name": "convertirEthEnUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "10898:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10898:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10881:46:10"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1532,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "10937:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1539,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10964:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10956:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10956:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10956:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10937:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1540,
														"indexExpression": {
															"expression": {
																"id": 1537,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10968:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10972:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10968:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10937:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1541,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10983:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10987:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "10983:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10937:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "10937:55:10"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1545,
															"name": "_boveda",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11002:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1548,
														"indexExpression": {
															"expression": {
																"id": 1546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11010:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11014:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11010:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11002:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1549,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "11025:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11002:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "11002:32:10"
											},
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11044:12:10",
													"subExpression": {
														"id": 1552,
														"name": "_depositos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "11044:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "11044:12:10"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1555,
														"name": "_totalContrato",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "11066:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1556,
														"name": "montoUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "11084:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11066:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "11066:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1560,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11135:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11139:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11135:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "montoUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "11147:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "KipuBank_DepositoRealizado",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "11108:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11108:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "EmitStatement",
												"src": "11103:54:10"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "10679:114:10",
										"text": "@notice Funcion para depositar en la boveda\n @dev Es payable y usa el modificador de verificarDepositos"
									},
									"functionSelector": "16a1930f",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1521,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10860:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10864:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "10860:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1520,
												"name": "verificarDepositoETH",
												"nameLocations": [
													"10839:20:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1255,
												"src": "10839:20:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10839:31:10"
										}
									],
									"name": "depositarETH",
									"nameLocation": "10807:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:2:10"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10871:0:10"
									},
									"scope": 1732,
									"src": "10798:366:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "11531:298:10",
										"statements": [
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1575,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "11541:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1582,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1578,
																		"name": "i_usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "11568:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11560:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1576,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11560:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11560:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11541:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1583,
														"indexExpression": {
															"expression": {
																"id": 1580,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11577:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11581:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11577:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11541:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1584,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "11592:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11541:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "11541:57:10"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1587,
															"name": "_boveda",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "11608:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1590,
														"indexExpression": {
															"expression": {
																"id": 1588,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11616:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11620:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11616:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11608:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1591,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "11631:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11608:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "11608:29:10"
											},
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11647:12:10",
													"subExpression": {
														"id": 1594,
														"name": "_depositos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "11647:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "11647:12:10"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1597,
														"name": "_totalContrato",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "11669:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1598,
														"name": "_monto",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "11687:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11669:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "11669:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11735:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11739:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11735:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "11747:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "KipuBank_DepositoRealizado",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "11708:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11708:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "EmitStatement",
												"src": "11703:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1610,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11788:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11792:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11788:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1614,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11808:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBank_$1732",
																		"typeString": "contract KipuBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBank_$1732",
																		"typeString": "contract KipuBank"
																	}
																],
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11800:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1612,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11800:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11800:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1616,
															"name": "_monto",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "11815:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1607,
															"name": "i_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11764:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$426",
																"typeString": "contract IERC20"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11771:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "11764:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$426_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11764:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "11764:58:10"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "11170:281:10",
										"text": "@notice Funcion para depositar en la boveda\n @dev Es payable y usa el modificador de verificarDepositos\n @dev Se utiliza la interfaz SafeIERC20 para realizar la transferencia de token ERC20\n @dev No se marca como payable ya que es un token ERC20 y no Ether"
									},
									"functionSelector": "698b7241",
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1572,
													"name": "_monto",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1569,
													"src": "11523:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1571,
												"name": "verificarDepositoUSDC",
												"nameLocations": [
													"11501:21:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1281,
												"src": "11501:21:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11501:29:10"
										}
									],
									"name": "depositarUSDC",
									"nameLocation": "11465:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "11484:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "11479:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11479:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11478:13:10"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11531:0:10"
									},
									"scope": 1732,
									"src": "11456:373:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "12234:84:10",
										"statements": [
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1628,
														"name": "montoConvertido_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "12248:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1629,
																		"name": "_monto",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "12268:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1630,
																			"name": "chainLinkFeeds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "12277:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12277:16:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12268:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1633,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12267:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1634,
															"name": "DECIMAL_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "12297:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12267:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12248:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "12248:63:10"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "11839:303:10",
										"text": "@notice Funcion para convertir ETH en USDC\n @param _monto Es el monto ingresado a convertir\n @return montoConvertido_ Es el monto una vez convertido a USD\n @dev La cuenta debe hacerse debido a que los decimales de USDC y ETH no son los mismos, por lo tanto, se nivelan las bases"
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertirEthEnUSDC",
									"nameLocation": "12156:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "_monto",
												"nameLocation": "12180:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "12175:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12175:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12174:13:10"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "montoConvertido_",
												"nameLocation": "12216:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "12211:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12210:23:10"
									},
									"scope": 1732,
									"src": "12147:171:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "12551:45:10",
										"statements": [
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "monto_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "12561:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1646,
															"name": "_boveda",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "12570:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"expression": {
																"id": 1647,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12578:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12582:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12578:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12570:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12561:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "12561:28:10"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "12324:165:10",
										"text": "@notice Funcion para ver el saldo total guardado en el boveda en USD\n @return monto_ devuelve el saldo depositado total en USD depositado por cada titular"
									},
									"functionSelector": "6900670c",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verBoveda",
									"nameLocation": "12503:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12512:2:10"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "monto_",
												"nameLocation": "12543:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "12538:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12538:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12537:13:10"
									},
									"scope": 1732,
									"src": "12494:102:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "12773:73:10",
										"statements": [
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1659,
														"name": "saldo_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "12783:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1660,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "12792:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1665,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1663,
																		"name": "i_usdc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "12819:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$426",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12811:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12811:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12811:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12792:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1668,
														"indexExpression": {
															"expression": {
																"id": 1666,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12828:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12832:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12828:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12792:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12783:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "12783:56:10"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "12602:106:10",
										"text": "@notice Función para ver el saldo en USDC del titular\n @return saldo_ Retorna el saldo en USDC"
									},
									"functionSelector": "939495bd",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verSaldoUSDC",
									"nameLocation": "12722:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12734:2:10"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "saldo_",
												"nameLocation": "12765:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "12760:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12760:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12759:13:10"
									},
									"scope": 1732,
									"src": "12713:133:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "13017:68:10",
										"statements": [
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1678,
														"name": "saldo_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "13027:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1679,
																"name": "_cuentasMultiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "13036:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1684,
															"indexExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13063:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13055:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13055:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13055:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13036:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1687,
														"indexExpression": {
															"expression": {
																"id": 1685,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13067:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13071:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13067:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13036:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13027:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "13027:51:10"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "12852:101:10",
										"text": "@notice Función para el saldo en ETH del titular\n @return saldo_ Retornal el saldo en ETH"
									},
									"functionSelector": "779bb136",
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verSaldoETH",
									"nameLocation": "12967:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12978:2:10"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "saldo_",
												"nameLocation": "13009:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "13004:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13004:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13003:13:10"
									},
									"scope": 1732,
									"src": "12958:127:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "13278:34:10",
										"statements": [
											{
												"expression": {
													"id": 1697,
													"name": "_depositos",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 978,
													"src": "13295:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1698,
												"nodeType": "Return",
												"src": "13288:17:10"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "13091:124:10",
										"text": "@notice Funcion para ver la cantidad total de los depositos realizados\n @return Devuelve la cantidad de depositos"
									},
									"functionSelector": "f39b1809",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verTotalDepositos",
									"nameLocation": "13229:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13246:2:10"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "13272:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13272:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13271:6:10"
									},
									"scope": 1732,
									"src": "13220:92:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "13499:32:10",
										"statements": [
											{
												"expression": {
													"id": 1706,
													"name": "_retiros",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 982,
													"src": "13516:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1707,
												"nodeType": "Return",
												"src": "13509:15:10"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "13318:120:10",
										"text": "@notice Funcion para ver la cantidad total de los retiros realizados\n @return Devuelve la cantidad de retiros"
									},
									"functionSelector": "c6aca33c",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verTotalRetiros",
									"nameLocation": "13452:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13467:2:10"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "13493:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13493:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13492:6:10"
									},
									"scope": 1732,
									"src": "13443:88:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "13716:38:10",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"name": "_totalContrato",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 986,
													"src": "13733:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1714,
												"id": 1716,
												"nodeType": "Return",
												"src": "13726:21:10"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "13537:117:10",
										"text": "@notice Funcion para ver el saldo total del contrato en USD\n @return Devuelve el saldo del contrato en USD"
									},
									"functionSelector": "93295c1c",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verTotalContrato",
									"nameLocation": "13668:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13684:2:10"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "13710:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13710:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:6:10"
									},
									"scope": 1732,
									"src": "13659:95:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "14042:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "_nuevoOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "14070:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1726,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "14052:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14052:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "14052:30:10"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "13760:212:10",
										"text": "@notice Función para traspasar el contrato a otro dueño\n @param _nuevoOwner Será la dirección del nuevo propietario del contrato\n @dev El modificador de onlyOwner es necesario para seguridad"
									},
									"functionSelector": "8648840a",
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1723,
												"name": "onlyOwner",
												"nameLocations": [
													"14032:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "14032:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14032:9:10"
										}
									],
									"name": "transferirOwner",
									"nameLocation": "13986:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "_nuevoOwner",
												"nameLocation": "14010:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "14002:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14002:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14001:21:10"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14042:0:10"
									},
									"scope": 1732,
									"src": "13977:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1733,
							"src": "736:13356:10",
							"usedErrors": [
								59,
								64,
								438,
								1019,
								1024,
								1031,
								1036,
								1041,
								1046,
								1051,
								1058,
								1063,
								1068,
								1073
							],
							"usedEvents": [
								70,
								1005,
								1012
							]
						}
					],
					"src": "33:14059:10"
				},
				"id": 10
			}
		}
	}
}